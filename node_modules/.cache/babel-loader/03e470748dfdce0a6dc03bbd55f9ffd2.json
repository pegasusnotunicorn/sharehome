{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js\";\nimport React from 'react';\nimport { PDFViewer, BlobProvider } from '@react-pdf/renderer';\nimport { pdfjs, Document, Page } from 'react-pdf'; //custom files\n\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardConstants from './CardConstants.js';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`; //wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\n\nfunction CardEditorWrapper(props) {\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard; //PDF document\n\n  const cardDocument = /*#__PURE__*/React.createElement(PDFDocument, {\n    name: currentCard.name,\n    japaneseName: currentCard.japaneseName,\n    age: currentCard.age,\n    job: currentCard.job,\n    image: currentCard.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }); //returns a new card details object with newValue for newProp\n\n  const updateCurrentCard = (newProp, newValue) => {\n    return { ...currentCard,\n      [newProp]: newValue\n    };\n  }; //event handlers for inputs\n\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'image':\n        const tempImage = e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : CardConstants.defaultImage;\n        setCurrentCard(updateCurrentCard(\"image\", tempImage));\n        break;\n\n      case 'download':\n        downloadPDFFile(cardDocument, currentCard.name + \".pdf\");\n        break;\n\n      default:\n        setCurrentCard(updateCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }; // <PDFViewer scrolling=\"no\" className=\"PDFViewer\">\n  //   {cardDocument}\n  // </PDFViewer>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PDFWrapper\",\n    style: {\n      height: CardConstants.PDFDimensions.height * 2,\n      width: CardConstants.PDFDimensions.width * 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlobProvider, {\n    document: cardDocument,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, ({\n    blob,\n    url,\n    loading,\n    error\n  }) => {\n    if (loading || error) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 22\n        }\n      }, \"Loading\");\n    } else {\n      console.log(url, \"wtf\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Document, {\n        file: url,\n        onLoadSuccess: () => {\n          console.log(\"woo\");\n        },\n        renderTextLayer: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Page, {\n        pageNumber: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      })));\n    }\n  })), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleInputChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditorWrapper;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js"],"names":["React","PDFViewer","BlobProvider","pdfjs","Document","Page","downloadPDFFile","PDFDocument","InputWrapper","CardConstants","GlobalWorkerOptions","workerSrc","version","CardEditorWrapper","props","currentCard","setCurrentCard","cardDocument","name","japaneseName","age","job","image","updateCurrentCard","newProp","newValue","handleInputChange","e","target","tempImage","files","URL","createObjectURL","defaultImage","value","height","PDFDimensions","width","blob","url","loading","error","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PDFViewer, BlobProvider } from '@react-pdf/renderer';\nimport { pdfjs, Document, Page } from 'react-pdf'\n\n//custom files\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardConstants from './CardConstants.js';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditorWrapper(props){\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard;\n\n  //PDF document\n  const cardDocument = (\n    <PDFDocument\n      name={currentCard.name}\n      japaneseName={currentCard.japaneseName}\n      age={currentCard.age}\n      job={currentCard.job}\n      image={currentCard.image}\n    />\n  )\n\n  //returns a new card details object with newValue for newProp\n  const updateCurrentCard = (newProp, newValue) => {\n    return {\n      ...currentCard,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleInputChange = (e) =>{\n    switch (e.target.name) {\n      case 'image':\n        const tempImage = (e.target.files[0]) ? URL.createObjectURL(e.target.files[0]) : CardConstants.defaultImage;\n        setCurrentCard(updateCurrentCard(\"image\", tempImage));\n        break;\n      case 'download':\n        downloadPDFFile(cardDocument, currentCard.name + \".pdf\");\n        break;\n      default:\n        setCurrentCard(updateCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }\n\n  // <PDFViewer scrolling=\"no\" className=\"PDFViewer\">\n  //   {cardDocument}\n  // </PDFViewer>\n\n  return (\n    <div>\n      <div className=\"PDFWrapper\" style={{\n        height: CardConstants.PDFDimensions.height * 2,\n        width: CardConstants.PDFDimensions.width * 2\n      }}>\n        <BlobProvider document={cardDocument}>\n          {({ blob, url, loading, error }) => {\n            if (loading || error){\n              return <h1>Loading</h1>\n            }\n            else {\n              console.log(url, \"wtf\");\n              return (\n                <div>\n                  <Document\n                    file={url}\n                    onLoadSuccess={()=>{console.log(\"woo\")}}\n                    renderTextLayer={false}\n                  >\n                    <Page pageNumber={1} />\n                  </Document>\n                </div>\n              )\n            }\n          }}\n        </BlobProvider>\n      </div>\n      <InputWrapper handleInputChange={handleInputChange}/>\n    </div>\n  );\n}\n\nexport default CardEditorWrapper;\n"]},"metadata":{},"sourceType":"module"}