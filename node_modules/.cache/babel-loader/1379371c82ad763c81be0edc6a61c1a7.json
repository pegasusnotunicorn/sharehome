{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js\";\nimport React, { useState } from 'react'; //custom files\n\nimport * as CardConstants from './CardConstants.js';\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js'; //wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\n\nfunction CardEditor(props) {\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard; //returns a new card details object with newValue for newProp\n\n  const updateCurrentCard = (newProp, newValue, object) => {\n    let tempObject = object ? object : currentCard;\n    return { ...tempObject,\n      [newProp]: newValue\n    };\n  }; //event handlers for inputs\n\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'image':\n        const tempImageURL = e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : CardConstants.defaultImage;\n        const tempImageName = e.target.files[0] ? e.target.files[0].name : CardConstants.defaultImage;\n\n        if (e.target.files[0]) {\n          let img = new Image();\n          let objectUrl = URL.createObjectURL(e.target.files[0]);\n\n          img.onload = function () {\n            console.log(this.width + \" \" + this.height);\n            URL.revokeObjectURL(objectUrl);\n          };\n\n          img.src = objectUrl;\n        }\n\n        let tempCard = updateCurrentCard(\"image\", {\n          imageURL: tempImageURL,\n          imageName: tempImageName\n        });\n        setCurrentCard(tempCard);\n        break;\n\n      case 'download':\n        downloadPDFFile( /*#__PURE__*/React.createElement(PDFDocument, {\n          cards: props.cards,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }), currentCard.name + \".pdf\");\n        break;\n\n      default:\n        setCurrentCard(updateCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }; //handling image movement\n\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const [imageCoordinates, setimageCoordinates] = useState({\n    objectPosition: \"50% 50%\"\n  });\n\n  const handleMouseDown = e => {\n    setMouseDown(true);\n  };\n\n  const handleMouseUp = e => {\n    setMouseDown(false);\n  };\n\n  const handleMouseMove = e => {\n    if (mouseDown) {\n      console.log(e.target);\n      setimageCoordinates({\n        objectPosition: \"50%\" + Math.round(e.clientY / e.target.clientHeight * 100) + \"%\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardViewer, {\n    currentCard: currentCard,\n    handleMouseDown: handleMouseDown,\n    handleMouseUp: handleMouseUp,\n    handleMouseMove: handleMouseMove,\n    imageCoordinates: imageCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleInputChange: handleInputChange,\n    currentCard: currentCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditor;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js"],"names":["React","useState","CardConstants","PDFDocument","downloadPDFFile","CardViewer","InputWrapper","CardEditor","props","currentCard","setCurrentCard","updateCurrentCard","newProp","newValue","object","tempObject","handleInputChange","e","target","name","tempImageURL","files","URL","createObjectURL","defaultImage","tempImageName","img","Image","objectUrl","onload","console","log","width","height","revokeObjectURL","src","tempCard","imageURL","imageName","cards","value","mouseDown","setMouseDown","imageCoordinates","setimageCoordinates","objectPosition","handleMouseDown","handleMouseUp","handleMouseMove","Math","round","clientY","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n//custom files\nimport * as CardConstants from './CardConstants.js';\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js';\n\n//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditor(props){\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard;\n\n  //returns a new card details object with newValue for newProp\n  const updateCurrentCard = (newProp, newValue, object) => {\n    let tempObject = (object) ? object : currentCard;\n    return {\n      ...tempObject,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case 'image':\n        const tempImageURL = (e.target.files[0]) ? URL.createObjectURL(e.target.files[0]) : CardConstants.defaultImage;\n        const tempImageName = (e.target.files[0]) ? e.target.files[0].name : CardConstants.defaultImage;\n\n        if (e.target.files[0]){\n          let img = new Image();\n          let objectUrl = URL.createObjectURL(e.target.files[0]);\n          img.onload = function () {\n            console.log(this.width + \" \" + this.height);\n            URL.revokeObjectURL(objectUrl);\n          };\n          img.src = objectUrl;\n        }\n\n        let tempCard = updateCurrentCard(\"image\", {\n          imageURL : tempImageURL,\n          imageName : tempImageName,\n        });\n\n        setCurrentCard(tempCard);\n        break;\n      case 'download':\n        downloadPDFFile(<PDFDocument\n          cards={props.cards}\n        />, currentCard.name + \".pdf\");\n        break;\n      default:\n        setCurrentCard(updateCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }\n\n  //handling image movement\n  const [mouseDown, setMouseDown] = useState(false);\n  const [imageCoordinates, setimageCoordinates] = useState({\n    objectPosition: \"50% 50%\"\n  });\n\n  const handleMouseDown = (e) => {\n    setMouseDown(true);\n  }\n  const handleMouseUp = (e) => {\n    setMouseDown(false);\n  }\n  const handleMouseMove = (e) => {\n    if (mouseDown){\n      console.log(e.target)\n      setimageCoordinates({\n        objectPosition: \"50%\" + Math.round((e.clientY / e.target.clientHeight)*100) + \"%\"\n      });\n    }\n  }\n\n  return (\n    <div>\n      <CardViewer\n        currentCard={currentCard}\n        handleMouseDown={handleMouseDown}\n        handleMouseUp={handleMouseUp}\n        handleMouseMove={handleMouseMove}\n        imageCoordinates={imageCoordinates}\n      />\n      <InputWrapper\n        handleInputChange={handleInputChange}\n        currentCard={currentCard}\n      />\n    </div>\n  );\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}