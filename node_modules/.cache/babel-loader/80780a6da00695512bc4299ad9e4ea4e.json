{"ast":null,"code":"//variables for printing in inches\nconst DPI = 72; //(dots per inch)\n\nlet bleed = 0.125;\nlet width = 3.5;\nlet height = 2.5;\nconst mainFont = 25;\nconst subFont = 15; //turn on bleed;\n\nwidth += bleed;\nheight += bleed; //multiply by DPI;\n\nwidth = width * DPI;\nheight = height * DPI;\nbleed = bleed * DPI; //how much to magnify the HTML PDF viewer\n\nexport const magnifyValue = 2; //dimensions of the PDF (used to style both PDF and the PDF Wrapper DIV)\n//points = inches x dpi (dots per inch)\n//double padding for bleed + real padding\n\nexport const PDFDimensions = {\n  width: width,\n  height: height,\n  padding: 2 * bleed,\n  mainFont: mainFont,\n  subFont: subFont\n}; //function to get an image's width + height after object-fit: cover\n\nexport function getCoverFitObjectXY(objectWidth, objectHeight, viewerWidth, viewerHeight) {\n  let viewerRatio = viewerWidth / viewerHeight;\n  let objectRatio = objectWidth / objectHeight; //get width and height of the object after fit\n\n  let tempObjectWidth, tempObjectHeight;\n\n  if (objectRatio < viewerRatio) {\n    tempObjectWidth = viewerWidth;\n    tempObjectHeight = viewerWidth / objectRatio;\n  } else {\n    tempObjectWidth = viewerHeight * objectRatio;\n    tempObjectHeight = viewerHeight;\n  }\n\n  return {\n    x: viewerWidth / 2 - tempObjectWidth / 2,\n    y: viewerHeight / 2 - tempObjectHeight / 2\n  };\n} //default card variables\n\nconst defaultName = \"Candace Green\";\nconst defaultJapaneseName = \"キャンディス•グリーン\";\nconst defaultAge = \"21\";\nconst defaultJob = \"Influencer\";\nconst defaultImageXY = getCoverFitObjectXY(1000, 1400, width, height);\nconst defaultImageXYViewer = getCoverFitObjectXY(1000, 1400, width * magnifyValue, height * magnifyValue); //default image variables\n\nconst defaultImage = {\n  url: \"/images/test.jpg\",\n  name: \"test.jpg\",\n  x: defaultImageXY.x,\n  y: defaultImageXY.y,\n  viewerX: defaultImageXYViewer.x,\n  viewerY: defaultImageXYViewer.y\n};\nexport function getDefaultCardObject() {\n  return {\n    name: defaultName,\n    japaneseName: defaultJapaneseName,\n    age: defaultAge,\n    job: defaultJob,\n    image: defaultImage\n  };\n}","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardConstants.js"],"names":["DPI","bleed","width","height","mainFont","subFont","magnifyValue","PDFDimensions","padding","getCoverFitObjectXY","objectWidth","objectHeight","viewerWidth","viewerHeight","viewerRatio","objectRatio","tempObjectWidth","tempObjectHeight","x","y","defaultName","defaultJapaneseName","defaultAge","defaultJob","defaultImageXY","defaultImageXYViewer","defaultImage","url","name","viewerX","viewerY","getDefaultCardObject","japaneseName","age","job","image"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,EAAZ,C,CAAkB;;AAClB,IAAIC,KAAK,GAAG,KAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACAH,KAAK,IAAID,KAAT;AACAE,MAAM,IAAIF,KAAV,C,CAEA;;AACAC,KAAK,GAAGA,KAAK,GAAGF,GAAhB;AACAG,MAAM,GAAGA,MAAM,GAAGH,GAAlB;AACAC,KAAK,GAAGA,KAAK,GAAGD,GAAhB,C,CAEA;;AACA,OAAO,MAAMM,YAAY,GAAG,CAArB,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG;AAC3BL,EAAAA,KAAK,EAAEA,KADoB;AAE3BC,EAAAA,MAAM,EAAEA,MAFmB;AAG3BK,EAAAA,OAAO,EAAE,IAAIP,KAHc;AAI3BG,EAAAA,QAAQ,EAAEA,QAJiB;AAK3BC,EAAAA,OAAO,EAAEA;AALkB,CAAtB,C,CAQP;;AACA,OAAO,SAASI,mBAAT,CAA6BC,WAA7B,EAA0CC,YAA1C,EAAwDC,WAAxD,EAAqEC,YAArE,EAAkF;AACvF,MAAIC,WAAW,GAAGF,WAAW,GAAGC,YAAhC;AACA,MAAIE,WAAW,GAAGL,WAAW,GAAGC,YAAhC,CAFuF,CAIvF;;AACA,MAAIK,eAAJ,EAAqBC,gBAArB;;AACA,MAAIF,WAAW,GAAGD,WAAlB,EAA+B;AAC7BE,IAAAA,eAAe,GAAGJ,WAAlB;AACAK,IAAAA,gBAAgB,GAAGL,WAAW,GAAGG,WAAjC;AACD,GAHD,MAGO;AACLC,IAAAA,eAAe,GAAGH,YAAY,GAAGE,WAAjC;AACAE,IAAAA,gBAAgB,GAAGJ,YAAnB;AACD;;AAED,SAAO;AACLK,IAAAA,CAAC,EAAGN,WAAW,GAAC,CAAb,GAAmBI,eAAe,GAAC,CADjC;AAELG,IAAAA,CAAC,EAAGN,YAAY,GAAC,CAAd,GAAoBI,gBAAgB,GAAC;AAFnC,GAAP;AAID,C,CAED;;AACA,MAAMG,WAAW,GAAG,eAApB;AACA,MAAMC,mBAAmB,GAAG,aAA5B;AACA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,cAAc,GAAGf,mBAAmB,CAAC,IAAD,EAAO,IAAP,EAAaP,KAAb,EAAoBC,MAApB,CAA1C;AACA,MAAMsB,oBAAoB,GAAGhB,mBAAmB,CAAC,IAAD,EAAO,IAAP,EAAaP,KAAK,GAAGI,YAArB,EAAmCH,MAAM,GAAGG,YAA5C,CAAhD,C,CAEA;;AACA,MAAMoB,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,kBADc;AAEnBC,EAAAA,IAAI,EAAE,UAFa;AAGnBV,EAAAA,CAAC,EAAEM,cAAc,CAACN,CAHC;AAInBC,EAAAA,CAAC,EAAEK,cAAc,CAACL,CAJC;AAKnBU,EAAAA,OAAO,EAAEJ,oBAAoB,CAACP,CALX;AAMnBY,EAAAA,OAAO,EAAEL,oBAAoB,CAACN;AANX,CAArB;AASA,OAAO,SAASY,oBAAT,GAA+B;AACpC,SAAO;AACLH,IAAAA,IAAI,EAAGR,WADF;AAELY,IAAAA,YAAY,EAAGX,mBAFV;AAGLY,IAAAA,GAAG,EAAGX,UAHD;AAILY,IAAAA,GAAG,EAAGX,UAJD;AAKLY,IAAAA,KAAK,EAAGT;AALH,GAAP;AAOD","sourcesContent":["//variables for printing in inches\nconst DPI = 72;   //(dots per inch)\nlet bleed = 0.125;\nlet width = 3.5;\nlet height = 2.5;\nconst mainFont = 25;\nconst subFont = 15;\n\n//turn on bleed;\nwidth += bleed;\nheight += bleed;\n\n//multiply by DPI;\nwidth = width * DPI;\nheight = height * DPI;\nbleed = bleed * DPI;\n\n//how much to magnify the HTML PDF viewer\nexport const magnifyValue = 2;\n\n//dimensions of the PDF (used to style both PDF and the PDF Wrapper DIV)\n//points = inches x dpi (dots per inch)\n//double padding for bleed + real padding\nexport const PDFDimensions = {\n  width: width,\n  height: height,\n  padding: 2 * bleed,\n  mainFont: mainFont,\n  subFont: subFont\n}\n\n//function to get an image's width + height after object-fit: cover\nexport function getCoverFitObjectXY(objectWidth, objectHeight, viewerWidth, viewerHeight){\n  let viewerRatio = viewerWidth / viewerHeight;\n  let objectRatio = objectWidth / objectHeight;\n\n  //get width and height of the object after fit\n  let tempObjectWidth, tempObjectHeight;\n  if (objectRatio < viewerRatio) {\n    tempObjectWidth = viewerWidth;\n    tempObjectHeight = viewerWidth / objectRatio;\n  } else {\n    tempObjectWidth = viewerHeight * objectRatio;\n    tempObjectHeight = viewerHeight;\n  }\n\n  return {\n    x: (viewerWidth/2) - (tempObjectWidth/2),\n    y: (viewerHeight/2) - (tempObjectHeight/2),\n  };\n}\n\n//default card variables\nconst defaultName = \"Candace Green\";\nconst defaultJapaneseName = \"キャンディス•グリーン\";\nconst defaultAge = \"21\";\nconst defaultJob = \"Influencer\";\nconst defaultImageXY = getCoverFitObjectXY(1000, 1400, width, height);\nconst defaultImageXYViewer = getCoverFitObjectXY(1000, 1400, width * magnifyValue, height * magnifyValue);\n\n//default image variables\nconst defaultImage = {\n  url: \"/images/test.jpg\",\n  name: \"test.jpg\",\n  x: defaultImageXY.x,\n  y: defaultImageXY.y,\n  viewerX: defaultImageXYViewer.x,\n  viewerY: defaultImageXYViewer.y,\n};\n\nexport function getDefaultCardObject(){\n  return {\n    name : defaultName,\n    japaneseName : defaultJapaneseName,\n    age : defaultAge,\n    job : defaultJob,\n    image : defaultImage,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}