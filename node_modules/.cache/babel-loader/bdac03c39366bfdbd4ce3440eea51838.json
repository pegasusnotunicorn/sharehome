{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PDFViewer, PDFDownloadLink, Font } from '@react-pdf/renderer';\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardEditorConstants from './CardEditorConstants.js'; //fonts\n\nimport InterstateExtraLightCondensed from \"../../css/Interstate-ExtraLight-Cond.ttf\";\nimport GenShinGothic from \"../../css/GenShinGothic-Monospace-ExtraLight.ttf\";\nFont.register({\n  family: 'Interstate Extra Light Condensed',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  src: InterstateExtraLightCondensed\n});\nFont.register({\n  family: 'Genshin Gothic Monospace ExtraLight',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  src: GenShinGothic\n}); //wrapper for card editor section (including input + PDF)\n\nfunction CardEditorWrapper() {\n  const [name, setName] = useState(CardEditorConstants.defaultName);\n  const [japaneseName, setJapaneseName] = useState(CardEditorConstants.defaultJapaneseName);\n  const [age, setAge] = useState(CardEditorConstants.defaultAge);\n  const [job, setJob] = useState(CardEditorConstants.defaultJob);\n  const [image, setImage] = useState(CardEditorConstants.defaultImagePath);\n  useEffect(() => {\n    // Update the document title using the browser API\n    alert(\"oh baby\");\n  }); //PDF document\n\n  const myDoc = /*#__PURE__*/React.createElement(PDFDocument, {\n    name: name,\n    job: job,\n    age: age,\n    image: image,\n    japaneseName: japaneseName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }); //event handler to change the name state in react\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  }; //event handler to change the name state in react\n\n\n  const handleJapaneseNameChange = e => {\n    setJapaneseName(e.target.value);\n  }; //event handler to change the age state in react\n\n\n  const handleAgeChange = e => {\n    setAge(e.target.value);\n  }; //event handler to change the job state in react\n\n\n  const handleJobChange = e => {\n    setJob(e.target.value);\n  }; //event handler to change the image state in react\n\n\n  const handleImageChange = e => {\n    const tempImage = e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : CardEditorConstants.defaultImagePath;\n    setImage(tempImage);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PDFWrapper\",\n    style: {\n      height: CardEditorConstants.PDFDimensions.height * 2,\n      width: CardEditorConstants.PDFDimensions.width * 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    scrolling: \"no\",\n    className: \"PDFViewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, myDoc)), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleNameChange: handleNameChange,\n    handleJapaneseNameChange: handleJapaneseNameChange,\n    handleAgeChange: handleAgeChange,\n    handleJobChange: handleJobChange,\n    handleImageChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PDFDownloadLink, {\n    document: myDoc,\n    fileName: name + \".pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, ({\n    blob,\n    url,\n    loading,\n    error\n  }) => loading ? 'Loading document...' : 'Download now!'));\n}\n\nexport default CardEditorWrapper;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js"],"names":["React","useState","useEffect","PDFViewer","PDFDownloadLink","Font","PDFDocument","InputWrapper","CardEditorConstants","InterstateExtraLightCondensed","GenShinGothic","register","family","fontStyle","fontWeight","src","CardEditorWrapper","name","setName","defaultName","japaneseName","setJapaneseName","defaultJapaneseName","age","setAge","defaultAge","job","setJob","defaultJob","image","setImage","defaultImagePath","alert","myDoc","handleNameChange","e","target","value","handleJapaneseNameChange","handleAgeChange","handleJobChange","handleImageChange","tempImage","files","URL","createObjectURL","height","PDFDimensions","width","blob","url","loading","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\n\nimport { PDFViewer, PDFDownloadLink, Font} from '@react-pdf/renderer';\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardEditorConstants from './CardEditorConstants.js';\n\n//fonts\nimport InterstateExtraLightCondensed from \"../../css/Interstate-ExtraLight-Cond.ttf\";\nimport GenShinGothic from \"../../css/GenShinGothic-Monospace-ExtraLight.ttf\";\nFont.register({\n  family: 'Interstate Extra Light Condensed',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  src: InterstateExtraLightCondensed\n});\nFont.register({\n  family: 'Genshin Gothic Monospace ExtraLight',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  src: GenShinGothic\n});\n\n//wrapper for card editor section (including input + PDF)\nfunction CardEditorWrapper(){\n  const [name, setName] = useState(CardEditorConstants.defaultName);\n  const [japaneseName, setJapaneseName] = useState(CardEditorConstants.defaultJapaneseName);\n  const [age, setAge] = useState(CardEditorConstants.defaultAge);\n  const [job, setJob] = useState(CardEditorConstants.defaultJob);\n  const [image, setImage] = useState(CardEditorConstants.defaultImagePath);\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    alert(\"oh baby\");\n  });\n\n  //PDF document\n  const myDoc = (\n    <PDFDocument\n      name={name}\n      job={job}\n      age={age}\n      image={image}\n      japaneseName={japaneseName}\n    />);\n\n  //event handler to change the name state in react\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  }\n\n  //event handler to change the name state in react\n  const handleJapaneseNameChange = (e) => {\n    setJapaneseName(e.target.value);\n  }\n\n  //event handler to change the age state in react\n  const handleAgeChange = (e) => {\n    setAge(e.target.value);\n  }\n\n  //event handler to change the job state in react\n  const handleJobChange = (e) => {\n    setJob(e.target.value);\n  }\n\n  //event handler to change the image state in react\n  const handleImageChange = (e) => {\n    const tempImage = (e.target.files[0]) ? URL.createObjectURL(e.target.files[0]) : CardEditorConstants.defaultImagePath;\n    setImage(tempImage);\n  }\n\n  return (\n    <div>\n      <div className=\"PDFWrapper\" style={{\n        height: CardEditorConstants.PDFDimensions.height * 2,\n        width: CardEditorConstants.PDFDimensions.width * 2\n      }}>\n        <PDFViewer scrolling=\"no\" className=\"PDFViewer\">\n          {myDoc}\n        </PDFViewer>\n      </div>\n      <InputWrapper\n        handleNameChange={handleNameChange}\n        handleJapaneseNameChange={handleJapaneseNameChange}\n        handleAgeChange={handleAgeChange}\n        handleJobChange={handleJobChange}\n        handleImageChange={handleImageChange}\n      />\n      <PDFDownloadLink document={myDoc} fileName={name + \".pdf\"}>\n        {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n      </PDFDownloadLink>\n    </div>\n  );\n}\n\nexport default CardEditorWrapper;\n"]},"metadata":{},"sourceType":"module"}