{"ast":null,"code":"import _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/extends';\nimport React, { Fragment } from 'react';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport BlobStream from 'blob-stream';\nimport ReactFiberReconciler from 'react-reconciler';\nimport { unstable_scheduleCallback, unstable_cancelCallback } from 'scheduler';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport PDFDocument, { PDFFont } from '@react-pdf/pdfkit';\nimport Yoga from 'yoga-layout-prebuilt';\nimport { mergeDeepWith, isNil, compose, equals, type, toPairsIn, pick, pathOr, last, propEq, complement, prop } from 'ramda';\nimport matchMedia from 'media-engine';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport PDFRenderer$1 from '@react-pdf/textkit/renderers/pdf';\nimport AttributedString from '@react-pdf/textkit/attributedString';\nimport 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\nimport emojiRegex from 'emoji-regex';\nimport PNG from '@react-pdf/png-js';\nimport _wrapPages from 'page-wrapping';\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = __DEV__ ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : function () {};\n\nvar Root = /*#__PURE__*/function () {\n  function Root() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  var _proto = Root.prototype;\n\n  _proto.appendChild = function appendChild(child) {\n    this.document = child;\n  };\n\n  _proto.removeChild = function removeChild() {\n    this.document.cleanup();\n    this.document = null;\n  };\n\n  _proto.markDirty = function markDirty() {\n    this.isDirty = true;\n  };\n\n  _proto.cleanup = function cleanup() {\n    this.document.cleanup();\n  };\n\n  _proto.finish = function finish() {\n    this.document.finish();\n  };\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.instance = new PDFDocument({\n                autoFirstPage: false\n              });\n              _context.next = 3;\n              return this.document.render();\n\n            case 3:\n              this.cleanup();\n              this.isDirty = false;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Root, [{\n    key: \"name\",\n    get: function get() {\n      return 'Root';\n    }\n  }]);\n\n  return Root;\n}();\n\nvar upperFirst = function upperFirst(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nvar isPercent = function isPercent(value) {\n  return /((-)?\\d+\\.?\\d*)%/g.exec(value);\n};\n\nvar matchPercent = function matchPercent(value) {\n  var match = isPercent(value);\n\n  if (match) {\n    var _value = parseFloat(match[1], 10);\n\n    var percent = _value / 100;\n    return {\n      value: _value,\n      percent: percent,\n      absValue: Math.abs(_value),\n      absPercent: Math.abs(percent)\n    };\n  }\n\n  return null;\n};\n\nvar YOGA_CONFIG = Yoga.Config.create();\nYOGA_CONFIG.setPointScaleFactor(0);\n\nvar Node = /*#__PURE__*/function () {\n  function Node() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createWithConfig(YOGA_CONFIG);\n  }\n\n  var _proto = Node.prototype;\n\n  _proto.appendChild = function appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  };\n\n  _proto.appendChildBefore = function appendChildBefore(child, beforeChild) {\n    var index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    var index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n\n    child.cleanup();\n  };\n\n  _proto.removeAllChilds = function removeAllChilds() {\n    var children = [].concat(this.children);\n\n    for (var i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  };\n\n  _proto.remove = function remove() {\n    this.parent.removeChild(this);\n  };\n\n  _proto.setDimension = function setDimension(attr, value) {\n    var fixedMethod = \"set\" + upperFirst(attr);\n    var percentMethod = fixedMethod + \"Percent\";\n    var percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  };\n\n  _proto.setPosition = function setPosition(edge, value) {\n    var percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  };\n\n  _proto.setPadding = function setPadding(edge, value) {\n    var percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  };\n\n  _proto.setMargin = function setMargin(edge, value) {\n    var percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  };\n\n  _proto.setBorder = function setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n\n    this.layout.setBorder(edge, value);\n  };\n\n  _proto.getAbsoluteLayout = function getAbsoluteLayout() {\n    var parent = this.parent;\n    var parentLayout = parent && parent.getAbsoluteLayout ? parent.getAbsoluteLayout() : {\n      left: 0,\n      top: 0\n    };\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width\n    };\n  };\n\n  _proto.copyStyle = function copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  };\n\n  _proto.calculateLayout = function calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  };\n\n  _proto.isEmpty = function isEmpty() {\n    return this.children.length === 0;\n  };\n\n  _proto.markDirty = function markDirty() {\n    return this.layout.markDirty();\n  };\n\n  _proto.onAppendDynamically = function onAppendDynamically() {};\n\n  _proto.cleanup = function cleanup() {\n    this.children.forEach(function (c) {\n      return c.cleanup();\n    });\n    this.layout.unsetMeasureFunc();\n    Yoga.Node.destroy(this.layout);\n  };\n\n  _createClass(Node, [{\n    key: \"position\",\n    get: function get() {\n      return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE ? 'absolute' : 'relative';\n    },\n    set: function set(value) {\n      this.layout.setPositionType(value === 'absolute' ? Yoga.POSITION_TYPE_ABSOLUTE : Yoga.POSITION_TYPE_RELATIVE);\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.layout.getComputedTop() || 0;\n    },\n    set: function set(value) {\n      this.setPosition(Yoga.EDGE_TOP, value);\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      return this.layout.getComputedLeft() || 0;\n    },\n    set: function set(value) {\n      this.setPosition(Yoga.EDGE_LEFT, value);\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      return this.layout.getComputedRight() || 0;\n    },\n    set: function set(value) {\n      this.setPosition(Yoga.EDGE_RIGHT, value);\n    }\n  }, {\n    key: \"bottom\",\n    get: function get() {\n      return this.layout.getComputedBottom() || 0;\n    },\n    set: function set(value) {\n      this.setPosition(Yoga.EDGE_BOTTOM, value);\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.layout.getComputedWidth();\n    },\n    set: function set(value) {\n      this.setDimension('width', value);\n    }\n  }, {\n    key: \"minWidth\",\n    get: function get() {\n      return this.layout.getMinWidth().value;\n    },\n    set: function set(value) {\n      this.setDimension('minWidth', value);\n    }\n  }, {\n    key: \"maxWidth\",\n    get: function get() {\n      return this.layout.getMaxWidth().value;\n    },\n    set: function set(value) {\n      this.setDimension('maxWidth', value);\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.layout.getComputedHeight();\n    },\n    set: function set(value) {\n      this.setDimension('height', value);\n    }\n  }, {\n    key: \"minHeight\",\n    get: function get() {\n      return this.layout.getMinHeight().value;\n    },\n    set: function set(value) {\n      this.setDimension('minHeight', value);\n    }\n  }, {\n    key: \"maxHeight\",\n    get: function get() {\n      return this.layout.getMaxHeight().value;\n    },\n    set: function set(value) {\n      this.setDimension('maxHeight', value);\n    }\n  }, {\n    key: \"paddingTop\",\n    get: function get() {\n      return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n    },\n    set: function set(value) {\n      this.setPadding(Yoga.EDGE_TOP, value);\n    }\n  }, {\n    key: \"paddingRight\",\n    get: function get() {\n      return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n    },\n    set: function set(value) {\n      this.setPadding(Yoga.EDGE_RIGHT, value);\n    }\n  }, {\n    key: \"paddingBottom\",\n    get: function get() {\n      return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n    },\n    set: function set(value) {\n      this.setPadding(Yoga.EDGE_BOTTOM, value);\n    }\n  }, {\n    key: \"paddingLeft\",\n    get: function get() {\n      return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n    },\n    set: function set(value) {\n      this.setPadding(Yoga.EDGE_LEFT, value);\n    }\n  }, {\n    key: \"marginTop\",\n    get: function get() {\n      return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n    },\n    set: function set(value) {\n      this.setMargin(Yoga.EDGE_TOP, value);\n    }\n  }, {\n    key: \"marginRight\",\n    get: function get() {\n      return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n    },\n    set: function set(value) {\n      this.setMargin(Yoga.EDGE_RIGHT, value);\n    }\n  }, {\n    key: \"marginBottom\",\n    get: function get() {\n      return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n    },\n    set: function set(value) {\n      this.setMargin(Yoga.EDGE_BOTTOM, value);\n    }\n  }, {\n    key: \"marginLeft\",\n    get: function get() {\n      return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n    },\n    set: function set(value) {\n      this.setMargin(Yoga.EDGE_LEFT, value);\n    }\n  }, {\n    key: \"borderTopWidth\",\n    get: function get() {\n      return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n    },\n    set: function set(value) {\n      this.setBorder(Yoga.EDGE_TOP, value);\n    }\n  }, {\n    key: \"borderRightWidth\",\n    get: function get() {\n      return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n    },\n    set: function set(value) {\n      this.setBorder(Yoga.EDGE_RIGHT, value);\n    }\n  }, {\n    key: \"borderBottomWidth\",\n    get: function get() {\n      return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n    },\n    set: function set(value) {\n      this.setBorder(Yoga.EDGE_BOTTOM, value);\n    }\n  }, {\n    key: \"borderLeftWidth\",\n    get: function get() {\n      return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n    },\n    set: function set(value) {\n      this.setBorder(Yoga.EDGE_LEFT, value);\n    }\n  }, {\n    key: \"padding\",\n    get: function get() {\n      return {\n        top: this.paddingTop,\n        right: this.paddingRight,\n        bottom: this.paddingBottom,\n        left: this.paddingLeft\n      };\n    },\n    set: function set(value) {\n      this.paddingTop = value;\n      this.paddingRight = value;\n      this.paddingBottom = value;\n      this.paddingLeft = value;\n    }\n  }, {\n    key: \"margin\",\n    get: function get() {\n      return {\n        top: this.marginTop,\n        right: this.marginRight,\n        bottom: this.marginBottom,\n        left: this.marginLeft\n      };\n    },\n    set: function set(value) {\n      this.marginTop = value;\n      this.marginRight = value;\n      this.marginBottom = value;\n      this.marginLeft = value;\n    }\n  }]);\n\n  return Node;\n}();\n\nvar yogaValue = function yogaValue(prop, value) {\n  var isAlignType = function isAlignType(prop) {\n    return prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n  };\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n\n      break;\n\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n\n      break;\n\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n\n      break;\n\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n\n      break;\n\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n\n      break;\n\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n\n      break;\n\n    default:\n      return value;\n  }\n}; // These are not supported yet\n\n\nvar DPI = 72; // 72pt per inch.\n\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\n\n  if (match) {\n    return {\n      value: parseFloat(match[1], 10),\n      unit: match[2] || 'pt'\n    };\n  }\n\n  return {\n    value: value,\n    unit: undefined\n  };\n};\n\nvar parseScalar = function parseScalar(value, container) {\n  var scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n\n    case 'mm':\n      return scalar.value * (1 / 25.4) * DPI;\n\n    case 'cm':\n      return scalar.value * (1 / 2.54) * DPI;\n\n    case 'vh':\n      if (container.isAutoHeight) {\n        throw new Error('vh unit not supported in auto-height pages. Please specify page height if you want to use vh.');\n      }\n\n      return scalar.value * (container.height / 100);\n\n    case 'vw':\n      return scalar.value * (container.width / 100);\n\n    default:\n      return scalar.value;\n  }\n};\n\nvar isBorderStyle = function isBorderStyle(key, value) {\n  return key.match(/^border/) && typeof value === 'string';\n};\n\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(/(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/);\n}; // Transforms shorthand border values\n\n\nvar processBorders = function processBorders(key, value) {\n  var match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(\"StyleSheet: Invalid '\" + value + \"' for '\" + key + \"'\");\n    }\n  }\n\n  return value;\n};\n\nvar isBoxModelStyle = function isBoxModelStyle(key, value) {\n  return key.match(/^(margin)|(padding)/) && typeof value === 'string';\n};\n\nvar matchBoxModel = function matchBoxModel(value) {\n  return value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\n}; // Transforms shorthand margin and padding values\n\n\nvar processBoxModel = function processBoxModel(key, value) {\n  var match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(\"StyleSheet: Invalid '\" + value + \"' for '\" + key + \"'\");\n    }\n  }\n\n  return value;\n}; // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\n\n\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\n\nvar isFontWeightStyle = function isFontWeightStyle(key) {\n  return key.match(/^fontWeight/);\n};\n\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nvar isObjectPositionStyle = function isObjectPositionStyle(key, value) {\n  return key.match(/^objectPosition/) && typeof value === 'string';\n};\n\nvar matchObjectPosition = function matchObjectPosition(value) {\n  return value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\n}; // Transforms shorthand objectPosition values\n\n\nvar processObjectPosition = function processObjectPosition(key, value) {\n  var match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(\"StyleSheet: Invalid '\" + value + \"' for '\" + key + \"'\");\n    }\n  }\n\n  return value;\n};\n\nvar isTransformOriginStyle = function isTransformOriginStyle(key, value) {\n  return key.match(/^transformOrigin/) && typeof value === 'string';\n};\n\nvar matchTransformOrigin = function matchTransformOrigin(value) {\n  return value.match(/(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g);\n};\n\nvar transformOffsetKeywords = function transformOffsetKeywords(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return value;\n  }\n}; // Transforms shorthand transformOrigin values\n\n\nvar processTransformOrigin = function processTransformOrigin(key, value) {\n  var match = matchTransformOrigin(value);\n\n  if (match) {\n    var result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(\"StyleSheet: Invalid '\" + value + \"' for '\" + key + \"'\");\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true\n  }\n}; // Expand the shorthand properties to isolate every declaration from the others.\n\nvar expandStyles = function expandStyles(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n\n  for (var i = 0; i < propsArray.length; i++) {\n    var key = propsArray[i];\n    var value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          var expandedProps = styleShorthands[key];\n\n          for (var propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nvar transformStyles = function transformStyles(style, container) {\n  var expandedStyles = expandStyles(style);\n  var propsArray = Object.keys(expandedStyles);\n  var resolvedStyle = {};\n\n  for (var i = 0; i < propsArray.length; i++) {\n    var key = propsArray[i];\n    var value = expandedStyles[key];\n    var resolved = void 0;\n\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else if (isFontWeightStyle(key)) {\n      resolved = processFontWeight(value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved, container);\n  }\n\n  return resolvedStyle;\n};\n\nvar create = function create(styles) {\n  return styles;\n};\n\nvar flatten = function flatten(input) {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  var result = input.reduce(function (acc, style) {\n    if (style) {\n      var s = Array.isArray(style) ? flatten(style) : style;\n      Object.keys(s).forEach(function (key) {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n  return result;\n};\n\nvar resolveMediaQueries = function resolveMediaQueries(input, container) {\n  var result = Object.keys(input).reduce(function (acc, key) {\n    var _extends2;\n\n    if (/@media/.test(key)) {\n      var _matchMedia;\n\n      return _extends({}, acc, {}, matchMedia((_matchMedia = {}, _matchMedia[key] = input[key], _matchMedia), container));\n    }\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = input[key], _extends2));\n  }, {});\n  return result;\n};\n\nvar resolve = function resolve(styles, container) {\n  if (!styles) return null;\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles, container);\n  return styles;\n};\n\nvar absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\nvar StyleSheet = {\n  hairlineWidth: 1,\n  create: create,\n  resolve: resolve,\n  flatten: flatten,\n  absoluteFillObject: absoluteFillObject\n};\nvar Debug = {\n  debug: function debug() {\n    var layout = this.getAbsoluteLayout();\n    var padding = this.padding;\n    var margin = this.margin;\n    this.root.instance.save();\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n    this.root.instance.restore();\n  },\n  debugOrigin: function debugOrigin() {\n    if (this.style.transform) {\n      var origin = this.origin;\n      this.root.instance.circle(origin[0], origin[1], 3).fill('red').circle(origin[0], origin[1], 5).stroke('red');\n    }\n  },\n  debugText: function debugText(layout, margin) {\n    var roundedWidth = Math.round(this.width + margin.left + margin.right);\n    var roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n    this.root.instance.fontSize(4).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, layout.left - margin.left, Math.max(layout.top - margin.top - 4, 1));\n  },\n  debugContent: function debugContent(layout, margin, padding) {\n    this.root.instance.fillColor('#a1c6e7').opacity(0.5).rect(layout.left + padding.left, layout.top + padding.top, layout.width - padding.left - padding.right, layout.height - padding.top - padding.bottom).fill();\n  },\n  debugPadding: function debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5); // Padding top\n\n    this.root.instance.rect(layout.left + padding.left, layout.top, layout.width - padding.right - padding.left, padding.top).fill(); // Padding left\n\n    this.root.instance.rect(layout.left, layout.top, padding.left, layout.height).fill(); // Padding right\n\n    this.root.instance.rect(layout.left + layout.width - padding.right, layout.top, padding.right, layout.height).fill(); // Padding bottom\n\n    this.root.instance.rect(layout.left + padding.left, layout.top + layout.height - padding.bottom, layout.width - padding.right - padding.left, padding.bottom).fill();\n  },\n  debugMargin: function debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5); // Margin top\n\n    this.root.instance.rect(layout.left, layout.top - margin.top, layout.width, margin.top).fill(); // Margin left\n\n    this.root.instance.rect(layout.left - margin.left, layout.top - margin.top, margin.left, layout.height + margin.top + margin.bottom).fill(); // Margin right\n\n    this.root.instance.rect(layout.left + layout.width, layout.top - margin.top, margin.right, layout.height + margin.top + margin.bottom).fill(); // Margin bottom\n\n    this.root.instance.rect(layout.left, layout.top + layout.height, layout.width, margin.bottom).fill();\n  }\n}; // Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\n\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  var instance = this.root.instance;\n  var layout = this.getAbsoluteLayout();\n  var borderTopWidth = this.borderTopWidth,\n      borderLeftWidth = this.borderLeftWidth,\n      borderRightWidth = this.borderRightWidth,\n      borderBottomWidth = this.borderBottomWidth;\n  var _this$style = this.style,\n      opacity = _this$style.opacity,\n      _this$style$borderTop = _this$style.borderTopLeftRadius,\n      borderTopLeftRadius = _this$style$borderTop === void 0 ? 0 : _this$style$borderTop,\n      _this$style$borderTop2 = _this$style.borderTopRightRadius,\n      borderTopRightRadius = _this$style$borderTop2 === void 0 ? 0 : _this$style$borderTop2,\n      _this$style$borderBot = _this$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _this$style$borderBot === void 0 ? 0 : _this$style$borderBot,\n      _this$style$borderBot2 = _this$style.borderBottomRightRadius,\n      borderBottomRightRadius = _this$style$borderBot2 === void 0 ? 0 : _this$style$borderBot2,\n      _this$style$borderTop3 = _this$style.borderTopColor,\n      borderTopColor = _this$style$borderTop3 === void 0 ? 'black' : _this$style$borderTop3,\n      _this$style$borderTop4 = _this$style.borderTopStyle,\n      borderTopStyle = _this$style$borderTop4 === void 0 ? 'solid' : _this$style$borderTop4,\n      _this$style$borderLef = _this$style.borderLeftColor,\n      borderLeftColor = _this$style$borderLef === void 0 ? 'black' : _this$style$borderLef,\n      _this$style$borderLef2 = _this$style.borderLeftStyle,\n      borderLeftStyle = _this$style$borderLef2 === void 0 ? 'solid' : _this$style$borderLef2,\n      _this$style$borderRig = _this$style.borderRightColor,\n      borderRightColor = _this$style$borderRig === void 0 ? 'black' : _this$style$borderRig,\n      _this$style$borderRig2 = _this$style.borderRightStyle,\n      borderRightStyle = _this$style$borderRig2 === void 0 ? 'solid' : _this$style$borderRig2,\n      _this$style$borderBot3 = _this$style.borderBottomColor,\n      borderBottomColor = _this$style$borderBot3 === void 0 ? 'black' : _this$style$borderBot3,\n      _this$style$borderBot4 = _this$style.borderBottomStyle,\n      borderBottomStyle = _this$style$borderBot4 === void 0 ? 'solid' : _this$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var width = layout.width,\n      height = layout.height;\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c0 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr); // Move down in case the margin exceedes the radius\n\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord); // Clip inner top right cap\n\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth); // Clip inner top border edge\n\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c5 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip(); // Clip border top cap joins\n\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width;\n  var borderTopColor = style.borderTopColor,\n      borderTopWidth = style.borderTopWidth,\n      borderTopStyle = style.borderTopStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer right border edge\n\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer bottom right cap\n\n  var c0 = rbr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height); // Move left in case the margin exceedes the radius\n\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height); // Clip inner bottom right cap\n\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth); // Ellipse coefficients inner bottom right cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth)); // Clip inner right border edge\n\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth)); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top); // Move right in case the margin exceedes the radius\n\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c5 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderRightColor = style.borderRightColor,\n      borderRightStyle = style.borderRightStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c0 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl); // Move up in case the margin exceedes the radius\n\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord); // Clip inner bottom left cap\n\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord); // Ellipse coefficients inner top right cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA); // Clip inner bottom left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth); // Clip inner bottom border edge\n\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth); // Ellipse coefficients inner top left cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer top left cap\n\n  var c5 = rbr * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip(); // Clip border bottom cap joins\n\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n      borderBottomStyle = style.borderBottomStyle,\n      borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderLeftWidth = style.borderLeftWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer left border edge\n\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c0 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top); // Move right in case the margin exceedes the radius\n\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top); // Clip inner top left cap\n\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth)); // Clip inner left border edge\n\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth)); // Ellipse coefficients inner bottom left cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height); // Move left in case the margin exceedes the radius\n\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c5 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n      borderLeftStyle = style.borderLeftStyle,\n      borderLeftWidth = style.borderLeftWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar Borders = {\n  drawBorders: drawBorders\n}; // This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\n\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar Clipping = {\n  clip: function clip() {\n    var _this$getAbsoluteLayo = this.getAbsoluteLayout(),\n        top = _this$getAbsoluteLayo.top,\n        left = _this$getAbsoluteLayo.left,\n        width = _this$getAbsoluteLayo.width,\n        height = _this$getAbsoluteLayo.height;\n\n    var _this$style = this.style,\n        _this$style$borderTop = _this$style.borderTopLeftRadius,\n        borderTopLeftRadius = _this$style$borderTop === void 0 ? 0 : _this$style$borderTop,\n        _this$style$borderTop2 = _this$style.borderTopRightRadius,\n        borderTopRightRadius = _this$style$borderTop2 === void 0 ? 0 : _this$style$borderTop2,\n        _this$style$borderBot = _this$style.borderBottomRightRadius,\n        borderBottomRightRadius = _this$style$borderBot === void 0 ? 0 : _this$style$borderBot,\n        _this$style$borderBot2 = _this$style.borderBottomLeftRadius,\n        borderBottomLeftRadius = _this$style$borderBot2 === void 0 ? 0 : _this$style$borderBot2; // Border top\n\n    var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    var ctr = rtr * (1.0 - KAPPA$1);\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr); // Border right\n\n    var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    var cbr = rbr * (1.0 - KAPPA$1);\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height); // Border bottom\n\n    var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    var cbl = rbl * (1.0 - KAPPA$1);\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl); // Border left\n\n    var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    var ctl = rtl * (1.0 - KAPPA$1);\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  }\n};\n\nvar getRotation = function getRotation(transform) {\n  var match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    var value = match[1];\n    return match[2] === 'rad' ? value * 180 / Math.PI : value;\n  }\n\n  return 0;\n};\n\nvar getTranslateX = function getTranslateX(transform) {\n  var matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  var matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(transform);\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n  return 0;\n};\n\nvar getTranslateY = function getTranslateY(transform) {\n  var matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  var matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(transform);\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n  return 0;\n};\n\nvar getScaleX = function getScaleX(transform) {\n  var matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  var matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(transform);\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n  return 1;\n};\n\nvar getScaleY = function getScaleY(transform) {\n  var matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  var matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(transform);\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n  return 1;\n};\n\nvar getMatrix = function getMatrix(transform) {\n  var match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(transform);\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nvar applySingleTransformation = function applySingleTransformation(element, transform, origin) {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), {\n      origin: origin\n    });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, {\n      origin: origin\n    });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), {\n      origin: origin\n    });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin: origin\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, {\n      origin: origin\n    });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), {\n      origin: origin\n    });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin: origin\n    });\n  } else if (/matrix/g.test(transform)) {\n    var _element$root$instanc;\n\n    (_element$root$instanc = element.root.instance).transform.apply(_element$root$instanc, getMatrix(transform));\n  }\n};\n\nvar Transformations = {\n  applyTransformations: function applyTransformations() {\n    var match;\n    var re = /[a-zA-Z]+\\([^)]+\\)/g;\n    var origin = this.origin;\n    var transform = this.style && this.style.transform || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  }\n};\n\nvar merge = function merge(a, b) {\n  return isNil(b) ? a : b;\n};\n\nvar deepMerge = function deepMerge(objs) {\n  return objs.reduce(function (acc, obj) {\n    return mergeDeepWith(merge, acc, obj);\n  }, {});\n};\n\nvar isFunction = compose(equals('Function'), type);\nvar inheritedProperties = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\n\nvar Base = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Base, _Node);\n\n  function Base(root, props) {\n    var _this;\n\n    _this = _Node.call(this) || this;\n    _this.root = root;\n    _this.style = {};\n    _this.props = deepMerge([_this.constructor.defaultProps, Base.defaultProps, props]);\n    warning(!_this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n    return _this;\n  }\n\n  var _proto = Base.prototype;\n\n  _proto.appendChild = function appendChild(child) {\n    _Node.prototype.appendChild.call(this, child);\n\n    this.root.markDirty();\n  };\n\n  _proto.appendChildBefore = function appendChildBefore(child, beforeChild) {\n    _Node.prototype.appendChildBefore.call(this, child, beforeChild);\n\n    this.root.markDirty();\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    _Node.prototype.removeChild.call(this, child);\n\n    this.root.markDirty();\n  };\n\n  _proto.update = function update(newProps) {\n    this.props = deepMerge([this.constructor.defaultProps, Base.defaultProps, newProps]);\n    this.root.markDirty();\n  };\n\n  _proto.applyProps = function applyProps() {\n    var _this2 = this;\n\n    this.style = this.resolveStyles();\n    toPairsIn(this.style).map(function (_ref) {\n      var attribute = _ref[0],\n          value = _ref[1];\n\n      _this2.applyStyle(attribute, value);\n    });\n    this.children.forEach(function (child) {\n      if (child.applyProps) child.applyProps();\n    });\n  };\n\n  _proto.resolveStyles = function resolveStyles() {\n    var _this$page = this.page,\n        size = _this$page.size,\n        orientation = _this$page.orientation,\n        isAutoHeight = _this$page.isAutoHeight;\n    var container = {\n      orientation: orientation,\n      isAutoHeight: isAutoHeight,\n      width: size.width,\n      height: size.height\n    };\n    var ownStyles = StyleSheet.resolve(this.props.style, container);\n    var inheritedStyles = this.parent ? pick(inheritedProperties, this.parent.style) : {};\n    return _extends({}, inheritedStyles, {}, ownStyles);\n  };\n\n  _proto.applyStyle = function applyStyle(attribute, value) {\n    if (value === undefined) return;\n    var setter = \"set\" + upperFirst(attribute);\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n\n    }\n  };\n\n  _proto.getLayoutData = function getLayoutData() {\n    var layout = this.getAbsoluteLayout();\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(function (c) {\n        return c.getLayoutData();\n      })\n    };\n  };\n\n  _proto.drawBackgroundColor = function drawBackgroundColor() {\n    var _this$style = this.style,\n        backgroundColor = _this$style.backgroundColor,\n        _this$style$opacity = _this$style.opacity,\n        opacity = _this$style$opacity === void 0 ? 1 : _this$style$opacity;\n\n    var _this$getAbsoluteLayo = this.getAbsoluteLayout(),\n        left = _this$getAbsoluteLayo.left,\n        top = _this$getAbsoluteLayo.top,\n        width = _this$getAbsoluteLayo.width,\n        height = _this$getAbsoluteLayo.height;\n\n    if (backgroundColor) {\n      this.root.instance.save();\n      this.clip();\n      this.root.instance.fillOpacity(opacity).fillColor(backgroundColor).rect(left, top, width, height).fill().restore();\n    }\n  };\n\n  _proto.clone = function clone() {\n    var clone = new this.constructor(this.root, this.props);\n    clone.copyStyle(this);\n    clone.style = this.style;\n    return clone;\n  };\n\n  _proto.onNodeSplit = function onNodeSplit(height, clone) {\n    this.calculateLayout();\n    clone.marginTop = 0;\n    clone.paddingTop = 0; // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  };\n\n  _proto.renderChildren = /*#__PURE__*/function () {\n    var _renderChildren = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              i = 0;\n\n            case 1:\n              if (!(i < this.children.length)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return this.children[i].render();\n\n            case 4:\n              i++;\n              _context.next = 1;\n              break;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function renderChildren() {\n      return _renderChildren.apply(this, arguments);\n    }\n\n    return renderChildren;\n  }();\n\n  _createClass(Base, [{\n    key: \"page\",\n    get: function get() {\n      return this.parent.page;\n    }\n  }, {\n    key: \"wrap\",\n    get: function get() {\n      return this.props.wrap;\n    }\n  }, {\n    key: \"break\",\n    get: function get() {\n      return this.props[\"break\"];\n    },\n    set: function set(value) {\n      this.props[\"break\"] = value;\n    }\n  }, {\n    key: \"fixed\",\n    get: function get() {\n      return this.props.fixed;\n    }\n  }, {\n    key: \"minPresenceAhead\",\n    get: function get() {\n      return this.props.minPresenceAhead;\n    }\n  }, {\n    key: \"absolute\",\n    get: function get() {\n      return this.props.style.position === 'absolute';\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      var _this$style2 = this.style,\n          transformOriginX = _this$style2.transformOriginX,\n          transformOriginY = _this$style2.transformOriginY;\n\n      var _this$getAbsoluteLayo2 = this.getAbsoluteLayout(),\n          left = _this$getAbsoluteLayo2.left,\n          top = _this$getAbsoluteLayo2.top,\n          width = _this$getAbsoluteLayo2.width,\n          height = _this$getAbsoluteLayo2.height;\n\n      var percentX = matchPercent(transformOriginX);\n      var percentY = matchPercent(transformOriginY);\n      var offsetX = percentX ? width * percentX.percent : transformOriginX;\n      var offsetY = percentY ? height * percentY.percent : transformOriginY;\n      return [left + offsetX, top + offsetY];\n    }\n  }]);\n\n  return Base;\n}(Node);\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%'\n  },\n  minPresenceAhead: 0\n};\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transformations);\nvar RULER_WIDTH = 13;\nvar RULER_COLOR = 'white';\nvar RULER_FONT_SIZE = 5;\nvar DEFAULT_RULER_STEPS = 50;\nvar LINE_WIDTH = 0.5;\nvar LINE_COLOR = 'gray';\nvar GRID_COLOR = '#ababab';\n\nvar range = function range(max, steps) {\n  return Array.from({\n    length: Math.ceil(max / steps)\n  }, function (_, i) {\n    return i * steps;\n  });\n};\n\nvar matchPercentage = function matchPercentage(value) {\n  var match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nvar Ruler = {\n  getRulerWidth: function getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler: function hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler: function hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps: function getHorizontalSteps() {\n    var value = this.props.horizontalRulerSteps || this.props.rulerSteps || DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      var percentage = matchPercentage(value);\n\n      if (percentage) {\n        var width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps: function getVerticalSteps() {\n    var value = this.props.verticalRulerSteps || this.props.rulerSteps || DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      var percentage = matchPercentage(value);\n\n      if (percentage) {\n        var height = this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler: function renderRuler() {\n    var hasHorizontalRuler = this.hasHorizontalRuler();\n    var hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance.save().lineWidth(LINE_WIDTH).fontSize(RULER_FONT_SIZE).opacity(1);\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance.rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH).fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler: function drawHorizontalRuler() {\n    var _this = this;\n\n    var offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n    this.root.instance.rect(offset, 0, this.width, RULER_WIDTH).fill(RULER_COLOR).moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH).lineTo(this.width, RULER_WIDTH).stroke(LINE_COLOR);\n    var hRange = range(this.width, this.getHorizontalSteps());\n    hRange.map(function (step) {\n      _this.root.instance.moveTo(offset + step, 0).lineTo(offset + step, RULER_WIDTH).stroke(LINE_COLOR).fillColor('black').text(\"\" + Math.round(step), offset + step + 1, 1);\n    });\n    hRange.map(function (step) {\n      if (step !== 0) {\n        _this.root.instance.moveTo(offset + step, RULER_WIDTH).lineTo(offset + step, _this.height).stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler: function drawVerticalRuler() {\n    var _this2 = this;\n\n    var offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n    this.root.instance.rect(0, offset, RULER_WIDTH, this.height).fill(RULER_COLOR).moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0).lineTo(RULER_WIDTH, this.height).stroke(LINE_COLOR);\n    var vRange = range(this.height, this.getVerticalSteps());\n    vRange.map(function (step) {\n      _this2.root.instance.moveTo(0, offset + step).lineTo(RULER_WIDTH, offset + step).stroke(LINE_COLOR).fillColor('black').text(\"\" + Math.round(step), 1, offset + step + 1);\n    });\n    vRange.map(function (step) {\n      if (step !== 0) {\n        _this2.root.instance.moveTo(RULER_WIDTH, offset + step).lineTo(_this2.width, offset + step).stroke(GRID_COLOR);\n      }\n    });\n  }\n};\n\nvar TextInstance = /*#__PURE__*/function () {\n  function TextInstance(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  var _proto = TextInstance.prototype;\n\n  _proto.getLayoutData = function getLayoutData() {\n    return this.value;\n  };\n\n  _proto.remove = function remove() {\n    this.parent.removeChild(this);\n  };\n\n  _proto.clone = function clone() {\n    return new this.constructor(this.root, this.value);\n  };\n\n  _proto.cleanup = function cleanup() {};\n\n  _proto.update = function update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  };\n\n  _createClass(TextInstance, [{\n    key: \"name\",\n    get: function get() {\n      return 'TextInstance';\n    }\n  }]);\n\n  return TextInstance;\n}();\n\nvar PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0]\n}; // Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type string, number, array or object as parameter\n\nvar getPageSize = function getPageSize(size, orientation) {\n  if (orientation === void 0) {\n    orientation = 'portrait';\n  }\n\n  var result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'number') {\n    result = [size];\n  } else if (typeof size === 'object' && size.width) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(\"Invalid Page size: \" + size);\n  }\n\n  return orientation === 'portrait' ? {\n    width: result[0],\n    height: result[1]\n  } : {\n    width: result[1],\n    height: result[0]\n  };\n};\n\nvar PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\nvar DEST_REGEXP = /^#.+/;\n\nvar getURL = function getURL(value) {\n  if (!value) return '';\n  if (isSrcId(value)) return value; // don't modify it if it is an id\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return \"http://\" + value;\n  }\n\n  return value;\n};\n\nvar isSrcId = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\n\nvar setLink = function setLink(node) {\n  if (!node.src) {\n    return;\n  }\n\n  var _node$getAbsoluteLayo = node.getAbsoluteLayout(),\n      top = _node$getAbsoluteLayo.top,\n      left = _node$getAbsoluteLayo.left,\n      width = _node$getAbsoluteLayo.width,\n      height = _node$getAbsoluteLayo.height;\n\n  var instanceMethod = isSrcId(node.src) ? 'goTo' : 'link';\n  var nodeSrc = isSrcId(node.src) ? node.src.slice(1) : node.src;\n  node.root.instance[instanceMethod](left, top, width, height, nodeSrc);\n};\n\nvar setDestination = function setDestination(node) {\n  if (!node.props.id) {\n    return;\n  }\n\n  var _node$getAbsoluteLayo2 = node.getAbsoluteLayout(),\n      top = _node$getAbsoluteLayo2.top;\n\n  node.root.instance.addNamedDestination(node.props.id, 'XYZ', null, top, null);\n};\n\nvar Page = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(Page, _Base);\n\n  function Page(root, props) {\n    var _this;\n\n    _this = _Base.call(this, root, props) || this;\n    _this._size = null;\n    return _this;\n  }\n\n  var _proto = Page.prototype;\n\n  _proto.resetMargins = function resetMargins() {\n    if (!!this.marginTop || !!this.marginBottom || !!this.marginLeft || !!this.marginRight) {\n      warning(false, 'Margin values are not allowed on Page element. Use padding instead.');\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  };\n\n  _proto.applyProps = function applyProps() {\n    _Base.prototype.applyProps.call(this);\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n    this.resetMargins(); // Add some padding if ruler present, so we can see the whole page inside it\n\n    var rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  };\n\n  _proto.setPadding = function setPadding(edge, value) {\n    var dimension = edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM ? this.size.height : this.size.width;\n    var match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  };\n\n  _proto.addDynamicChild = /*#__PURE__*/function () {\n    var _addDynamicChild = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(parent, elements) {\n      var children, i, child, type, props, instance, _instance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (elements) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              children = Array.isArray(elements) ? elements : [elements];\n              i = 0;\n\n            case 4:\n              if (!(i < children.length)) {\n                _context.next = 27;\n                break;\n              }\n\n              child = children[i];\n              type = child.type, props = child.props;\n\n              if (!(typeof child === 'string')) {\n                _context.next = 12;\n                break;\n              }\n\n              instance = new TextInstance(this.root, child);\n              parent.appendChild(instance);\n              _context.next = 24;\n              break;\n\n            case 12:\n              if (!(type !== Fragment)) {\n                _context.next = 22;\n                break;\n              }\n\n              _instance = createInstance(child, this.root);\n              _context.next = 16;\n              return _instance.onAppendDynamically();\n\n            case 16:\n              parent.appendChild(_instance);\n\n              _instance.applyProps();\n\n              _context.next = 20;\n              return this.addDynamicChild(_instance, props.children);\n\n            case 20:\n              _context.next = 24;\n              break;\n\n            case 22:\n              _context.next = 24;\n              return this.addDynamicChild(parent, props.children);\n\n            case 24:\n              i++;\n              _context.next = 4;\n              break;\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function addDynamicChild(_x, _x2) {\n      return _addDynamicChild.apply(this, arguments);\n    }\n\n    return addDynamicChild;\n  }();\n\n  _proto.renderDynamicNodes = /*#__PURE__*/function () {\n    var _renderDynamicNodes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props, cb) {\n      var listToExplore, node, condition, elements;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              listToExplore = this.children.slice(0);\n\n            case 1:\n              if (!(listToExplore.length > 0)) {\n                _context2.next = 14;\n                break;\n              }\n\n              node = listToExplore.shift();\n              condition = cb ? cb(node) : true;\n\n              if (!(condition && node.props.render)) {\n                _context2.next = 11;\n                break;\n              }\n\n              node.removeAllChilds();\n              elements = node.props.render(props);\n              _context2.next = 9;\n              return this.addDynamicChild(node, elements);\n\n            case 9:\n              if (!node.fixed) node.props.render = null;\n              return _context2.abrupt(\"continue\", 1);\n\n            case 11:\n              if (node.children) {\n                listToExplore.push.apply(listToExplore, node.children);\n              }\n\n              _context2.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function renderDynamicNodes(_x3, _x4) {\n      return _renderDynamicNodes.apply(this, arguments);\n    }\n\n    return renderDynamicNodes;\n  }();\n\n  _proto.nodeWillWrap = /*#__PURE__*/function () {\n    var _nodeWillWrap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.renderDynamicNodes(props);\n\n            case 2:\n              this.calculateLayout();\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function nodeWillWrap(_x5) {\n      return _nodeWillWrap.apply(this, arguments);\n    }\n\n    return nodeWillWrap;\n  }();\n\n  _proto.onNodeSplit = function onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  };\n\n  _proto.clone = function clone() {\n    var clone = _Base.prototype.clone.call(this);\n\n    clone._size = this.size;\n    return clone;\n  };\n\n  _proto.update = function update(newProps) {\n    _Base.prototype.update.call(this, newProps);\n\n    this._size = null;\n  };\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var instance, height;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              instance = this.root.instance;\n\n              if (!this.isAutoHeight) {\n                this.height = this.size.height;\n              }\n\n              this.calculateLayout();\n              height = this.isAutoHeight ? this.height : this.size.height;\n              instance.addPage({\n                size: [this.size.width, height],\n                margin: 0\n              });\n              setDestination(this);\n\n              if (this.style.backgroundColor) {\n                instance.fillColor(this.style.backgroundColor).rect(0, 0, this.size.width, height).fill();\n              }\n\n              _context4.next = 9;\n              return this.renderChildren();\n\n            case 9:\n              if (this.props.debug) {\n                this.debug();\n              }\n\n              this.renderRuler();\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Page, [{\n    key: \"name\",\n    get: function get() {\n      return 'Page';\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.parent;\n    }\n  }, {\n    key: \"page\",\n    get: function get() {\n      return this;\n    }\n  }, {\n    key: \"orientation\",\n    get: function get() {\n      return this.props.orientation;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      if (this._size) return this._size;\n      this._size = getPageSize(this.props.size, this.orientation); // Adjust size for ruler\n\n      if (this.hasHorizontalRuler()) {\n        this._size.width += this.getRulerWidth();\n      }\n\n      if (this.hasVerticalRuler()) {\n        this._size.height += this.getRulerWidth();\n      }\n\n      return this._size;\n    }\n  }, {\n    key: \"isAutoHeight\",\n    get: function get() {\n      return typeof this.size.height === 'undefined';\n    }\n  }]);\n\n  return Page;\n}(Base);\n\nPage.defaultProps = {\n  size: 'A4',\n  wrap: true,\n  orientation: 'portrait'\n};\nObject.assign(Page.prototype, Ruler);\n\nvar View = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(View, _Base);\n\n  function View() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = View.prototype;\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.root.instance.save();\n              this.applyTransformations();\n              this.drawBackgroundColor();\n              this.drawBorders();\n              _context.next = 6;\n              return this.renderChildren();\n\n            case 6:\n              setDestination(this);\n              if (this.props.debug) this.debug();\n              this.root.instance.restore();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(View, [{\n    key: \"name\",\n    get: function get() {\n      return 'View';\n    }\n  }]);\n\n  return View;\n}(Base);\n\nView.defaultProps = {\n  wrap: true\n};\n\nvar fetchFont = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(src, options) {\n    var response, buffer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(src, options);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchFont(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar FontSource = /*#__PURE__*/function () {\n  function FontSource(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  var _proto = FontSource.prototype;\n\n  _proto.load = /*#__PURE__*/function () {\n    var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this = this;\n\n      var _this$options, headers, body, _this$options$method, method, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.loading = true;\n              _this$options = this.options, headers = _this$options.headers, body = _this$options.body, _this$options$method = _this$options.method, method = _this$options$method === void 0 ? 'GET' : _this$options$method;\n              _context2.next = 5;\n              return fetchFont(this.src, {\n                method: method,\n                body: body,\n                headers: headers\n              });\n\n            case 5:\n              data = _context2.sent;\n              this.data = fontkit.create(data);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return new Promise(function (resolve, reject) {\n                return fontkit.open(_this.src, function (err, data) {\n                  return err ? reject(err) : resolve(data);\n                });\n              });\n\n            case 11:\n              this.data = _context2.sent;\n\n            case 12:\n              this.loading = false;\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function load() {\n      return _load.apply(this, arguments);\n    }\n\n    return load;\n  }();\n\n  return FontSource;\n}();\n\nvar Font = /*#__PURE__*/function () {\n  Font.create = function create(family) {\n    return new Font(family);\n  };\n\n  function Font(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  var _proto2 = Font.prototype;\n\n  _proto2.register = function register(_ref2) {\n    var src = _ref2.src,\n        fontWeight = _ref2.fontWeight,\n        fontStyle = _ref2.fontStyle,\n        options = _objectWithoutPropertiesLoose(_ref2, [\"src\", \"fontWeight\", \"fontStyle\"]);\n\n    this.sources.push(new FontSource(src, this.fontFamily, fontStyle, fontWeight, options));\n  };\n\n  _proto2.resolve = function resolve(descriptor) {\n    var _descriptor$fontWeigh = descriptor.fontWeight,\n        fontWeight = _descriptor$fontWeigh === void 0 ? 400 : _descriptor$fontWeigh,\n        _descriptor$fontStyle = descriptor.fontStyle,\n        fontStyle = _descriptor$fontStyle === void 0 ? 'normal' : _descriptor$fontStyle;\n    var styleSources = this.sources.filter(function (s) {\n      return s.fontStyle === fontStyle;\n    }); // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n\n    var exactFit = styleSources.find(function (s) {\n      return s.fontWeight === fontWeight;\n    });\n    if (exactFit) return exactFit;\n    var res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      var leftOffset = styleSources.filter(function (s) {\n        return s.fontWeight <= fontWeight;\n      });\n      var rightOffset = styleSources.filter(function (s) {\n        return s.fontWeight > 500;\n      });\n      var fit = styleSources.filter(function (s) {\n        return s.fontWeight >= fontWeight && s.fontWeight < 500;\n      });\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    var lt = styleSources.filter(function (s) {\n      return s.fontWeight < fontWeight;\n    });\n    var gt = styleSources.filter(function (s) {\n      return s.fontWeight > fontWeight;\n    });\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\"Could not resolve font for \" + this.fontFamily + \", fontWeight \" + fontWeight);\n    }\n\n    return res;\n  };\n\n  return Font;\n}();\n\nvar emojiSource;\n\nvar registerEmojiSource = function registerEmojiSource(_ref) {\n  var url = _ref.url,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? 'png' : _ref$format;\n  emojiSource = {\n    url: url,\n    format: format\n  };\n};\n\nvar getEmojiSource = function getEmojiSource() {\n  return emojiSource;\n};\n\nvar emoji = {\n  registerEmojiSource: registerEmojiSource,\n  getEmojiSource: getEmojiSource\n};\nvar standardFonts = ['Courier', 'Courier-Bold', 'Courier-Oblique', 'Helvetica', 'Helvetica-Bold', 'Helvetica-Oblique', 'Times-Roman', 'Times-Bold', 'Times-Italic'];\nvar hyphenationCallback;\n\nvar registerHyphenationCallback = function registerHyphenationCallback(callback) {\n  hyphenationCallback = callback;\n};\n\nvar getHyphenationCallback = function getHyphenationCallback() {\n  return hyphenationCallback;\n};\n\nvar hyphenation = {\n  registerHyphenationCallback: registerHyphenationCallback,\n  getHyphenationCallback: getHyphenationCallback\n};\nvar fonts = {};\n\nvar register = function register(src, data) {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(false, 'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts');\n    data.src = src;\n  }\n\n  var _data = data,\n      family = _data.family;\n\n  if (!fonts[family]) {\n    fonts[family] = Font.create(family);\n  } // Bulk loading\n\n\n  if (data.fonts) {\n    for (var i = 0; i < data.fonts.length; i++) {\n      fonts[family].register(_extends({\n        family: family\n      }, data.fonts[i]));\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nvar getRegisteredFonts = function getRegisteredFonts() {\n  return fonts;\n};\n\nvar getRegisteredFontFamilies = function getRegisteredFontFamilies() {\n  return Object.keys(fonts);\n};\n\nvar getFont = function getFont(descriptor) {\n  var fontFamily = descriptor.fontFamily;\n  var isStandard = standardFonts.includes(fontFamily);\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\"Font family not registered: \" + fontFamily + \". Please register it calling Font.register() method.\");\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nvar load = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(descriptor, doc) {\n    var fontFamily, isStandard, font;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fontFamily = descriptor.fontFamily;\n            isStandard = standardFonts.includes(fontFamily);\n\n            if (!isStandard) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            font = getFont(descriptor); // We cache the font to avoid fetching it many times\n\n            if (!(!font.data && !font.loading)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 8;\n            return font.load();\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function load(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar reset = function reset() {\n  for (var _font in fonts) {\n    if (fonts.hasOwnProperty(_font)) {\n      fonts[_font].data = null;\n    }\n  }\n};\n\nvar clear = function clear() {\n  fonts = {};\n};\n\nvar Font$1 = _extends({\n  register: register,\n  getRegisteredFonts: getRegisteredFonts,\n  getRegisteredFontFamilies: getRegisteredFontFamilies,\n  getFont: getFont,\n  load: load,\n  clear: clear,\n  reset: reset\n}, emoji, {}, hyphenation);\n\nvar StandardFont = /*#__PURE__*/function () {\n  function StandardFont(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  var _proto = StandardFont.prototype;\n\n  _proto.layout = function layout(str) {\n    var _this = this;\n\n    var _this$src$encode = this.src.encode(str),\n        encoded = _this$src$encode[0],\n        positions = _this$src$encode[1];\n\n    return {\n      positions: positions,\n      stringIndices: positions.map(function (_, i) {\n        return i;\n      }),\n      glyphs: encoded.map(function (g, i) {\n        var glyph = _this.getGlyph(parseInt(g, 16));\n\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  };\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    var glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  };\n\n  _proto.getGlyph = function getGlyph(id) {\n    return {\n      id: id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  };\n\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  } // Based on empirical observation\n  ;\n\n  _createClass(StandardFont, [{\n    key: \"ascent\",\n    get: function get() {\n      return 900;\n    } // Based on empirical observation\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return -220;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return -230;\n\n        default:\n          return -200;\n      }\n    }\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return 1000;\n    }\n  }]);\n\n  return StandardFont;\n}();\n\nfunction _createForOfIteratorHelperLoose(o) {\n  var i = 0;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  i = o[Symbol.iterator]();\n  return i.next.bind(i);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\nvar getFontSize = pathOr(12, ['attributes', 'fontSize']);\n\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\n\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new StandardFont(name);\n  fontCache[name] = font;\n  return font;\n};\n\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\n\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n        runs = _ref.runs;\n    var lastFont = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(runs), _step; !(_step = _iterator()).done;) {\n      var run = _step.value;\n\n      var _fontSize = getFontSize(run);\n\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(string.slice(run.start, run.end)), _step2; !(_step2 = _iterator2()).done;) {\n        var _char = _step2.value;\n\n        var codePoint = _char.codePointAt();\n\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n        var font = shouldFallback ? getFallbackFont() : defaultFont; // If the default font does not have a glyph and the fallback font does, we use it\n\n        if (font !== lastFont) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFont ? _fontSize / lastFont.unitsPerEm : 0\n              }\n            });\n          }\n\n          lastFont = font;\n          lastIndex = index;\n        }\n\n        index += _char.length;\n      }\n    }\n\n    if (lastIndex < string.length) {\n      var fontSize = getFontSize(last(runs));\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: lastFont ? fontSize / lastFont.unitsPerEm : 0\n        }\n      });\n    }\n\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\n\nvar engines = {\n  linebreaker: linebreaker,\n  justification: justification,\n  textDecoration: textDecoration,\n  scriptItemizer: scriptItemizer,\n  wordHyphenation: wordHyphenation,\n  fontSubstitution: fontSubstitution\n};\nvar engine = layoutEngine(engines);\n\nPNG.isValid = function (data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n}; // Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\n\nvar MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];\n\nvar JPEG = function JPEG(data) {\n  this.data = null;\n  this.width = null;\n  this.height = null;\n  this.data = data;\n\n  if (data.readUInt16BE(0) !== 0xffd8) {\n    throw new Error('SOI not found in JPEG');\n  }\n\n  var marker;\n  var pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    throw new Error('Invalid JPEG.');\n  }\n\n  pos += 3;\n  this.height = data.readUInt16BE(pos);\n  pos += 2;\n  this.width = data.readUInt16BE(pos);\n};\n\nJPEG.isValid = function (data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  var marker;\n  var pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar createCache = function createCache(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$limit = _ref.limit,\n      limit = _ref$limit === void 0 ? 100 : _ref$limit;\n\n  var cache = {};\n  var keys = [];\n  return {\n    get: function get(key) {\n      return cache[key];\n    },\n    set: function set(key, value) {\n      keys.push(key);\n\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n\n      cache[key] = value;\n    },\n    reset: function reset() {\n      cache = {};\n      keys = [];\n    },\n    length: function length() {\n      return keys.length;\n    }\n  };\n};\n\nvar IMAGE_CACHE = createCache({\n  limit: 30\n});\n\nvar fetchRemoteFile = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(uri, options) {\n    var response, buffer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(uri, options);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchRemoteFile(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar isValidFormat = function isValidFormat(format) {\n  var lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nvar guessFormat = function guessFormat(buffer) {\n  var format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nvar isCompatibleBase64 = function isCompatibleBase64(_ref4) {\n  var uri = _ref4.uri;\n  return /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n};\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n\n    case 'png':\n      return new PNG(body);\n\n    default:\n      return null;\n  }\n}\n\nvar resolveBase64Image = function resolveBase64Image(_ref5) {\n  var uri = _ref5.uri;\n  var match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  var format = match[1];\n  var data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(\"Base64 image invalid format: \" + format);\n  }\n\n  return new Promise(function (resolve) {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nvar resolveImageFromData = function resolveImageFromData(src) {\n  if (src.data && src.format) {\n    return new Promise(function (resolve) {\n      return resolve(getImage(src.data, src.format));\n    });\n  }\n\n  throw new Error(\"Invalid data given for local file: \" + JSON.stringify(src));\n};\n\nvar resolveBufferImage = function resolveBufferImage(buffer) {\n  var format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(function (resolve) {\n      return resolve(getImage(buffer, format));\n    });\n  }\n};\n\nvar getImageFormat = function getImageFormat(body) {\n  var isPng = body[0] === 137 && body[1] === 80 && body[2] === 78 && body[3] === 71 && body[4] === 13 && body[5] === 10 && body[6] === 26 && body[7] === 10;\n  var isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n  var extension = '';\n\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nvar resolveImageFromUrl = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(src, options) {\n    var uri, body, headers, _src$method, method, data, extension;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uri = src.uri, body = src.body, headers = src.headers, _src$method = src.method, method = _src$method === void 0 ? 'GET' : _src$method;\n            {\n              _context2.next = 7;\n              break;\n            }\n\n          case 4:\n            _context2.t0 = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.next = 9;\n            return fetchRemoteFile(uri, {\n              body: body,\n              headers: headers,\n              method: method\n            });\n\n          case 9:\n            _context2.t0 = _context2.sent;\n\n          case 10:\n            data = _context2.t0;\n            extension = getImageFormat(data);\n            return _context2.abrupt(\"return\", getImage(data, extension));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function resolveImageFromUrl(_x3, _x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar resolveImage = function resolveImage(src, _temp3) {\n  var _ref7 = _temp3 === void 0 ? {} : _temp3,\n      _ref7$cache = _ref7.cache,\n      cache = _ref7$cache === void 0 ? true : _ref7$cache,\n      options = _objectWithoutPropertiesLoose(_ref7, [\"cache\"]);\n\n  var cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  var image;\n\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nvar emojis = {};\nvar regex = emojiRegex();\n\nvar reflect = function reflect(promise) {\n  return function () {\n    return promise.apply(void 0, arguments).then(function (v) {\n      return v;\n    }, function (e) {\n      return e;\n    });\n  };\n}; // Returns a function to be able to mock resolveImage.\n\n\nvar makeFetchEmojiImage = function makeFetchEmojiImage() {\n  return reflect(resolveImage);\n};\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\n\n\nvar _removeNoColor = function _removeNoColor(x) {\n  return x !== '️';\n};\n\nvar getCodePoints = function getCodePoints(string) {\n  return Array.from(string).filter(_removeNoColor).map(function (_char) {\n    return _char.codePointAt(0).toString(16);\n  }).join('-');\n};\n\nvar buildEmojiUrl = function buildEmojiUrl(emoji) {\n  var _Font$getEmojiSource = Font$1.getEmojiSource(),\n      url = _Font$getEmojiSource.url,\n      format = _Font$getEmojiSource.format;\n\n  return \"\" + url + getCodePoints(emoji) + \".\" + format;\n};\n\nvar fetchEmojis = function fetchEmojis(string) {\n  var emojiSource = Font$1.getEmojiSource();\n  if (!emojiSource || !emojiSource.url) return [];\n  var promises = [];\n  var match;\n\n  var _loop = function _loop() {\n    var emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      var emojiUrl = buildEmojiUrl(emoji);\n      emojis[emoji] = {\n        loading: true\n      };\n      var fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(fetchEmojiImage({\n        uri: emojiUrl\n      }).then(function (image) {\n        emojis[emoji].loading = false;\n        emojis[emoji].data = image.data;\n      }));\n    }\n  };\n\n  while (match = regex.exec(string)) {\n    _loop();\n  }\n\n  return promises;\n};\n\nvar embedEmojis = function embedEmojis(fragments) {\n  var result = [];\n\n  for (var i = 0; i < fragments.length; i++) {\n    var fragment = fragments[i];\n    var match = void 0;\n    var lastIndex = 0;\n\n    while (match = regex.exec(fragment.string)) {\n      var index = match.index;\n      var emoji = match[0];\n      var emojiSize = fragment.attributes.fontSize;\n      var chunk = fragment.string.slice(lastIndex, index + match[0].length); // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: _extends({}, fragment.attributes, {\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data\n            }\n          })\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes\n      });\n    }\n  }\n\n  return result;\n};\n\nvar IGNORABLE_CODEPOINTS = [8232, // LINE_SEPARATOR\n8233 // PARAGRAPH_SEPARATOR\n];\n\nvar buildSubsetForFont = function buildSubsetForFont(font) {\n  return IGNORABLE_CODEPOINTS.reduce(function (acc, codePoint) {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n\n    return [].concat(acc, [String.fromCharCode(codePoint)]);\n  }, []);\n};\n\nvar ignoreChars = function ignoreChars(fragments) {\n  return fragments.map(function (fragment) {\n    var charSubset = buildSubsetForFont(fragment.attributes.font);\n    var subsetRegex = new RegExp(charSubset.join('|'));\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes\n    };\n  });\n};\n\nfunction _createForOfIteratorHelperLoose$1(o) {\n  var i = 0;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray$1(o))) return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  i = o[Symbol.iterator]();\n  return i.next.bind(i);\n}\n\nfunction _unsupportedIterableToArray$1(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n}\n\nfunction _arrayLikeToArray$1(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar PREPROCESSORS = [ignoreChars, embedEmojis];\n\nvar capitalize = function capitalize(value) {\n  return value.replace(/(^|\\s)\\S/g, function (l) {\n    return l.toUpperCase();\n  });\n};\n\nvar isImage = propEq('name', 'Image');\nvar isTextInstance = compose(complement(isNil), prop('value'));\n\nvar transformText = function transformText(text, transformation) {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n\n    case 'lowercase':\n      return text.toLowerCase();\n\n    case 'capitalize':\n      return capitalize(text);\n\n    default:\n      return text;\n  }\n};\n\nvar getFragments = function getFragments(instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$style = instance.style,\n      _instance$style$color = _instance$style.color,\n      color = _instance$style$color === void 0 ? 'black' : _instance$style$color,\n      backgroundColor = _instance$style.backgroundColor,\n      _instance$style$fontF = _instance$style.fontFamily,\n      fontFamily = _instance$style$fontF === void 0 ? 'Helvetica' : _instance$style$fontF,\n      fontWeight = _instance$style.fontWeight,\n      fontStyle = _instance$style.fontStyle,\n      _instance$style$fontS = _instance$style.fontSize,\n      fontSize = _instance$style$fontS === void 0 ? 18 : _instance$style$fontS,\n      _instance$style$textA = _instance$style.textAlign,\n      textAlign = _instance$style$textA === void 0 ? 'left' : _instance$style$textA,\n      lineHeight = _instance$style.lineHeight,\n      textDecoration = _instance$style.textDecoration,\n      textDecorationColor = _instance$style.textDecorationColor,\n      textDecorationStyle = _instance$style.textDecorationStyle,\n      textTransform = _instance$style.textTransform,\n      letterSpacing = _instance$style.letterSpacing,\n      textIndent = _instance$style.textIndent,\n      opacity = _instance$style.opacity;\n  var obj = Font$1.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  });\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    color: color,\n    opacity: opacity,\n    fontSize: fontSize,\n    backgroundColor: backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null\n  };\n  instance.children.forEach(function (child) {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: _extends({}, attributes, {\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data\n          }\n        })\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes: attributes\n      });\n    } else {\n      if (child) {\n        var _fragments;\n\n        (_fragments = fragments).push.apply(_fragments, getFragments(child));\n      }\n    }\n  });\n\n  for (var _iterator = _createForOfIteratorHelperLoose$1(PREPROCESSORS), _step; !(_step = _iterator()).done;) {\n    var preprocessor = _step.value;\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nvar getAttributedString = function getAttributedString(instance) {\n  return AttributedString.fromFragments(getFragments(instance));\n};\n\nvar Text = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(Text, _Base);\n\n  function Text(root, props) {\n    var _this;\n\n    _this = _Base.call(this, root, props) || this;\n    _this.start = 0;\n    _this.end = 0;\n    _this.blocks = null;\n    _this.computed = false;\n    _this.attributedString = null;\n    _this.layoutOptions = {\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font$1.getHyphenationCallback(),\n      shrinkWhitespaceFactor: {\n        before: -0.5,\n        after: -0.5\n      }\n    };\n\n    _this.layout.setMeasureFunc(_this.measureText.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  var _proto = Text.prototype;\n\n  _proto.appendChild = function appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    var index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n      child.cleanup();\n    }\n  };\n\n  _proto.lineIndexAtHeight = function lineIndexAtHeight(height) {\n    var counter = 0;\n\n    for (var i = 0; i < this.lines.length; i++) {\n      var line = this.lines[i];\n      if (counter + line.box.height > height) return i;\n      counter += line.box.height;\n    }\n\n    return this.lines.length;\n  };\n\n  _proto.heightAtLineIndex = function heightAtLineIndex(index) {\n    var counter = 0;\n\n    for (var i = 0; i < index; i++) {\n      var line = this.lines[i];\n      counter += line.box.height;\n    }\n\n    return counter;\n  };\n\n  _proto.layoutText = function layoutText(width, height) {\n    this.attributedString = getAttributedString(this); // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n\n    if (!this.blocks || this.props.render) {\n      // Do the actual text layout.\n      /// If height null or NaN, we take some liberty on layout height\n      var container = {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height || Infinity,\n        maxLines: this.style.maxLines,\n        truncateMode: this.style.textOverflow\n      };\n      this.blocks = engine(this.attributedString, container, this.layoutOptions);\n    } // Get the total amount of rendered lines\n\n\n    var linesCount = this.blocks.reduce(function (acc, b) {\n      return acc + b.length;\n    }, 0);\n    this.end = linesCount + 1;\n    this.computed = true;\n  };\n\n  _proto.measureText = function measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width, height);\n      return {\n        height: this.linesHeight\n      };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      this.layoutText(width, height);\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth)\n      };\n    }\n\n    return {};\n  };\n\n  _proto.resolveStyles = function resolveStyles() {\n    var styles = _Base.prototype.resolveStyles.call(this); // Inherit relative positioning for inline childs\n\n\n    if (this.parent && this.parent.name === 'Text' && this.parent.style.position === 'relative') {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    } // Apply default link styles\n\n\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  };\n\n  _proto.wrapHeight = function wrapHeight(height) {\n    var _this$props = this.props,\n        orphans = _this$props.orphans,\n        widows = _this$props.widows;\n    var linesQuantity = this.lines.length;\n    var sliceHeight = height - this.paddingTop;\n    var slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  };\n\n  _proto.onNodeSplit = function onNodeSplit(height, clone) {\n    var wrapHeight = this.wrapHeight(height);\n    var slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  };\n\n  _proto.clone = function clone() {\n    var text = _Base.prototype.clone.call(this);\n\n    text.layoutEngine = this.layoutEngine; // Save calculated layout for non-dynamic clone elements\n\n    if (this.blocks && !this.props.render) {\n      text.blocks = [].concat(this.blocks);\n    }\n\n    return text;\n  };\n\n  _proto.renderText = function renderText() {\n    var _this$getAbsoluteLayo = this.getAbsoluteLayout(),\n        top = _this$getAbsoluteLayo.top,\n        left = _this$getAbsoluteLayo.left;\n\n    var initialY = this.lines[0] ? this.lines[0].box.y : 0; // We translate lines based on Yoga container\n\n    this.root.instance.save();\n    this.root.instance.translate(left + this.padding.left, top + this.padding.top - initialY); // Perform actual text rendering on document\n\n    PDFRenderer$1.render(this.root.instance, [this.lines]);\n    setLink(this);\n    setDestination(this);\n    this.root.instance.restore();\n  };\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.root.instance.save();\n              this.applyTransformations();\n              this.drawBackgroundColor();\n              this.drawBorders(); // Calculate text layout if needed\n              // This can happen if measureText was not called by Yoga\n\n              if (!this.computed) {\n                this.layoutText(this.width - this.padding.left - this.padding.right, this.height - this.padding.top - this.padding.bottom);\n              }\n\n              this.renderText();\n\n              if (this.props.debug) {\n                this.debug();\n              }\n\n              this.root.instance.restore();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Text, [{\n    key: \"name\",\n    get: function get() {\n      return 'Text';\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return getURL(this.props.src || this.props.href);\n    }\n  }, {\n    key: \"lines\",\n    get: function get() {\n      if (!this.blocks) return [];\n      return this.blocks.reduce(function (acc, block) {\n        return [].concat(acc, block);\n      }, []).splice(this.start, this.end);\n    }\n  }, {\n    key: \"linesHeight\",\n    get: function get() {\n      if (!this.blocks) return -1;\n      return this.lines.reduce(function (acc, line) {\n        return acc + line.box.height;\n      }, 0);\n    }\n  }, {\n    key: \"linesWidth\",\n    get: function get() {\n      if (!this.blocks) return -1;\n      return Math.max.apply(Math, this.lines.map(function (line) {\n        return AttributedString.advanceWidth(line);\n      }));\n    }\n  }]);\n\n  return Text;\n}(Base);\n\nText.defaultProps = {\n  wrap: true,\n  widows: 2,\n  orphans: 2\n};\n\nvar Link = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(Link, _Base);\n\n  function Link() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLink(this);\n              _context.next = 3;\n              return this.renderChildren();\n\n            case 3:\n              if (this.props.debug) this.debug();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Link, [{\n    key: \"name\",\n    get: function get() {\n      return 'Link';\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return getURL(this.props.src || this.props.href);\n    }\n  }]);\n\n  return Link;\n}(Base);\n\nvar Note = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(Note, _Base);\n\n  function Note() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Note.prototype;\n\n  _proto.appendChild = function appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    var index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n\n    child.cleanup();\n  };\n\n  _proto.applyProps = function applyProps() {\n    _Base.prototype.applyProps.call(this);\n\n    this.height = 0;\n    this.width = 0;\n  };\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$getAbsoluteLayo, top, left, value;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$getAbsoluteLayo = this.getAbsoluteLayout(), top = _this$getAbsoluteLayo.top, left = _this$getAbsoluteLayo.left;\n              value = this.children[0] ? this.children[0].value : '';\n              this.root.instance.note(left, top, 0, 0, value);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Note, [{\n    key: \"name\",\n    get: function get() {\n      return 'Note';\n    }\n  }]);\n\n  return Note;\n}(Base);\n\nNote.defaultProps = {};\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var height = ch;\n    var width = height * ir;\n    var yOffset = isNumeric(py) ? py : 0;\n    var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    return {\n      width: width,\n      height: height,\n      xOffset: xOffset,\n      yOffset: yOffset\n    };\n  } else {\n    var _width = cw;\n\n    var _height = _width / ir;\n\n    var _xOffset = isNumeric(px) ? px : 0;\n\n    var _yOffset = isNumeric(py) ? py : (ch - _height) * pyv;\n\n    return {\n      width: _width,\n      height: _height,\n      yOffset: _yOffset,\n      xOffset: _xOffset\n    };\n  }\n};\n\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var width = cw;\n    var height = width / ir;\n    var xOffset = isNumeric(px) ? px : 0;\n    var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return {\n      width: width,\n      height: height,\n      yOffset: yOffset,\n      xOffset: xOffset\n    };\n  } else {\n    var _height2 = ch;\n\n    var _width2 = _height2 * ir;\n\n    var _xOffset2 = isNumeric(px) ? px : (cw - _width2) * pxv;\n\n    var _yOffset2 = isNumeric(py) ? py : 0;\n\n    return {\n      width: _width2,\n      height: _height2,\n      xOffset: _xOffset2,\n      yOffset: _yOffset2\n    };\n  }\n};\n\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\n\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\n\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nvar SAFETY_HEIGHT = 10;\n\nvar Image = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(Image, _Base);\n\n  function Image(root, props) {\n    var _this;\n\n    _this = _Base.call(this, root, props) || this;\n    _this.image = null;\n\n    _this.layout.setMeasureFunc(_this.measureImage.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.shouldGrow = function shouldGrow() {\n    return !!this.style.flexGrow;\n  };\n\n  _proto.measureImage = function measureImage(width, widthMode, height, heightMode) {\n    var imageMargin = this.margin;\n    var pagePadding = this.page.padding;\n    var pageArea = this.page.isAutoHeight ? Infinity : this.page.size.height - pagePadding.top - pagePadding.bottom - imageMargin.top - imageMargin.bottom - SAFETY_HEIGHT; // Skip measure if image data not present yet\n\n    if (!this.image) return {\n      width: 0,\n      height: 0\n    };\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY && heightMode === Yoga.MEASURE_MODE_UNDEFINED) {\n      var scaledHeight = width / this.ratio;\n      return {\n        height: Math.min(pageArea, scaledHeight)\n      };\n    }\n\n    if (heightMode === Yoga.MEASURE_MODE_EXACTLY && (widthMode === Yoga.MEASURE_MODE_AT_MOST || widthMode === Yoga.MEASURE_MODE_UNDEFINED)) {\n      return {\n        width: Math.min(height * this.ratio, width)\n      };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY && heightMode === Yoga.MEASURE_MODE_AT_MOST) {\n      var _scaledHeight = width / this.ratio;\n\n      return {\n        height: Math.min(height, pageArea, _scaledHeight)\n      };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST && heightMode === Yoga.MEASURE_MODE_AT_MOST) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height)\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height\n        };\n      }\n    }\n\n    return {\n      height: height,\n      width: width\n    };\n  };\n\n  _proto.fetch = /*#__PURE__*/function () {\n    var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$props, cache, safePath, allowDangerousPaths, src;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = this.props, cache = _this$props.cache, safePath = _this$props.safePath, allowDangerousPaths = _this$props.allowDangerousPaths;\n\n              if (this.src) {\n                _context.next = 4;\n                break;\n              }\n\n              warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.prev = 4;\n\n              if (!(typeof this.src === 'function')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return this.src();\n\n            case 8:\n              _context.t0 = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 11:\n              _context.t0 = this.src;\n\n            case 12:\n              src = _context.t0;\n              _context.next = 15;\n              return resolveImage(src, {\n                cache: cache,\n                safePath: safePath,\n                allowDangerousPaths: allowDangerousPaths\n              });\n\n            case 15:\n              this.image = _context.sent;\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t1 = _context[\"catch\"](4);\n              this.image = {\n                width: 0,\n                height: 0\n              };\n              console.warn(_context.t1.message);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[4, 18]]);\n    }));\n\n    function fetch() {\n      return _fetch.apply(this, arguments);\n    }\n\n    return fetch;\n  }();\n\n  _proto.clone = function clone() {\n    var clone = _Base.prototype.clone.call(this);\n\n    clone.image = this.image;\n    return clone;\n  };\n\n  _proto.onAppendDynamically = /*#__PURE__*/function () {\n    var _onAppendDynamically = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.fetch();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function onAppendDynamically() {\n      return _onAppendDynamically.apply(this, arguments);\n    }\n\n    return onAppendDynamically;\n  }();\n\n  _proto.renderImage = function renderImage() {\n    var padding = this.padding;\n\n    var _this$getAbsoluteLayo = this.getAbsoluteLayout(),\n        left = _this$getAbsoluteLayo.left,\n        top = _this$getAbsoluteLayo.top;\n\n    var _this$style = this.style,\n        opacity = _this$style.opacity,\n        objectPositionX = _this$style.objectPositionX,\n        objectPositionY = _this$style.objectPositionY;\n    this.root.instance.save(); // Clip path to keep image inside border radius\n\n    this.clip();\n\n    if (this.image.data) {\n      var _resolveObjectFit = resolveObjectFit(this.style.objectFit, this.width - padding.left - padding.right, this.height - padding.top - padding.bottom, this.image.width, this.image.height, objectPositionX, objectPositionY),\n          width = _resolveObjectFit.width,\n          height = _resolveObjectFit.height,\n          xOffset = _resolveObjectFit.xOffset,\n          yOffset = _resolveObjectFit.yOffset;\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.fillOpacity(opacity).image(this.image.data, left + padding.left + xOffset, top + padding.top + yOffset, {\n          width: width,\n          height: height\n        });\n      } else {\n        warning(false, \"Image with src '\" + this.props.src + \"' skipped due to invalid dimensions\");\n      }\n    }\n\n    this.root.instance.restore();\n  };\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setDestination(this);\n              this.root.instance.save();\n              this.applyTransformations();\n              this.drawBackgroundColor();\n              this.renderImage();\n              this.drawBorders();\n\n              if (this.props.debug) {\n                this.debug();\n              }\n\n              this.root.instance.restore();\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Image, [{\n    key: \"name\",\n    get: function get() {\n      return 'Image';\n    }\n  }, {\n    key: \"ratio\",\n    get: function get() {\n      return this.image.data ? this.image.width / this.image.height : 1;\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      var src = this.props.src || this.props.source;\n      return typeof src === 'string' ? {\n        uri: src\n      } : src;\n    }\n  }]);\n\n  return Image;\n}(Base);\n\nImage.defaultProps = {\n  wrap: false,\n  cache: true,\n  style: {}\n};\n\nfunction _createForOfIteratorHelperLoose$2(o) {\n  var i = 0;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray$2(o))) return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  i = o[Symbol.iterator]();\n  return i.next.bind(i);\n}\n\nfunction _unsupportedIterableToArray$2(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);\n}\n\nfunction _arrayLikeToArray$2(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar Document = /*#__PURE__*/function () {\n  function Document(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  var _proto = Document.prototype;\n\n  _proto.appendChild = function appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    var index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n\n    child.cleanup();\n  };\n\n  _proto.addMetaData = function addMetaData() {\n    var _this$props = this.props,\n        title = _this$props.title,\n        author = _this$props.author,\n        subject = _this$props.subject,\n        keywords = _this$props.keywords,\n        creator = _this$props.creator,\n        producer = _this$props.producer; // The object keys need to start with a capital letter by the PDF spec\n\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  };\n\n  _proto.loadFonts = /*#__PURE__*/function () {\n    var _loadFonts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var promises, listToExplore, node;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              promises = [];\n              listToExplore = this.children.slice(0);\n\n              while (listToExplore.length > 0) {\n                node = listToExplore.shift();\n\n                if (node.style && node.style.fontFamily) {\n                  promises.push(Font$1.load(node.style, this.root.instance));\n                }\n\n                if (node.children) {\n                  node.children.forEach(function (childNode) {\n                    listToExplore.push(childNode);\n                  });\n                }\n              }\n\n              _context.next = 5;\n              return Promise.all(promises);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n\n    return loadFonts;\n  }();\n\n  _proto.loadEmojis = /*#__PURE__*/function () {\n    var _loadEmojis = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var promises, listToExplore, node;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              promises = [];\n              listToExplore = this.children.slice(0);\n\n              while (listToExplore.length > 0) {\n                node = listToExplore.shift();\n\n                if (typeof node === 'string') {\n                  promises.push.apply(promises, fetchEmojis(node));\n                } else if (typeof node.value === 'string') {\n                  promises.push.apply(promises, fetchEmojis(node.value));\n                } else if (node.children) {\n                  node.children.forEach(function (childNode) {\n                    listToExplore.push(childNode);\n                  });\n                }\n              }\n\n              _context2.next = 5;\n              return Promise.all(promises);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function loadEmojis() {\n      return _loadEmojis.apply(this, arguments);\n    }\n\n    return loadEmojis;\n  }();\n\n  _proto.loadImages = /*#__PURE__*/function () {\n    var _loadImages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var promises, listToExplore, node;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              promises = [];\n              listToExplore = this.children.slice(0);\n\n              while (listToExplore.length > 0) {\n                node = listToExplore.shift();\n\n                if (node.name === 'Image') {\n                  promises.push(node.fetch());\n                }\n\n                if (node.children) {\n                  node.children.forEach(function (childNode) {\n                    listToExplore.push(childNode);\n                  });\n                }\n              }\n\n              _context3.next = 5;\n              return Promise.all(promises);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function loadImages() {\n      return _loadImages.apply(this, arguments);\n    }\n\n    return loadImages;\n  }();\n\n  _proto.loadAssets = /*#__PURE__*/function () {\n    var _loadAssets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return Promise.all([this.loadFonts(), this.loadImages(), this.loadEmojis()]);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function loadAssets() {\n      return _loadAssets.apply(this, arguments);\n    }\n\n    return loadAssets;\n  }();\n\n  _proto.applyProps = function applyProps() {\n    this.children.forEach(function (child) {\n      return child.applyProps();\n    });\n  };\n\n  _proto.update = function update(newProps) {\n    this.props = newProps;\n  };\n\n  _proto.cleanup = function cleanup() {\n    this.subpages.forEach(function (p) {\n      return p.cleanup();\n    });\n  };\n\n  _proto.finish = function finish() {\n    this.children.forEach(function (c) {\n      return c.cleanup();\n    });\n  };\n\n  _proto.getLayoutData = function getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(function (c) {\n        return c.getLayoutData();\n      })\n    };\n  };\n\n  _proto.wrapPages = /*#__PURE__*/function () {\n    var _wrapPages2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var pageCount, pages, _iterator, _step, page, wrapArea, subpages;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              pageCount = 1;\n              pages = [];\n              _iterator = _createForOfIteratorHelperLoose$2(this.children);\n\n            case 3:\n              if ((_step = _iterator()).done) {\n                _context5.next = 17;\n                break;\n              }\n\n              page = _step.value;\n\n              if (!page.wrap) {\n                _context5.next = 14;\n                break;\n              }\n\n              wrapArea = page.isAutoHeight ? Infinity : page.size.height - (page.style.paddingBottom || 0);\n              _context5.next = 9;\n              return _wrapPages(page, wrapArea, pageCount);\n\n            case 9:\n              subpages = _context5.sent;\n              pageCount += subpages.length;\n              pages.push.apply(pages, subpages);\n              _context5.next = 15;\n              break;\n\n            case 14:\n              pages.push(page);\n\n            case 15:\n              _context5.next = 3;\n              break;\n\n            case 17:\n              return _context5.abrupt(\"return\", pages);\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function wrapPages() {\n      return _wrapPages2.apply(this, arguments);\n    }\n\n    return wrapPages;\n  }();\n\n  _proto.renderPages = /*#__PURE__*/function () {\n    var _renderPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var j;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.wrapPages();\n\n            case 2:\n              this.subpages = _context6.sent;\n              j = 0;\n\n            case 4:\n              if (!(j < this.subpages.length)) {\n                _context6.next = 11;\n                break;\n              } // Update dynamic text nodes with total pages info\n\n\n              this.subpages[j].renderDynamicNodes({\n                pageNumber: j + 1,\n                totalPages: this.subpages.length\n              }, function (node) {\n                return node.name === 'Text';\n              });\n              _context6.next = 8;\n              return this.subpages[j].render();\n\n            case 8:\n              j++;\n              _context6.next = 4;\n              break;\n\n            case 11:\n              return _context6.abrupt(\"return\", this.subpages);\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function renderPages() {\n      return _renderPages.apply(this, arguments);\n    }\n\n    return renderPages;\n  }();\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              this.addMetaData();\n              this.applyProps();\n              _context7.next = 5;\n              return this.loadAssets();\n\n            case 5:\n              _context7.next = 7;\n              return this.renderPages();\n\n            case 7:\n              this.root.instance.end();\n              Font$1.reset();\n              _context7.next = 14;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this, [[0, 11]]);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Document, [{\n    key: \"name\",\n    get: function get() {\n      return 'Document';\n    }\n  }]);\n\n  return Document;\n}();\n\nDocument.defaultProps = {\n  author: null,\n  keywords: null,\n  subject: null,\n  title: null\n};\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'radialGradient'];\n\nvar painter = function painter(instance) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      instance[prop].apply(instance, arguments);\n      return p;\n    }, _extends2));\n  }, {}); //changing linear gradient\n\n  p.linearGradient = function () {\n    return painter(instance.linearGradient.apply(instance, arguments));\n  };\n\n  return p;\n};\n\nvar Canvas = /*#__PURE__*/function (_Base) {\n  _inheritsLoose(Canvas, _Base);\n\n  function Canvas() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Canvas.prototype;\n\n  _proto.render = /*#__PURE__*/function () {\n    var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$getAbsoluteLayo, left, top, width, height, availableWidth, availableHeight;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$getAbsoluteLayo = this.getAbsoluteLayout(), left = _this$getAbsoluteLayo.left, top = _this$getAbsoluteLayo.top, width = _this$getAbsoluteLayo.width, height = _this$getAbsoluteLayo.height;\n              availableWidth = width - this.paddingLeft - this.paddingRight;\n              availableHeight = height - this.paddingTop - this.paddingBottom;\n              warning(availableWidth && availableHeight, 'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n              this.root.instance.save();\n              this.applyTransformations();\n              this.drawBackgroundColor();\n              this.drawBorders();\n              this.clip();\n              this.root.instance.translate(left + this.paddingLeft, top + this.paddingTop);\n\n              if (this.props.paint) {\n                this.props.paint(painter(this.root.instance), availableWidth, availableHeight);\n              }\n\n              this.root.instance.restore();\n\n              if (this.props.debug) {\n                this.debug();\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }();\n\n  _createClass(Canvas, [{\n    key: \"name\",\n    get: function get() {\n      return 'Canvas';\n    }\n  }]);\n\n  return Canvas;\n}(Base);\n\nCanvas.defaultProps = {\n  style: {},\n  wrap: false\n};\nvar constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance\n};\n\nfunction createInstance(element, root) {\n  var type = element.type,\n      _element$props = element.props,\n      props = _element$props === void 0 ? {} : _element$props;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(\"Invalid element of type \" + type + \" passed to PDF renderer\");\n}\n\nvar propsEqual = function propsEqual(a, b) {\n  var oldPropsKeys = Object.keys(a);\n  var newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < oldPropsKeys.length; i++) {\n    var propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (typeof a[propName] === 'object' && typeof b[propName] === 'object' && propsEqual(a[propName], b[propName])) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (propName === 'children' && (typeof a[propName] === 'string' || typeof b[propName] === 'string')) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nvar emptyObject = {}; // If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\n\nvar shouldReplaceLink = function shouldReplaceLink(type, props) {\n  return type === 'LINK' && (typeof props.children === 'string' || typeof props.children === 'number' || Array.isArray(props.children) || props.render);\n};\n\nvar PDFRenderer = ReactFiberReconciler({\n  schedulePassiveEffects: unstable_scheduleCallback,\n  cancelPassiveEffects: unstable_cancelCallback,\n  supportsMutation: true,\n  appendInitialChild: function appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n  createInstance: function createInstance$1(type, props, internalInstanceHandle) {\n    var instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance({\n      type: instanceType,\n      props: props\n    }, internalInstanceHandle);\n  },\n  createTextInstance: function createTextInstance(text, rootContainerInstance) {\n    return createInstance({\n      type: 'TEXT_INSTANCE',\n      props: text\n    }, rootContainerInstance);\n  },\n  finalizeInitialChildren: function finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n  getPublicInstance: function getPublicInstance(instance) {\n    return instance;\n  },\n  prepareForCommit: function prepareForCommit() {// Noop\n  },\n  prepareUpdate: function prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n  resetAfterCommit: function resetAfterCommit() {// Noop\n  },\n  resetTextContent: function resetTextContent(element) {// Noop\n  },\n  getRootHostContext: function getRootHostContext() {\n    return emptyObject;\n  },\n  getChildHostContext: function getChildHostContext() {\n    return emptyObject;\n  },\n  shouldSetTextContent: function shouldSetTextContent(type, props) {\n    return false;\n  },\n  now: Date.now,\n  useSyncScheduling: true,\n  appendChild: function appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n  appendChildToContainer: function appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n  insertBefore: function insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n  removeChild: function removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n  removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n  commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n  commitUpdate: function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  }\n});\nvar version = \"1.6.8\";\nvar View$1 = 'VIEW';\nvar Text$1 = 'TEXT';\nvar Link$1 = 'LINK';\nvar Page$1 = 'PAGE';\nvar Note$1 = 'NOTE';\nvar Image$1 = 'IMAGE';\nvar Document$1 = 'DOCUMENT';\nvar Canvas$1 = 'CANVAS';\n\nvar pdf = function pdf(input) {\n  var container = createInstance({\n    type: 'ROOT'\n  });\n  var mountNode = PDFRenderer.createContainer(container);\n  if (input) updateContainer(input);\n\n  function callOnRender(params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    if (container.document.props.onRender) {\n      var layoutData = container.document.getLayoutData();\n      container.document.props.onRender(_extends({}, params, {\n        layoutData: layoutData\n      }));\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  function toBlob() {\n    return _toBlob.apply(this, arguments);\n  }\n\n  function _toBlob() {\n    _toBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var stream;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return container.render();\n\n            case 2:\n              stream = container.instance.pipe(BlobStream());\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                stream.on('finish', function () {\n                  try {\n                    var blob = stream.toBlob('application/pdf');\n                    callOnRender({\n                      blob: blob\n                    });\n                    resolve(blob);\n                  } catch (error) {\n                    reject(error);\n                  }\n                });\n                stream.on('error', reject);\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _toBlob.apply(this, arguments);\n  }\n\n  function toBuffer() {\n    return _toBuffer.apply(this, arguments);\n  }\n\n  function _toBuffer() {\n    _toBuffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return container.render();\n\n            case 2:\n              callOnRender();\n              return _context2.abrupt(\"return\", container.instance);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _toBuffer.apply(this, arguments);\n  }\n\n  function toString() {\n    var result = '';\n    container.render();\n    return new Promise(function (resolve, reject) {\n      try {\n        container.instance.on('data', function (buffer) {\n          result += buffer;\n        });\n        container.instance.on('end', function () {\n          callOnRender({\n            string: result\n          });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty: isDirty,\n    container: container,\n    updateContainer: updateContainer,\n    toBuffer: toBuffer,\n    toBlob: toBlob,\n    toString: toString\n  };\n};\n\nvar flatStyles = function flatStyles(stylesArray) {\n  return stylesArray.reduce(function (acc, style) {\n    return _extends({}, acc, {}, style);\n  }, {});\n};\n\nvar Document$2 = function Document(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  return /*#__PURE__*/React.createElement(Document$1, props, children);\n};\n\nvar InternalBlobProvider = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(InternalBlobProvider, _React$PureComponent);\n\n  function InternalBlobProvider(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this; // Create new root container for this render\n\n    _this.state = {\n      blob: null,\n      url: null,\n      loading: true,\n      error: null\n    };\n    _this.instance = pdf();\n    return _this;\n  }\n\n  var _proto = InternalBlobProvider.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty() && !this.state.error) {\n      this.onDocumentUpdate();\n    }\n  };\n\n  _proto.renderDocument = function renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  };\n\n  _proto.onDocumentUpdate = function onDocumentUpdate() {\n    var _this2 = this;\n\n    var oldBlobUrl = this.state.url;\n    this.instance.toBlob().then(function (blob) {\n      _this2.setState({\n        blob: blob,\n        url: URL.createObjectURL(blob),\n        loading: false\n      }, function () {\n        return URL.revokeObjectURL(oldBlobUrl);\n      });\n    })[\"catch\"](function (error) {\n      _this2.setState({\n        error: error\n      });\n\n      console.error(error);\n      throw error;\n    });\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state);\n  };\n\n  return InternalBlobProvider;\n}(React.PureComponent);\n\nvar BlobProvider = function BlobProvider(_ref2) {\n  var doc = _ref2.document,\n      children = _ref2.children;\n\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(InternalBlobProvider, {\n    document: doc\n  }, children);\n};\n\nvar PDFViewer = function PDFViewer(_ref3) {\n  var className = _ref3.className,\n      style = _ref3.style,\n      children = _ref3.children,\n      innerRef = _ref3.innerRef,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"className\", \"style\", \"children\", \"innerRef\"]);\n\n  return /*#__PURE__*/React.createElement(InternalBlobProvider, {\n    document: children\n  }, function (_ref4) {\n    var url = _ref4.url;\n    return /*#__PURE__*/React.createElement(\"iframe\", _extends({\n      className: className,\n      ref: innerRef,\n      src: url,\n      style: Array.isArray(style) ? flatStyles(style) : style\n    }, props));\n  });\n};\n\nvar PDFDownloadLink = function PDFDownloadLink(_ref5) {\n  var doc = _ref5.document,\n      className = _ref5.className,\n      style = _ref5.style,\n      children = _ref5.children,\n      _ref5$fileName = _ref5.fileName,\n      fileName = _ref5$fileName === void 0 ? 'document.pdf' : _ref5$fileName;\n\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  var downloadOnIE = function downloadOnIE(blob) {\n    return function () {\n      if (window.navigator.msSaveBlob) {\n        window.navigator.msSaveBlob(blob, fileName);\n      }\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(InternalBlobProvider, {\n    document: doc\n  }, function (params) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: className,\n      download: fileName,\n      href: params.url,\n      onClick: downloadOnIE(params.blob),\n      style: Array.isArray(style) ? flatStyles(style) : style\n    }, typeof children === 'function' ? children(params) : children);\n  });\n};\n\nvar dom = {\n  pdf: pdf,\n  View: View$1,\n  Text: Text$1,\n  Link: Link$1,\n  Page: Page$1,\n  Font: Font$1,\n  Note: Note$1,\n  Image: Image$1,\n  Canvas: Canvas$1,\n  version: version,\n  Document: Document$2,\n  PDFViewer: PDFViewer,\n  StyleSheet: StyleSheet,\n  PDFRenderer: PDFRenderer,\n  BlobProvider: BlobProvider,\n  createInstance: createInstance,\n  PDFDownloadLink: PDFDownloadLink\n};\nexport default dom;\nexport { BlobProvider, Canvas$1 as Canvas, Document$2 as Document, Font$1 as Font, Image$1 as Image, Link$1 as Link, Note$1 as Note, PDFDownloadLink, PDFRenderer, PDFViewer, Page$1 as Page, StyleSheet, Text$1 as Text, View$1 as View, createInstance, pdf, version };","map":{"version":3,"sources":["../src/utils/warning.js","../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/deepMerge.js","../src/utils/isFunction.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/utils/url.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"names":["args","argIndex","message","console","__DEV__","process","warning","format","printWarning","Root","appendChild","removeChild","markDirty","cleanup","finish","render","autoFirstPage","upperFirst","value","isPercent","matchPercent","match","parseFloat","percent","absValue","Math","absPercent","YOGA_CONFIG","Yoga","Node","child","appendChildBefore","index","removeAllChilds","children","i","remove","setDimension","fixedMethod","percentMethod","setPosition","setPadding","setMargin","setBorder","getAbsoluteLayout","parent","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","c","right","bottom","paddingLeft","marginLeft","yogaValue","isAlignType","prop","DPI","parseValue","unit","undefined","parseScalar","scalar","container","isBorderStyle","key","matchBorderShorthand","processBorders","isBoxModelStyle","matchBoxModel","processBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","isObjectPositionStyle","matchObjectPosition","processObjectPosition","isTransformOriginStyle","matchTransformOrigin","transformOffsetKeywords","processTransformOrigin","result","hasOwnProperty","Object","styleShorthands","margin","marginTop","marginRight","marginBottom","marginHorizontal","marginVertical","padding","paddingTop","paddingRight","paddingBottom","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandStyles","propsArray","resolvedStyle","style","expandedProps","transformStyles","expandedStyles","resolved","create","flatten","Array","input","s","acc","resolveMediaQueries","matchMedia","resolve","styles","absoluteFillObject","position","hairlineWidth","Debug","debug","layout","debugOrigin","origin","debugText","roundedWidth","roundedHeight","debugContent","debugPadding","debugMargin","KAPPA","instance","opacity","rtr","rtl","rbr","rbl","clipBorderTop","fillBorderTop","clipBorderRight","fillBorderRight","clipBorderBottom","fillBorderBottom","clipBorderLeft","fillBorderLeft","ctx","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","space","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","topLeftCoordX","bottomLeftXCoord","drawBorders","Clipping","clip","ctr","cbr","cbl","ctl","getRotation","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","Transformations","applyTransformations","re","transform","merge","isNil","deepMerge","mergeDeepWith","isFunction","compose","equals","inheritedProperties","Base","percentX","percentY","offsetX","offsetY","update","applyProps","toPairsIn","attribute","resolveStyles","size","orientation","isAutoHeight","ownStyles","StyleSheet","inheritedStyles","pick","applyStyle","setter","getLayoutData","type","drawBackgroundColor","backgroundColor","clone","onNodeSplit","renderChildren","minPresenceAhead","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","length","max","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","hasVerticalRuler","getHorizontalSteps","percentage","getVerticalSteps","renderRuler","drawHorizontalRuler","offset","hRange","step","drawVerticalRuler","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","PROTOCOL_REGEXP","DEST_REGEXP","getURL","isSrcId","src","setLink","instanceMethod","nodeSrc","setDestination","Page","defaultProps","wrap","resetMargins","rulerWidth","dimension","edge","addDynamicChild","props","createInstance","renderDynamicNodes","listToExplore","condition","cb","elements","nodeWillWrap","View","fetchFont","response","fetch","buffer","Buffer","FontSource","fontStyle","load","headers","body","method","data","fontkit","err","reject","Font","register","fontWeight","options","descriptor","styleSources","exactFit","leftOffset","rightOffset","fit","res","lt","gt","registerEmojiSource","url","emojiSource","getEmojiSource","registerHyphenationCallback","hyphenationCallback","getHyphenationCallback","fonts","family","font","getRegisteredFonts","getRegisteredFontFamilies","getFont","fontFamily","isStandard","standardFonts","reset","clear","StandardFont","PDFFont","encoded","positions","stringIndices","glyphs","glyph","parseInt","glyphForCodePoint","getGlyph","id","_font","codePoints","isLigature","name","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","pathOr","getFallbackFont","getOrCreateFont","shouldFallbackToFont","fontSubstitution","string","runs","lastFont","lastIndex","run","fontSize","defaultFont","start","end","attributes","char","codePoint","shouldFallback","scale","last","engines","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","engine","layoutEngine","PNG","MARKERS","JPEG","pos","marker","createCache","limit","cache","keys","get","set","IMAGE_CACHE","fetchRemoteFile","isValidFormat","lower","guessFormat","isCompatibleBase64","uri","extension","resolveBase64Image","getImage","resolveImageFromData","JSON","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","cacheKey","image","emojis","regex","emojiRegex","reflect","makeFetchEmojiImage","_removeNoColor","x","getCodePoints","buildEmojiUrl","fetchEmojis","promises","emoji","emojiUrl","loading","fetchEmojiImage","embedEmojis","fragments","fragment","emojiSize","chunk","String","attachment","yOffset","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","PREPROCESSORS","capitalize","l","isImage","propEq","isTextInstance","complement","transformText","text","getFragments","color","textAlign","lineHeight","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","obj","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","getAttributedString","AttributedString","Text","widows","orphans","hyphenationPenalty","shrinkWhitespaceFactor","before","after","line","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","y","maxLines","truncateMode","textOverflow","linesCount","b","measureText","widthMode","linesHeight","wrapHeight","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","renderText","initialY","PDFRenderer","Link","Note","isNumeric","isNaN","isFinite","applyContainObjectFit","cr","cw","ir","iw","pxp","pyp","pxv","pyv","xOffset","ch","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","px","py","resolveObjectFit","SAFETY_HEIGHT","Image","shouldGrow","measureImage","imageMargin","pagePadding","pageArea","heightMode","scaledHeight","safePath","allowDangerousPaths","renderImage","Document","author","keywords","subject","title","addMetaData","creator","producer","loadFonts","Promise","loadEmojis","loadImages","loadAssets","p","wrapPages","pageCount","pages","page","wrapArea","subpages","renderPages","j","pageNumber","totalPages","availableMethods","painter","Canvas","availableWidth","availableHeight","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","oldPropsKeys","newPropsKeys","propName","a","emptyObject","shouldReplaceLink","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","appendInitialChild","parentInstance","instanceType","createTextInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","insertBefore","removeChildFromContainer","commitTextUpdate","textInstance","commitUpdate","pdf","mountNode","updateContainer","params","layoutData","stream","BlobStream","blob","callOnRender","isDirty","toBuffer","toBlob","toString","flatStyles","InternalBlobProvider","React","PureComponent","state","error","componentDidMount","componentDidUpdate","renderDocument","onDocumentUpdate","oldBlobUrl","URL","BlobProvider","document","doc","PDFViewer","className","innerRef","PDFDownloadLink","fileName","downloadOnIE","window","version"],"mappings":"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","sourcesContent":["function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document.cleanup();\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  cleanup() {\n    this.document.cleanup();\n  }\n\n  finish() {\n    this.document.finish();\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.cleanup();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createWithConfig(YOGA_CONFIG);\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n\n    child.cleanup();\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  cleanup() {\n    this.children.forEach(c => c.cleanup());\n    this.layout.unsetMeasureFunc();\n    Yoga.Node.destroy(this.layout);\n  }\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const DPI = 72; // 72pt per inch.\n\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  }\n\n  return { value, unit: undefined };\n};\n\nconst parseScalar = (value, container) => {\n  const scalar = parseValue(value);\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * (1 / 25.4) * DPI;\n    case 'cm':\n      return scalar.value * (1 / 2.54) * DPI;\n    case 'vh':\n      if (container.isAutoHeight) {\n        throw new Error(\n          'vh unit not supported in auto-height pages. Please specify page height if you want to use vh.',\n        );\n      }\n\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\n\nexport const processFontWeight = value => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value =>\n  value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = (style, container) => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else if (isFontWeightStyle(key, value)) {\n      resolved = processFontWeight(value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved, container);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles, container);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","import { isNil, mergeDeepWith } from 'ramda';\n\nconst merge = (a, b) => {\n  return isNil(b) ? a : b;\n};\n\nconst deepMerge = objs =>\n  objs.reduce((acc, obj) => {\n    return mergeDeepWith(merge, acc, obj);\n  }, {});\n\nexport default deepMerge;\n","import { compose, equals, type } from 'ramda';\n\nconst isFunction = compose(\n  equals('Function'),\n  type,\n);\n\nexport default isFunction;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import { pick, toPairsIn } from 'ramda';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport deepMerge from '../utils/deepMerge';\nimport upperFirst from '../utils/upperFirst';\nimport isFunction from '../utils/isFunction';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = deepMerge([\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    ]);\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = deepMerge([\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    ]);\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation, isAutoHeight } = this.page;\n    const container = {\n      orientation,\n      isAutoHeight,\n      width: size.width,\n      height: size.height,\n    };\n\n    const ownStyles = StyleSheet.resolve(this.props.style, container);\n\n    const inheritedStyles = this.parent\n      ? pick(inheritedProperties, this.parent.style)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  cleanup() {}\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type string, number, array or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'number') {\n    result = [size];\n  } else if (typeof size === 'object' && size.width) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\nconst DEST_REGEXP = /^#.+/;\n\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (isSrcId(value)) return value; // don't modify it if it is an id\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n\nexport const isSrcId = src => src.match(DEST_REGEXP);\n\nexport const setLink = node => {\n  if (!node.src) {\n    return;\n  }\n\n  const { top, left, width, height } = node.getAbsoluteLayout();\n  const instanceMethod = isSrcId(node.src) ? 'goTo' : 'link';\n  const nodeSrc = isSrcId(node.src) ? node.src.slice(1) : node.src;\n\n  node.root.instance[instanceMethod](left, top, width, height, nodeSrc);\n};\n\nexport const setDestination = node => {\n  if (!node.props.id) {\n    return;\n  }\n\n  const { top } = node.getAbsoluteLayout();\n  node.root.instance.addNamedDestination(node.props.id, 'XYZ', null, top, null);\n};\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\nimport { setDestination } from '../utils/url';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  get isAutoHeight() {\n    return typeof this.size.height === 'undefined';\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  update(newProps) {\n    super.update(newProps);\n    this._size = null;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    if (!this.isAutoHeight) {\n      this.height = this.size.height;\n    }\n\n    this.calculateLayout();\n\n    const height = this.isAutoHeight ? this.height : this.size.height;\n\n    instance.addPage({\n      size: [this.size.width, height],\n      margin: 0,\n    });\n    setDestination(this)\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\nimport { setDestination } from '../utils/url'\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    setDestination(this);\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor, doc) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import { pathOr, last } from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = pathOr(12, ['attributes', 'fontSize']);\n\nconst getFallbackFont = () => {\n  return getOrCreateFont('Helvetica');\n};\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst shouldFallbackToFont = (codePoint, font) => {\n  return (\n    !IGNORED_CODE_POINTS.includes(codePoint) &&\n    !font.hasGlyphForCodePoint(codePoint) &&\n    getFallbackFont().hasGlyphForCodePoint(codePoint)\n  );\n};\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","import layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport fontSubstitution from './fontSubstitution';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\nexport default engine;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { isNil, propEq, prop, complement, compose } from 'ramda';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst isImage = propEq('name', 'Image');\n\nconst isTextInstance = compose(\n  complement(isNil),\n  prop('value'),\n);\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance));\n};\n","import Yoga from 'yoga-layout';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Base from './Base';\nimport Font from '../font';\nimport layout from '../layout';\nimport { getURL, setLink, setDestination } from '../utils/url';\nimport { getAttributedString } from '../utils/attributedString';\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.blocks = null;\n    this.computed = false;\n    this.attributedString = null;\n    this.layoutOptions = {\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n      shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n    };\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.blocks) return [];\n\n    return this.blocks\n      .reduce((acc, block) => [...acc, ...block], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.blocks) return -1;\n    return this.lines.reduce((acc, line) => acc + line.box.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.blocks) return -1;\n    return Math.max(\n      ...this.lines.map(line => AttributedString.advanceWidth(line)),\n    );\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n\n      child.cleanup();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.box.height > height) return i;\n      counter += line.box.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.box.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.blocks || this.props.render) {\n      // Do the actual text layout.\n      /// If height null or NaN, we take some liberty on layout height\n      const container = {\n        x: 0,\n        y: 0,\n        width,\n        height: height || Infinity,\n        maxLines: this.style.maxLines,\n        truncateMode: this.style.textOverflow,\n      };\n      this.blocks = layout(\n        this.attributedString,\n        container,\n        this.layoutOptions,\n      );\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.blocks.reduce((acc, b) => acc + b.length, 0);\n\n    this.end = linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width, height);\n\n      return { height: this.linesHeight };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.blocks && !this.props.render) {\n      text.blocks = [...this.blocks];\n    }\n\n    return text;\n  }\n\n  renderText() {\n    const { top, left } = this.getAbsoluteLayout();\n    const initialY = this.lines[0] ? this.lines[0].box.y : 0;\n\n    // We translate lines based on Yoga container\n    this.root.instance.save();\n    this.root.instance.translate(\n      left + this.padding.left,\n      top + this.padding.top - initialY,\n    );\n    // Perform actual text rendering on document\n    PDFRenderer.render(this.root.instance, [this.lines]);\n    setLink(this);\n    setDestination(this)\n\n\n    this.root.instance.restore();\n  }\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    this.renderText();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL, setLink } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    setLink(this);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n\n    child.cleanup();\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\nimport { setDestination } from '../utils/url';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea = this.page.isAutoHeight\n      ? Infinity\n      : this.page.size.height -\n        pagePadding.top -\n        pagePadding.bottom -\n        imageMargin.top -\n        imageMargin.bottom -\n        SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      const src = typeof this.src === 'function' ? await this.src() : this.src;\n      this.image = await resolveImage(src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    setDestination(this);\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n\n    child.cleanup();\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages(), this.loadEmojis()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  cleanup() {\n    this.subpages.forEach(p => p.cleanup());\n  }\n\n  finish() {\n    this.children.forEach(c => c.cleanup());\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      if (page.wrap) {\n        const wrapArea = page.isAutoHeight\n          ? Infinity\n          : page.size.height - (page.style.paddingBottom || 0);\n\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  //changing linear gradient\n  p.linearGradient = (...args) => painter(instance.linearGradient(...args));\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects\n} from 'scheduler';\n\nimport { createInstance } from './elements';\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  schedulePassiveEffects,\n  cancelPassiveEffects,\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    await container.render();\n\n    callOnRender();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function (buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function () {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    container,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport warning from '../src/utils/warning';\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty() && !this.state.error) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        console.error(error);\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"]},"metadata":{},"sourceType":"module"}