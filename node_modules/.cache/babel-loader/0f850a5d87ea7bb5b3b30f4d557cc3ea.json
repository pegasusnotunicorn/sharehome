{"ast":null,"code":"import { FooterCardConstants } from '../../Footer/FooterCardConstants.js'; //variables for printing in inches\n\nconst DPI = 72; //(dots per inch)\n\nlet documentBleed = 0.125;\nlet documentWidth = 3.5;\nlet documentHeight = 2.5;\nconst mainFont = 25;\nconst subFont = 15; //turn on bleed;\n\ndocumentWidth += documentBleed;\ndocumentHeight += documentBleed; //multiply by DPI;\n\ndocumentWidth = documentWidth * DPI;\ndocumentHeight = documentHeight * DPI;\ndocumentBleed = documentBleed * DPI; //magnifyValues for the card viewer and the card preview\n\nexport const previewMagnifyValue = 0.5; //dimensions of the PDF (used to style both PDF and the PDF Wrapper DIV)\n//points = inches x dpi (dots per inch)\n//double padding for bleed + real padding\n\nexport const PDFDimensions = {\n  width: documentWidth,\n  height: documentHeight,\n  padding: 2 * documentBleed,\n  mainFont: mainFont,\n  subFont: subFont\n}; //function to get an image's width + height after object-fit: cover\n\nfunction getCoverFitObject(objectWidth, objectHeight, viewerWidth, viewerHeight) {\n  let viewerRatio = viewerWidth / viewerHeight;\n  let objectRatio = objectWidth / objectHeight; //get width and height of the object after fit\n\n  let tempObjectWidth, tempObjectHeight;\n\n  if (objectRatio < viewerRatio) {\n    tempObjectWidth = viewerWidth;\n    tempObjectHeight = viewerWidth / objectRatio;\n  } else {\n    tempObjectWidth = viewerHeight * objectRatio;\n    tempObjectHeight = viewerHeight;\n  }\n\n  return {\n    width: tempObjectWidth,\n    height: tempObjectHeight,\n    x: Math.round(viewerWidth / 2 - tempObjectWidth / 2),\n    y: Math.round(viewerHeight / 2 - tempObjectHeight / 2)\n  };\n} //default card variables\n\n\nconst randomMember = FooterCardConstants.getRandomMember();\nconst defaultName = randomMember.name;\nconst defaultJapaneseName = randomMember.japaneseName;\nconst defaultAge = randomMember.age;\nconst defaultJob = randomMember.job;\nconst defaultImage = getImageObject(randomMember.image.url, //url\n\"test.jpg\", //name\n1000, //width\n1400 //height\n);\nexport function getImageObject(url, name, width, height) {\n  let imageXY = getCoverFitObject(width, height, documentWidth, documentHeight);\n  return {\n    url: url,\n    name: name,\n    x: imageXY.x,\n    y: imageXY.y,\n    width: imageXY.width,\n    height: imageXY.height\n  };\n}\nexport function getDefaultCardObject() {\n  return {\n    name: defaultName,\n    japaneseName: defaultJapaneseName,\n    age: defaultAge,\n    job: defaultJob,\n    image: defaultImage\n  };\n}","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/Designer/utils/CardConstants.js"],"names":["FooterCardConstants","DPI","documentBleed","documentWidth","documentHeight","mainFont","subFont","previewMagnifyValue","PDFDimensions","width","height","padding","getCoverFitObject","objectWidth","objectHeight","viewerWidth","viewerHeight","viewerRatio","objectRatio","tempObjectWidth","tempObjectHeight","x","Math","round","y","randomMember","getRandomMember","defaultName","name","defaultJapaneseName","japaneseName","defaultAge","age","defaultJob","job","defaultImage","getImageObject","image","url","imageXY","getDefaultCardObject"],"mappings":"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","sourcesContent":["import { FooterCardConstants } from '../../Footer/FooterCardConstants.js';\n\n//variables for printing in inches\nconst DPI = 72;   //(dots per inch)\nlet documentBleed = 0.125;\nlet documentWidth = 3.5;\nlet documentHeight = 2.5;\nconst mainFont = 25;\nconst subFont = 15;\n\n//turn on bleed;\ndocumentWidth += documentBleed;\ndocumentHeight += documentBleed;\n\n//multiply by DPI;\ndocumentWidth = documentWidth * DPI;\ndocumentHeight = documentHeight * DPI;\ndocumentBleed = documentBleed * DPI;\n\n//magnifyValues for the card viewer and the card preview\nexport const previewMagnifyValue = 0.5;\n\n//dimensions of the PDF (used to style both PDF and the PDF Wrapper DIV)\n//points = inches x dpi (dots per inch)\n//double padding for bleed + real padding\nexport const PDFDimensions = {\n  width: documentWidth,\n  height: documentHeight,\n  padding: 2 * documentBleed,\n  mainFont: mainFont,\n  subFont: subFont\n}\n\n//function to get an image's width + height after object-fit: cover\nfunction getCoverFitObject(objectWidth, objectHeight, viewerWidth, viewerHeight){\n  let viewerRatio = viewerWidth / viewerHeight;\n  let objectRatio = objectWidth / objectHeight;\n\n  //get width and height of the object after fit\n  let tempObjectWidth, tempObjectHeight;\n  if (objectRatio < viewerRatio) {\n    tempObjectWidth = viewerWidth;\n    tempObjectHeight = viewerWidth / objectRatio;\n  } else {\n    tempObjectWidth = viewerHeight * objectRatio;\n    tempObjectHeight = viewerHeight;\n  }\n\n  return {\n    width: tempObjectWidth,\n    height: tempObjectHeight,\n    x: Math.round((viewerWidth/2) - (tempObjectWidth/2)),\n    y: Math.round((viewerHeight/2) - (tempObjectHeight/2)),\n  };\n}\n\n//default card variables\nconst randomMember = FooterCardConstants.getRandomMember();\nconst defaultName = randomMember.name;\nconst defaultJapaneseName = randomMember.japaneseName;\nconst defaultAge = randomMember.age;\nconst defaultJob = randomMember.job;\nconst defaultImage = getImageObject(\n  randomMember.image.url,     //url\n  \"test.jpg\",             //name\n  1000,                   //width\n  1400                    //height\n);\n\nexport function getImageObject(url, name, width, height){\n  let imageXY = getCoverFitObject(width, height, documentWidth, documentHeight);\n\n  return {\n    url: url,\n    name: name,\n    x: imageXY.x,\n    y: imageXY.y,\n    width: imageXY.width,\n    height: imageXY.height,\n  }\n}\n\nexport function getDefaultCardObject(){\n  return {\n    name : defaultName,\n    japaneseName : defaultJapaneseName,\n    age : defaultAge,\n    job : defaultJob,\n    image : defaultImage,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}