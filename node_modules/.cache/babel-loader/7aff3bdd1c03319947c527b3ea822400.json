{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardEditorConstants from './CardEditorConstants.js'; //wrapper for card editor section (including input + PDF)\n\nfunction CardEditorWrapper() {\n  const [name, setName] = useState(CardEditorConstants.defaultName);\n  const [japaneseName, setJapaneseName] = useState(CardEditorConstants.defaultJapaneseName);\n  const [age, setAge] = useState(CardEditorConstants.defaultAge);\n  const [job, setJob] = useState(CardEditorConstants.defaultJob);\n  const [image, setImage] = useState(CardEditorConstants.defaultImagePath); // //bool to keep track of rendered so we can render the download link\n\n  const [rendered, setRendered] = useState(false); // const DownloadLink = () => {\n  //   if (rendered){\n  //     return (\n  //       <div>Fuck document...</div>\n  //     )\n  //   }\n  //   else {\n  //     return <div>Loading document...</div>\n  //   }\n  // }\n  //\n  //runs after render\n\n  useEffect(() => {\n    setRendered(true);\n  }, []); //PDF document\n\n  const CardDocument = () => /*#__PURE__*/React.createElement(PDFDocument, {\n    name: name,\n    job: job,\n    age: age,\n    image: image,\n    japaneseName: japaneseName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }); //event handler to change the name state in react\n\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  }; //event handler to change the name state in react\n\n\n  const handleJapaneseNameChange = e => {\n    setJapaneseName(e.target.value);\n  }; //event handler to change the age state in react\n\n\n  const handleAgeChange = e => {\n    setAge(e.target.value);\n  }; //event handler to change the job state in react\n\n\n  const handleJobChange = e => {\n    setJob(e.target.value);\n  }; //event handler to change the image state in react\n\n\n  const handleImageChange = e => {\n    const tempImage = e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : CardEditorConstants.defaultImagePath;\n    setImage(tempImage);\n  }; // download link\n  // <PDFDownloadLink document={myDoc} fileName={name + \".pdf\"}>\n  //   {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n  // </PDFDownloadLink>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PDFWrapper\",\n    style: {\n      height: CardEditorConstants.PDFDimensions.height * 2,\n      width: CardEditorConstants.PDFDimensions.width * 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    scrolling: \"no\",\n    className: \"PDFViewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardDocument, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleNameChange: handleNameChange,\n    handleJapaneseNameChange: handleJapaneseNameChange,\n    handleAgeChange: handleAgeChange,\n    handleJobChange: handleJobChange,\n    handleImageChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditorWrapper;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js"],"names":["React","useState","useEffect","PDFViewer","PDFDownloadLink","PDFDocument","InputWrapper","CardEditorConstants","CardEditorWrapper","name","setName","defaultName","japaneseName","setJapaneseName","defaultJapaneseName","age","setAge","defaultAge","job","setJob","defaultJob","image","setImage","defaultImagePath","rendered","setRendered","CardDocument","handleNameChange","e","target","value","handleJapaneseNameChange","handleAgeChange","handleJobChange","handleImageChange","tempImage","files","URL","createObjectURL","height","PDFDimensions","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardEditorConstants from './CardEditorConstants.js';\n\n//wrapper for card editor section (including input + PDF)\nfunction CardEditorWrapper(){\n  const [name, setName] = useState(CardEditorConstants.defaultName);\n  const [japaneseName, setJapaneseName] = useState(CardEditorConstants.defaultJapaneseName);\n  const [age, setAge] = useState(CardEditorConstants.defaultAge);\n  const [job, setJob] = useState(CardEditorConstants.defaultJob);\n  const [image, setImage] = useState(CardEditorConstants.defaultImagePath);\n\n  // //bool to keep track of rendered so we can render the download link\n  const [rendered, setRendered] = useState(false);\n  // const DownloadLink = () => {\n  //   if (rendered){\n  //     return (\n  //       <div>Fuck document...</div>\n  //     )\n  //   }\n  //   else {\n  //     return <div>Loading document...</div>\n  //   }\n  // }\n  //\n  //runs after render\n  useEffect(() => {\n    setRendered(true);\n  }, []);\n\n  //PDF document\n  const CardDocument = () => (\n    <PDFDocument\n      name={name}\n      job={job}\n      age={age}\n      image={image}\n      japaneseName={japaneseName}\n    />\n  )\n\n  //event handler to change the name state in react\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  }\n\n  //event handler to change the name state in react\n  const handleJapaneseNameChange = (e) => {\n    setJapaneseName(e.target.value);\n  }\n\n  //event handler to change the age state in react\n  const handleAgeChange = (e) => {\n    setAge(e.target.value);\n  }\n\n  //event handler to change the job state in react\n  const handleJobChange = (e) => {\n    setJob(e.target.value);\n  }\n\n  //event handler to change the image state in react\n  const handleImageChange = (e) => {\n    const tempImage = (e.target.files[0]) ? URL.createObjectURL(e.target.files[0]) : CardEditorConstants.defaultImagePath;\n    setImage(tempImage);\n  }\n\n  // download link\n  // <PDFDownloadLink document={myDoc} fileName={name + \".pdf\"}>\n  //   {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n  // </PDFDownloadLink>\n\n  return (\n    <div>\n      <div className=\"PDFWrapper\" style={{\n        height: CardEditorConstants.PDFDimensions.height * 2,\n        width: CardEditorConstants.PDFDimensions.width * 2\n      }}>\n        <PDFViewer scrolling=\"no\" className=\"PDFViewer\">\n          <CardDocument />\n        </PDFViewer>\n      </div>\n      <InputWrapper\n        handleNameChange={handleNameChange}\n        handleJapaneseNameChange={handleJapaneseNameChange}\n        handleAgeChange={handleAgeChange}\n        handleJobChange={handleJobChange}\n        handleImageChange={handleImageChange}\n      />\n    </div>\n  );\n}\n\nexport default CardEditorWrapper;\n"]},"metadata":{},"sourceType":"module"}