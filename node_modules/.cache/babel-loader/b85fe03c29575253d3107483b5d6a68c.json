{"ast":null,"code":"import * as CardConstants from '../components/CardEditor/CardConstants.js'; //how much to magnify the HTML PDF viewer\n\nconst magnifyValue = 2;\nconst padding = CardConstants.PDFDimensions.padding * magnifyValue;\nconst mainFont = CardConstants.PDFDimensions.mainFont * magnifyValue;\nconst subFont = CardConstants.PDFDimensions.subFont * magnifyValue;\nconst height = CardConstants.PDFDimensions.height * magnifyValue;\nconst width = CardConstants.PDFDimensions.width * magnifyValue;\nconst PDFViewerDynamicStyles = {\n  style: {\n    height: height,\n    width: width\n  },\n  //divide by 2 here because we multiplied by 2 in constants for \"real padding\"\n  bleedStyle: {\n    borderRadius: padding / 2,\n    height: \"calc(100% - \" + padding + \"px)\",\n    width: \"calc(100% - \" + padding + \"px)\"\n  },\n  textStyle: {\n    padding: padding,\n    width: \"calc(100% - \" + padding * 2 + \"px)\"\n  },\n  mainFont: {\n    fontSize: mainFont\n  },\n  subFont: {\n    fontSize: subFont\n  }\n};\nexport default PDFViewerDynamicStyles; //function to get an image's width + height after object-fit\n\nexport function getWidthAndHeight(objectWidth, objectHeight) {\n  let containerRatio = width / height;\n  let objectRatio = objectWidth / objectHeight;\n  let renderedObject = {};\n\n  if (objectRatio < containerRatio) {\n    renderedObject.width = width;\n    renderedObject.height = width / objectRatio;\n  } else {\n    renderedObject.width = height * objectRatio;\n    renderedObject.height = objectHeight * containerRatio;\n  }\n\n  return renderedObject;\n}","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/css/PDFViewerDynamicStyles.js"],"names":["CardConstants","magnifyValue","padding","PDFDimensions","mainFont","subFont","height","width","PDFViewerDynamicStyles","style","bleedStyle","borderRadius","textStyle","fontSize","getWidthAndHeight","objectWidth","objectHeight","containerRatio","objectRatio","renderedObject"],"mappings":"AAAA,OAAO,KAAKA,aAAZ,MAA+B,2CAA/B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAArB;AAEA,MAAMC,OAAO,GAAGF,aAAa,CAACG,aAAd,CAA4BD,OAA5B,GAAsCD,YAAtD;AACA,MAAMG,QAAQ,GAAGJ,aAAa,CAACG,aAAd,CAA4BC,QAA5B,GAAuCH,YAAxD;AACA,MAAMI,OAAO,GAAGL,aAAa,CAACG,aAAd,CAA4BE,OAA5B,GAAsCJ,YAAtD;AACA,MAAMK,MAAM,GAAGN,aAAa,CAACG,aAAd,CAA4BG,MAA5B,GAAqCL,YAApD;AACA,MAAMM,KAAK,GAAGP,aAAa,CAACG,aAAd,CAA4BI,KAA5B,GAAoCN,YAAlD;AAEA,MAAMO,sBAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAEA,MADH;AAELC,IAAAA,KAAK,EAAEA;AAFF,GADsB;AAK7B;AACAG,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAACT,OAAO,GAAG,CADb;AAEVI,IAAAA,MAAM,EAAC,iBAAiBJ,OAAjB,GAA2B,KAFxB;AAGVK,IAAAA,KAAK,EAAC,iBAAiBL,OAAjB,GAA2B;AAHvB,GANiB;AAW7BU,EAAAA,SAAS,EAAE;AACTV,IAAAA,OAAO,EAAEA,OADA;AAETK,IAAAA,KAAK,EAAC,iBAAiBL,OAAO,GAAG,CAA3B,GAA+B;AAF5B,GAXkB;AAe7BE,EAAAA,QAAQ,EAAE;AACRS,IAAAA,QAAQ,EAAET;AADF,GAfmB;AAkB7BC,EAAAA,OAAO,EAAE;AACPQ,IAAAA,QAAQ,EAAER;AADH;AAlBoB,CAA/B;AAuBA,eAAeG,sBAAf,C,CAEA;;AACA,OAAO,SAASM,iBAAT,CAA2BC,WAA3B,EAAwCC,YAAxC,EAAqD;AAC1D,MAAIC,cAAc,GAAGV,KAAK,GAAGD,MAA7B;AACA,MAAIY,WAAW,GAAGH,WAAW,GAAGC,YAAhC;AAEA,MAAIG,cAAc,GAAG,EAArB;;AAEA,MAAID,WAAW,GAAGD,cAAlB,EAAkC;AAChCE,IAAAA,cAAc,CAACZ,KAAf,GAAuBA,KAAvB;AACAY,IAAAA,cAAc,CAACb,MAAf,GAAwBC,KAAK,GAAGW,WAAhC;AACD,GAHD,MAGO;AACLC,IAAAA,cAAc,CAACZ,KAAf,GAAuBD,MAAM,GAAGY,WAAhC;AACAC,IAAAA,cAAc,CAACb,MAAf,GAAwBU,YAAY,GAAGC,cAAvC;AACD;;AAED,SAAOE,cAAP;AACD","sourcesContent":["import * as CardConstants from '../components/CardEditor/CardConstants.js';\n\n//how much to magnify the HTML PDF viewer\nconst magnifyValue = 2;\n\nconst padding = CardConstants.PDFDimensions.padding * magnifyValue;\nconst mainFont = CardConstants.PDFDimensions.mainFont * magnifyValue;\nconst subFont = CardConstants.PDFDimensions.subFont * magnifyValue;\nconst height = CardConstants.PDFDimensions.height * magnifyValue;\nconst width = CardConstants.PDFDimensions.width * magnifyValue;\n\nconst PDFViewerDynamicStyles = {\n  style: {\n    height: height,\n    width: width\n  },\n  //divide by 2 here because we multiplied by 2 in constants for \"real padding\"\n  bleedStyle: {\n    borderRadius:padding / 2,\n    height:\"calc(100% - \" + padding + \"px)\",\n    width:\"calc(100% - \" + padding + \"px)\",\n  },\n  textStyle: {\n    padding: padding,\n    width:\"calc(100% - \" + padding * 2 + \"px)\",\n  },\n  mainFont: {\n    fontSize: mainFont\n  },\n  subFont: {\n    fontSize: subFont\n  },\n}\n\nexport default PDFViewerDynamicStyles;\n\n//function to get an image's width + height after object-fit\nexport function getWidthAndHeight(objectWidth, objectHeight){\n  let containerRatio = width / height;\n  let objectRatio = objectWidth / objectHeight;\n\n  let renderedObject = {};\n\n  if (objectRatio < containerRatio) {\n    renderedObject.width = width;\n    renderedObject.height = width / objectRatio;\n  } else {\n    renderedObject.width = height * objectRatio;\n    renderedObject.height = objectHeight * containerRatio;\n  }\n\n  return renderedObject;\n}\n"]},"metadata":{},"sourceType":"module"}