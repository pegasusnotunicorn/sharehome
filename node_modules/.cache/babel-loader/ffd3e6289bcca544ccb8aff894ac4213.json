{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js\";\nimport React, { useState } from 'react';\n\nconst path = require('path'); //in-browser viewer for PDF\n\n\nimport { PDFViewer } from '@react-pdf/renderer'; //download link to download PDF as file\n// import { PDFDownloadLink } from '@react-pdf/renderer';\n\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardEditorConstants from './CardEditorConstants.js'; //wrapper for card editor section (including input + PDF)\n\nfunction CardEditorWrapper() {\n  const [name, setName] = useState(CardEditorConstants.defaultName);\n  const [image, setImage] = useState(CardEditorConstants.defaultImagePath);\n  const myDoc = /*#__PURE__*/React.createElement(PDFDocument, {\n    name: name,\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }); //event handler to change the text state in react\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  }; //event handler to change the image state in react\n\n\n  const handleImageChange = e => {\n    const tempImage = e.target.files[0] ? e.target.files[0] : CardEditorConstants.defaultImagePath;\n    console.log(tempImage);\n    setImage(URL.createObjectURL(tempImage));\n  }; // download link (copy and paste into below return)\n  // <PDFDownloadLink document={myDoc} fileName={name + \".pdf\"}>\n  //   {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n  // </PDFDownloadLink>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PDFWrapper\",\n    style: {\n      height: CardEditorConstants.PDFDimensions.height * 2,\n      width: CardEditorConstants.PDFDimensions.width * 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    scrolling: \"no\",\n    className: \"PDFViewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, myDoc)), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleNameChange: handleNameChange,\n    handleImageChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditorWrapper;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js"],"names":["React","useState","path","require","PDFViewer","PDFDocument","InputWrapper","CardEditorConstants","CardEditorWrapper","name","setName","defaultName","image","setImage","defaultImagePath","myDoc","handleNameChange","e","target","value","handleImageChange","tempImage","files","console","log","URL","createObjectURL","height","PDFDimensions","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,SAASC,SAAT,QAA0B,qBAA1B,C,CAEA;AACA;;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,mBAAZ,MAAqC,0BAArC,C,CAEA;;AACA,SAASC,iBAAT,GAA4B;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,mBAAmB,CAACI,WAArB,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACM,mBAAmB,CAACO,gBAArB,CAAlC;AACA,QAAMC,KAAK,gBACT,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,KAAK,EAAEG,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAH0B,CAS1B;;AACA,QAAMI,gBAAgB,GAAIC,CAAD,IAAO;AAC9BP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD,CAV0B,CAc1B;;;AACA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC/B,UAAMI,SAAS,GAAIJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf,CAAD,GAAsBL,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf,CAAtB,GAA0Cf,mBAAmB,CAACO,gBAAhF;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAR,IAAAA,QAAQ,CAACY,GAAG,CAACC,eAAJ,CAAoBL,SAApB,CAAD,CAAR;AACD,GAJD,CAf0B,CAqB1B;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AACjCM,MAAAA,MAAM,EAAEpB,mBAAmB,CAACqB,aAApB,CAAkCD,MAAlC,GAA2C,CADlB;AAEjCE,MAAAA,KAAK,EAAEtB,mBAAmB,CAACqB,aAApB,CAAkCC,KAAlC,GAA0C;AAFhB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,SAAS,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KADH,CAJF,CADF,eASE,oBAAC,YAAD;AACE,IAAA,gBAAgB,EAAEC,gBADpB;AAEE,IAAA,iBAAiB,EAAEI,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD;;AAED,eAAeZ,iBAAf","sourcesContent":["import React, { useState } from 'react';\nconst path = require('path');\n\n//in-browser viewer for PDF\nimport { PDFViewer } from '@react-pdf/renderer';\n\n//download link to download PDF as file\n// import { PDFDownloadLink } from '@react-pdf/renderer';\n\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport * as CardEditorConstants from './CardEditorConstants.js';\n\n//wrapper for card editor section (including input + PDF)\nfunction CardEditorWrapper(){\n  const [name, setName] = useState(CardEditorConstants.defaultName);\n  const [image, setImage] = useState(CardEditorConstants.defaultImagePath);\n  const myDoc = (\n    <PDFDocument\n      name={name}\n      image={image}\n    />);\n\n  //event handler to change the text state in react\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  }\n\n  //event handler to change the image state in react\n  const handleImageChange = (e) => {\n    const tempImage = (e.target.files[0]) ? e.target.files[0] : CardEditorConstants.defaultImagePath;\n    console.log(tempImage);\n    setImage(URL.createObjectURL(tempImage));\n  }\n\n  // download link (copy and paste into below return)\n  // <PDFDownloadLink document={myDoc} fileName={name + \".pdf\"}>\n  //   {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n  // </PDFDownloadLink>\n\n  return (\n    <div>\n      <div className=\"PDFWrapper\" style={{\n        height: CardEditorConstants.PDFDimensions.height * 2,\n        width: CardEditorConstants.PDFDimensions.width * 2\n      }}>\n        <PDFViewer scrolling=\"no\" className=\"PDFViewer\">\n          {myDoc}\n        </PDFViewer>\n      </div>\n      <InputWrapper\n        handleNameChange={handleNameChange}\n        handleImageChange={handleImageChange}\n      />\n\n    </div>\n  );\n}\n\nexport default CardEditorWrapper;\n"]},"metadata":{},"sourceType":"module"}