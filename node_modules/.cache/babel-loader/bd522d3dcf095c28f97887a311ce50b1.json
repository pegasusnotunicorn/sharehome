{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/Footer/Footer.js\";\nimport React from 'react';\nimport { MemberCard } from './MemberCard.js';\nimport { EventGoalCard } from './EventGoalCard.js';\nimport '../../css/footer.css';\n\nfunction createRandomCards(type, totalSame, totalAll) {\n  let cards = [...Array(totalSame)].map((curr, index) => {\n    let randomLeft = Math.round(Math.random() * 10 - 5 + index * (100 / totalSame));\n    let randomBottom = Math.round(Math.random() * -50);\n    let randomZ = Math.round(Math.random() * totalAll);\n    let style = {\n      left: randomLeft,\n      bottom: randomBottom,\n      zIndex: randomZ,\n      filter: \"brightness(\" + Math.random() + \")\"\n    };\n\n    switch (type) {\n      case \"member\":\n        return /*#__PURE__*/React.createElement(MemberCard, {\n          key: \"memberCard\" + index,\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        let randomType = Math.random() > 0.5 ? \"goal\" : \"event\";\n        return /*#__PURE__*/React.createElement(EventGoalCard, {\n          type: randomType,\n          key: randomType + \"Card\" + index,\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        });\n    }\n  });\n  return cards;\n}\n\nconst Footer = props => {\n  let totalMemberCards = 6;\n  let totalEventGoalCards = 3;\n  let totalCards = totalMemberCards + totalEventGoalCards;\n  let memberCards = createRandomCards(\"member\", totalMemberCards, totalCards);\n  let eventGoalCard = createRandomCards(\"eventgoal\", totalEventGoalCards, totalCards);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, eventGoalCard, memberCards);\n};\n\nexport default Footer;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/Footer/Footer.js"],"names":["React","MemberCard","EventGoalCard","createRandomCards","type","totalSame","totalAll","cards","Array","map","curr","index","randomLeft","Math","round","random","randomBottom","randomZ","style","left","bottom","zIndex","filter","randomType","Footer","props","totalMemberCards","totalEventGoalCards","totalCards","memberCards","eventGoalCard"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,sBAAP;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAqD;AACnD,MAAIC,KAAK,GAAG,CAAC,GAAGC,KAAK,CAACH,SAAD,CAAT,EAAsBI,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KAAe;AACnD,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAtB,GAA4BJ,KAAD,IAAS,MAAIN,SAAb,CAAtC,CAAjB;AACA,QAAIW,YAAY,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAC,EAA5B,CAAnB;AACA,QAAIE,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,QAA3B,CAAd;AAEA,QAAIY,KAAK,GAAG;AACVC,MAAAA,IAAI,EAAEP,UADI;AAEVQ,MAAAA,MAAM,EAAEJ,YAFE;AAGVK,MAAAA,MAAM,EAAEJ,OAHE;AAIVK,MAAAA,MAAM,EAAE,gBAAgBT,IAAI,CAACE,MAAL,EAAhB,GAAgC;AAJ9B,KAAZ;;AAOA,YAAQX,IAAR;AACE,WAAK,QAAL;AACE,4BACE,oBAAC,UAAD;AACE,UAAA,GAAG,EAAE,eAAeO,KADtB;AAEE,UAAA,KAAK,EAAEO,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMF;AACE,YAAIK,UAAU,GAAIV,IAAI,CAACE,MAAL,KAAgB,GAAjB,GAAwB,MAAxB,GAAiC,OAAlD;AACA,4BACE,oBAAC,aAAD;AACE,UAAA,IAAI,EAAEQ,UADR;AAEE,UAAA,GAAG,EAAEA,UAAU,GAAG,MAAb,GAAsBZ,KAF7B;AAGE,UAAA,KAAK,EAAEO,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAVJ;AAkBD,GA9BW,CAAZ;AA+BA,SAAOX,KAAP;AACD;;AAED,MAAMiB,MAAM,GAAIC,KAAD,IAAW;AACxB,MAAIC,gBAAgB,GAAG,CAAvB;AACA,MAAIC,mBAAmB,GAAG,CAA1B;AACA,MAAIC,UAAU,GAAGF,gBAAgB,GAAGC,mBAApC;AAEA,MAAIE,WAAW,GAAG1B,iBAAiB,CAAC,QAAD,EAAWuB,gBAAX,EAA6BE,UAA7B,CAAnC;AACA,MAAIE,aAAa,GAAG3B,iBAAiB,CAAC,WAAD,EAAcwB,mBAAd,EAAmCC,UAAnC,CAArC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,aADH,EAEGD,WAFH,CADF;AAMD,CAdD;;AAgBA,eAAeL,MAAf","sourcesContent":["import React from 'react';\nimport { MemberCard } from './MemberCard.js';\nimport { EventGoalCard } from './EventGoalCard.js';\nimport '../../css/footer.css';\n\nfunction createRandomCards(type, totalSame, totalAll){\n  let cards = [...Array(totalSame)].map((curr, index)=>{\n    let randomLeft = Math.round((Math.random() * 10 - 5) + (index)*(100/totalSame));\n    let randomBottom = Math.round(Math.random() * -50);\n    let randomZ = Math.round(Math.random() * totalAll);\n\n    let style = {\n      left: randomLeft,\n      bottom: randomBottom,\n      zIndex: randomZ,\n      filter: \"brightness(\" + Math.random() + \")\",\n    }\n\n    switch (type) {\n      case \"member\":\n        return (\n          <MemberCard\n            key={\"memberCard\" + index}\n            style={style}\n          />\n        )\n      default:\n        let randomType = (Math.random() > 0.5) ? \"goal\" : \"event\";\n        return (\n          <EventGoalCard\n            type={randomType}\n            key={randomType + \"Card\" + index}\n            style={style}\n          />\n        )\n    }\n  });\n  return cards;\n}\n\nconst Footer = (props) => {\n  let totalMemberCards = 6;\n  let totalEventGoalCards = 3;\n  let totalCards = totalMemberCards + totalEventGoalCards;\n\n  let memberCards = createRandomCards(\"member\", totalMemberCards, totalCards);\n  let eventGoalCard = createRandomCards(\"eventgoal\", totalEventGoalCards, totalCards);\n\n  return (\n    <div>\n      {eventGoalCard}\n      {memberCards}\n    </div>\n  )\n}\n\nexport default Footer;\n"]},"metadata":{},"sourceType":"module"}