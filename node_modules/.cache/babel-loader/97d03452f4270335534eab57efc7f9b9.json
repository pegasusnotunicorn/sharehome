{"ast":null,"code":"import * as CardConstants from '../components/CardEditor/CardConstants.js'; //how much to magnify the HTML PDF viewer\n\nconst magnifyValue = 2;\nconst padding = CardConstants.PDFDimensions.padding * magnifyValue;\nconst mainFont = CardConstants.PDFDimensions.mainFont * magnifyValue;\nconst subFont = CardConstants.PDFDimensions.subFont * magnifyValue;\nexport const viewerHeight = CardConstants.PDFDimensions.height * magnifyValue;\nexport const viewerWidth = CardConstants.PDFDimensions.width * magnifyValue;\nconst PDFViewerDynamicStyles = {\n  style: {\n    height: viewerHeight,\n    width: viewerWidth\n  },\n  //divide by 2 here because we multiplied by 2 in constants for \"real padding\"\n  bleedStyle: {\n    borderRadius: padding / 2,\n    height: \"calc(100% - \" + padding + \"px)\",\n    width: \"calc(100% - \" + padding + \"px)\"\n  },\n  textStyle: {\n    padding: padding,\n    width: \"calc(100% - \" + padding * 2 + \"px)\"\n  },\n  mainFont: {\n    fontSize: mainFont\n  },\n  subFont: {\n    fontSize: subFont\n  }\n};\nexport default PDFViewerDynamicStyles; //function to get an image's width + height after object-fit: cover\n\nexport function getCoverFitObjectDimensions(objectWidth, objectHeight) {\n  let viewerRatio = viewerWidth / viewerHeight;\n  let objectRatio = objectWidth / objectHeight;\n  let renderedObject = {};\n\n  if (objectRatio < viewerRatio) {\n    renderedObject.width = viewerWidth;\n    renderedObject.height = viewerHeight / objectRatio;\n  } else {\n    renderedObject.width = viewerWidth * objectRatio;\n    renderedObject.height = viewerHeight;\n  }\n\n  return renderedObject;\n}","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/css/PDFViewerDynamicStyles.js"],"names":["CardConstants","magnifyValue","padding","PDFDimensions","mainFont","subFont","viewerHeight","height","viewerWidth","width","PDFViewerDynamicStyles","style","bleedStyle","borderRadius","textStyle","fontSize","getCoverFitObjectDimensions","objectWidth","objectHeight","viewerRatio","objectRatio","renderedObject"],"mappings":"AAAA,OAAO,KAAKA,aAAZ,MAA+B,2CAA/B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAArB;AAEA,MAAMC,OAAO,GAAGF,aAAa,CAACG,aAAd,CAA4BD,OAA5B,GAAsCD,YAAtD;AACA,MAAMG,QAAQ,GAAGJ,aAAa,CAACG,aAAd,CAA4BC,QAA5B,GAAuCH,YAAxD;AACA,MAAMI,OAAO,GAAGL,aAAa,CAACG,aAAd,CAA4BE,OAA5B,GAAsCJ,YAAtD;AACA,OAAO,MAAMK,YAAY,GAAGN,aAAa,CAACG,aAAd,CAA4BI,MAA5B,GAAqCN,YAA1D;AACP,OAAO,MAAMO,WAAW,GAAGR,aAAa,CAACG,aAAd,CAA4BM,KAA5B,GAAoCR,YAAxD;AAEP,MAAMS,sBAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,MAAM,EAAED,YADH;AAELG,IAAAA,KAAK,EAAED;AAFF,GADsB;AAK7B;AACAI,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAACX,OAAO,GAAG,CADb;AAEVK,IAAAA,MAAM,EAAC,iBAAiBL,OAAjB,GAA2B,KAFxB;AAGVO,IAAAA,KAAK,EAAC,iBAAiBP,OAAjB,GAA2B;AAHvB,GANiB;AAW7BY,EAAAA,SAAS,EAAE;AACTZ,IAAAA,OAAO,EAAEA,OADA;AAETO,IAAAA,KAAK,EAAC,iBAAiBP,OAAO,GAAG,CAA3B,GAA+B;AAF5B,GAXkB;AAe7BE,EAAAA,QAAQ,EAAE;AACRW,IAAAA,QAAQ,EAAEX;AADF,GAfmB;AAkB7BC,EAAAA,OAAO,EAAE;AACPU,IAAAA,QAAQ,EAAEV;AADH;AAlBoB,CAA/B;AAuBA,eAAeK,sBAAf,C,CAEA;;AACA,OAAO,SAASM,2BAAT,CAAqCC,WAArC,EAAkDC,YAAlD,EAA+D;AACpE,MAAIC,WAAW,GAAGX,WAAW,GAAGF,YAAhC;AACA,MAAIc,WAAW,GAAGH,WAAW,GAAGC,YAAhC;AAEA,MAAIG,cAAc,GAAG,EAArB;;AAEA,MAAID,WAAW,GAAGD,WAAlB,EAA+B;AAC7BE,IAAAA,cAAc,CAACZ,KAAf,GAAuBD,WAAvB;AACAa,IAAAA,cAAc,CAACd,MAAf,GAAwBD,YAAY,GAAGc,WAAvC;AACD,GAHD,MAGO;AACLC,IAAAA,cAAc,CAACZ,KAAf,GAAuBD,WAAW,GAAGY,WAArC;AACAC,IAAAA,cAAc,CAACd,MAAf,GAAwBD,YAAxB;AACD;;AAED,SAAOe,cAAP;AACD","sourcesContent":["import * as CardConstants from '../components/CardEditor/CardConstants.js';\n\n//how much to magnify the HTML PDF viewer\nconst magnifyValue = 2;\n\nconst padding = CardConstants.PDFDimensions.padding * magnifyValue;\nconst mainFont = CardConstants.PDFDimensions.mainFont * magnifyValue;\nconst subFont = CardConstants.PDFDimensions.subFont * magnifyValue;\nexport const viewerHeight = CardConstants.PDFDimensions.height * magnifyValue;\nexport const viewerWidth = CardConstants.PDFDimensions.width * magnifyValue;\n\nconst PDFViewerDynamicStyles = {\n  style: {\n    height: viewerHeight,\n    width: viewerWidth\n  },\n  //divide by 2 here because we multiplied by 2 in constants for \"real padding\"\n  bleedStyle: {\n    borderRadius:padding / 2,\n    height:\"calc(100% - \" + padding + \"px)\",\n    width:\"calc(100% - \" + padding + \"px)\",\n  },\n  textStyle: {\n    padding: padding,\n    width:\"calc(100% - \" + padding * 2 + \"px)\",\n  },\n  mainFont: {\n    fontSize: mainFont\n  },\n  subFont: {\n    fontSize: subFont\n  },\n}\n\nexport default PDFViewerDynamicStyles;\n\n//function to get an image's width + height after object-fit: cover\nexport function getCoverFitObjectDimensions(objectWidth, objectHeight){\n  let viewerRatio = viewerWidth / viewerHeight;\n  let objectRatio = objectWidth / objectHeight;\n\n  let renderedObject = {};\n\n  if (objectRatio < viewerRatio) {\n    renderedObject.width = viewerWidth;\n    renderedObject.height = viewerHeight / objectRatio;\n  } else {\n    renderedObject.width = viewerWidth * objectRatio;\n    renderedObject.height = viewerHeight;\n  }\n\n  return renderedObject;\n}\n"]},"metadata":{},"sourceType":"module"}