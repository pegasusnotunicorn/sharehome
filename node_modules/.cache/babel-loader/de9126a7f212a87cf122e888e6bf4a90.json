{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/utils/DebugTools.js\";\nimport React from 'react';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport PDFDocument from '../DeckEditor/PDFDocument.js';\nimport CardDynamicStyles from '../../css/CardDynamicStyles.js';\nimport * as CardConstants from '../CardEditor/CardConstants.js';\nlet cardViewerDynamicStyles = CardDynamicStyles(CardConstants.viewerMagnifyValue);\nlet debugMode = true; //buttons to console log various debug variables\n\nexport function DebugButtons(props) {\n  if (!debugMode) {\n    return \"\";\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"devtools sidebarContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, \"Debug Tools\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"sideBarButton\",\n      onClick: () => {\n        console.log(props.currentCard);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"Log current card\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"sideBarButton\",\n      onClick: () => {\n        console.log(props.currentIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, \"Log current index\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"sideBarButton\",\n      onClick: () => {\n        console.log(props.cards);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, \"Log cards\"));\n  }\n} //debug how PDF looks faster with PDFViewer built into browser, dont have to download file each time\n\nexport function DebugPDFViewer(props) {\n  if (!debugMode) {\n    return \"\";\n  } else {\n    let embeddPDFStyle = {\n      width: cardViewerDynamicStyles.style.width,\n      height: cardViewerDynamicStyles.style.height,\n      outline: 0,\n      border: 0,\n      display: \"inline-block\",\n      backgroundColor: \"rgb(82, 86, 89)\"\n    }; //only display when the mouses is up\n\n    if (!props.startingCoords) {\n      return /*#__PURE__*/React.createElement(PDFViewer, {\n        style: embeddPDFStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PDFDocument, {\n        cards: props.cards,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: embeddPDFStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n}","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/utils/DebugTools.js"],"names":["React","PDFViewer","PDFDocument","CardDynamicStyles","CardConstants","cardViewerDynamicStyles","viewerMagnifyValue","debugMode","DebugButtons","props","console","log","currentCard","currentIndex","cards","DebugPDFViewer","embeddPDFStyle","width","style","height","outline","border","display","backgroundColor","startingCoords"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,gCAA/B;AAEA,IAAIC,uBAAuB,GAAGF,iBAAiB,CAACC,aAAa,CAACE,kBAAf,CAA/C;AACA,IAAIC,SAAS,GAAG,IAAhB,C,CAEA;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACjC,MAAI,CAACF,SAAL,EAAe;AACb,WAAO,EAAP;AACD,GAFD,MAGK;AACH,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAEA;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAI;AAACG,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB;AAA+B,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,eAGA;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAI;AAACF,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,YAAlB;AAAgC,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHA,eAIA;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAI;AAACH,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,KAAlB;AAAyB,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJA,CADF;AAQD;AACF,C,CAED;;AACA,OAAO,SAASC,cAAT,CAAwBN,KAAxB,EAA8B;AACnC,MAAI,CAACF,SAAL,EAAe;AACb,WAAO,EAAP;AACD,GAFD,MAGK;AACH,QAAIS,cAAc,GAAG;AACnBC,MAAAA,KAAK,EAAEZ,uBAAuB,CAACa,KAAxB,CAA8BD,KADlB;AAEnBE,MAAAA,MAAM,EAAEd,uBAAuB,CAACa,KAAxB,CAA8BC,MAFnB;AAGnBC,MAAAA,OAAO,EAAE,CAHU;AAInBC,MAAAA,MAAM,EAAE,CAJW;AAKnBC,MAAAA,OAAO,EAAE,cALU;AAMnBC,MAAAA,eAAe,EAAE;AANE,KAArB,CADG,CAUH;;AACA,QAAI,CAACd,KAAK,CAACe,cAAX,EAA0B;AACxB,0BACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAER,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEP,KAAK,CAACK,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAOK;AACH,0BAAO;AAAK,QAAA,KAAK,EAAEE,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;AACF","sourcesContent":["import React from 'react';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport PDFDocument from '../DeckEditor/PDFDocument.js';\nimport CardDynamicStyles from '../../css/CardDynamicStyles.js';\nimport * as CardConstants from '../CardEditor/CardConstants.js';\n\nlet cardViewerDynamicStyles = CardDynamicStyles(CardConstants.viewerMagnifyValue);\nlet debugMode = true;\n\n//buttons to console log various debug variables\nexport function DebugButtons(props){\n  if (!debugMode){\n    return \"\";\n  }\n  else {\n    return (\n      <div className=\"devtools sidebarContent\">\n      <div>Debug Tools</div>\n      <button className=\"sideBarButton\" onClick={()=>{console.log(props.currentCard)}}>Log current card</button>\n      <button className=\"sideBarButton\" onClick={()=>{console.log(props.currentIndex)}}>Log current index</button>\n      <button className=\"sideBarButton\" onClick={()=>{console.log(props.cards)}}>Log cards</button>\n      </div>\n    )\n  }\n}\n\n//debug how PDF looks faster with PDFViewer built into browser, dont have to download file each time\nexport function DebugPDFViewer(props){\n  if (!debugMode){\n    return \"\";\n  }\n  else {\n    let embeddPDFStyle = {\n      width: cardViewerDynamicStyles.style.width,\n      height: cardViewerDynamicStyles.style.height,\n      outline: 0,\n      border: 0,\n      display: \"inline-block\",\n      backgroundColor: \"rgb(82, 86, 89)\",\n    }\n\n    //only display when the mouses is up\n    if (!props.startingCoords){\n      return (\n        <PDFViewer style={embeddPDFStyle}>\n          <PDFDocument cards={props.cards}/>\n        </PDFViewer>\n      )\n    }\n    else {\n      return <div style={embeddPDFStyle}></div>\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}