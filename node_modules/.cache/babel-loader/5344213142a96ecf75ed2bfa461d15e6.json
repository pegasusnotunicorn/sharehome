{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/PDFDocument.js\";\nimport React from 'react';\nimport { Document, Page, View, Text, Canvas, Image, Font } from '@react-pdf/renderer'; //import fonts as variables because strings don't seem to work\n\nimport InterstateExtraLightCondensed from \"../../css/Interstate-ExtraLight-Cond.ttf\";\nimport GenShinGothic from \"../../css/GenShinGothic-Monospace-ExtraLight.ttf\"; //styles for the PDF document/file\n\nimport * as CardConstants from './CardConstants.js';\nimport PDFPage from './PDFPage.js';\nimport styles from '../../css/PDFDocument.js'; //function to paint the shadow background canvas gradient\n\nfunction paintShadowBackground(painter, availableWidth, availableHeight) {\n  let grad = painter.linearGradient(0, 0, 0, availableHeight);\n  grad.stop(0, \"white\", 0);\n  grad.stop(1, \"black\", .75);\n  painter.rect(0, 0, availableWidth, availableHeight);\n  painter.fill(grad);\n} //create a PDF document and use currentCard to change the inside text\n\n\nfunction PDFDocument(props) {\n  const currentCard = props.currentCard;\n  const cards = props.cards;\n  const listOfCards = cards.map((step, move) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"card\" + move,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: className,\n      onClick: () => goToCard(move),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, desc));\n  }); //register fonts here so each time document is made, fonts will be good\n\n  Font.register({\n    family: 'Interstate Extra Light Condensed',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    src: InterstateExtraLightCondensed\n  });\n  Font.register({\n    family: 'Genshin Gothic Monospace ExtraLight',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    src: GenShinGothic\n  });\n  return /*#__PURE__*/React.createElement(Document, {\n    class: \"PDFDocument\",\n    style: styles.document,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    style: styles.page,\n    size: CardConstants.PDFDimensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: currentCard.image,\n    allowDangerousPaths: true,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    style: styles.canvas,\n    paint: paintShadowBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: styles.textMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, currentCard.name, \" (\", currentCard.age, \")\"), /*#__PURE__*/React.createElement(Text, {\n    style: styles.textSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, currentCard.job, \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Text, {\n    style: styles.japaneseName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, currentCard.japaneseName)))));\n}\n\nexport default PDFDocument;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/PDFDocument.js"],"names":["React","Document","Page","View","Text","Canvas","Image","Font","InterstateExtraLightCondensed","GenShinGothic","CardConstants","PDFPage","styles","paintShadowBackground","painter","availableWidth","availableHeight","grad","linearGradient","stop","rect","fill","PDFDocument","props","currentCard","cards","listOfCards","map","step","move","className","goToCard","desc","register","family","fontStyle","fontWeight","src","document","page","PDFDimensions","view","image","canvas","textMain","name","age","textSub","job","japaneseName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Document, Page, View, Text, Canvas, Image, Font } from '@react-pdf/renderer';\n\n//import fonts as variables because strings don't seem to work\nimport InterstateExtraLightCondensed from \"../../css/Interstate-ExtraLight-Cond.ttf\";\nimport GenShinGothic from \"../../css/GenShinGothic-Monospace-ExtraLight.ttf\";\n\n//styles for the PDF document/file\nimport * as CardConstants from './CardConstants.js';\nimport PDFPage from './PDFPage.js';\nimport styles from '../../css/PDFDocument.js';\n\n//function to paint the shadow background canvas gradient\nfunction paintShadowBackground(painter, availableWidth, availableHeight){\n  let grad = painter.linearGradient(0, 0, 0, availableHeight);\n  grad.stop(0, \"white\", 0);\n  grad.stop(1, \"black\", .75);\n\n  painter.rect(0, 0, availableWidth, availableHeight);\n  painter.fill(grad);\n}\n\n//create a PDF document and use currentCard to change the inside text\nfunction PDFDocument(props){\n  const currentCard = props.currentCard;\n  const cards = props.cards;\n\n  const listOfCards = cards.map((step, move) => {\n\n    return (\n      <li key={\"card\"+move}>\n        <button className={className} onClick={() => goToCard(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  //register fonts here so each time document is made, fonts will be good\n  Font.register({\n    family: 'Interstate Extra Light Condensed',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    src: InterstateExtraLightCondensed\n  });\n  Font.register({\n    family: 'Genshin Gothic Monospace ExtraLight',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    src: GenShinGothic\n  });\n\n  return (\n    <Document class=\"PDFDocument\" style={styles.document}>\n      <Page\n        style={styles.page}\n        size={CardConstants.PDFDimensions}\n      >\n        <View style={styles.view}>\n\n          <Image src={currentCard.image} allowDangerousPaths={true} style={styles.image}/>\n\n          <Canvas style={styles.canvas} paint={paintShadowBackground}></Canvas>\n\n          <Text style={styles.textMain}>\n            {currentCard.name} ({currentCard.age})\n          </Text>\n\n          <Text style={styles.textSub}>\n            {currentCard.job}\n            &nbsp;&nbsp;\n            <Text style={styles.japaneseName}>{currentCard.japaneseName}</Text>\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n}\n\nexport default PDFDocument;\n"]},"metadata":{},"sourceType":"module"}