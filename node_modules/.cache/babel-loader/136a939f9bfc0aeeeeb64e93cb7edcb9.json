{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js\";\nimport React, { useState } from 'react'; //custom files\n\nimport * as CardConstants from './CardConstants.js';\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js'; //wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\n\nfunction CardEditor(props) {\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard; //returns a new card details object with newValue for newProp\n\n  const updateCurrentCard = (newProp, newValue, object) => {\n    let tempObject = object ? object : currentCard;\n    return { ...tempObject,\n      [newProp]: newValue\n    };\n  }; //event handlers for inputs\n\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'image':\n        const tempImage = e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : CardConstants.defaultImage;\n        const tempImageName = e.target.files[0] ? e.target.files[0].name : CardConstants.defaultImage;\n        let tempCard = updateCurrentCard(\"image\", tempImage);\n        tempCard = updateCurrentCard(\"imageName\", tempImageName, tempCard);\n        setCurrentCard(tempCard);\n        break;\n\n      case 'download':\n        downloadPDFFile( /*#__PURE__*/React.createElement(PDFDocument, {\n          cards: props.cards,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }\n        }), currentCard.name + \".pdf\");\n        break;\n\n      default:\n        setCurrentCard(updateCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }; //handling image movement\n\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const [imageCoordinates, setimageCoordinates] = useState({\n    x: \"50%\",\n    y: \"50%\"\n  });\n\n  const handleMouseDown = e => {\n    setMouseDown(true);\n  };\n\n  const handleMouseUp = e => {\n    setMouseDown(false);\n  };\n\n  const handleMouseMove = e => {\n    if (mouseDown) {\n      setimageCoordinates({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardViewer, {\n    currentCard: currentCard,\n    handleMouseDown: handleMouseDown,\n    handleMouseUp: handleMouseUp,\n    handleMouseMove: handleMouseMove,\n    imageCoordinates: imageCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleInputChange: handleInputChange,\n    currentCard: currentCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditor;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js"],"names":["React","useState","CardConstants","PDFDocument","downloadPDFFile","CardViewer","InputWrapper","CardEditor","props","currentCard","setCurrentCard","updateCurrentCard","newProp","newValue","object","tempObject","handleInputChange","e","target","name","tempImage","files","URL","createObjectURL","defaultImage","tempImageName","tempCard","cards","value","mouseDown","setMouseDown","imageCoordinates","setimageCoordinates","x","y","handleMouseDown","handleMouseUp","handleMouseMove","clientX","clientY"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n//custom files\nimport * as CardConstants from './CardConstants.js';\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js';\n\n//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditor(props){\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard;\n\n\n  //returns a new card details object with newValue for newProp\n  const updateCurrentCard = (newProp, newValue, object) => {\n    let tempObject = (object) ? object : currentCard;\n    return {\n      ...tempObject,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case 'image':\n        const tempImage = (e.target.files[0]) ? URL.createObjectURL(e.target.files[0]) : CardConstants.defaultImage;\n        const tempImageName = (e.target.files[0]) ? e.target.files[0].name : CardConstants.defaultImage;\n\n        let tempCard = updateCurrentCard(\"image\", tempImage);\n        tempCard = updateCurrentCard(\"imageName\", tempImageName, tempCard);\n\n        setCurrentCard(tempCard);\n        break;\n      case 'download':\n        downloadPDFFile(<PDFDocument\n          cards={props.cards}\n        />, currentCard.name + \".pdf\");\n        break;\n      default:\n        setCurrentCard(updateCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }\n\n  //handling image movement\n  const [mouseDown, setMouseDown] = useState(false);\n  const [imageCoordinates, setimageCoordinates] = useState({\n    x: \"50%\",\n    y: \"50%\"\n  });\n\n  const handleMouseDown = (e) => {\n    setMouseDown(true);\n  }\n  const handleMouseUp = (e) => {\n    setMouseDown(false);\n  }\n  const handleMouseMove = (e) => {\n    if (mouseDown){\n      setimageCoordinates({\n        x: e.clientX,\n        y: e.clientY,\n      });\n    }\n  }\n\n  return (\n    <div>\n      <CardViewer\n        currentCard={currentCard}\n        handleMouseDown={handleMouseDown}\n        handleMouseUp={handleMouseUp}\n        handleMouseMove={handleMouseMove}\n        imageCoordinates={imageCoordinates}\n      />\n      <InputWrapper\n        handleInputChange={handleInputChange}\n        currentCard={currentCard}\n      />\n    </div>\n  );\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}