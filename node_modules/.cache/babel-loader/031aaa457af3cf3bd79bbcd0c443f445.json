{"ast":null,"code":"import _slicedToArray from\"/Users/1min/Documents/sharehome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/1min/Documents/sharehome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/1min/Documents/sharehome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';//custom files\nimport{getImageObject,PDFDimensions}from'../utils/CardConstants.js';import CardViewer from'./CardViewer.js';import CardButtons from'./CardButtons.js';import{DebugPDFViewer}from'../utils/DebugTools.js';import'../../../css/Designer/cardEditor.css';//get the X and Y coordinates of mouse inside the bounding rect divided by magnifyValue\nfunction getMouseXY(e,viewerMagnifyValue){var rect=e.currentTarget.getBoundingClientRect();return{x:(e.clientX-rect.left)/viewerMagnifyValue,//x position within the element.\ny:(e.clientY-rect.top)/viewerMagnifyValue//y position within the element.\n};}//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditor(props){var currentCard=props.currentCard;var setCurrentCard=props.setCurrentCard;//returns a new card details object with newValue for newProp\nvar updateAndReturnCurrentCard=function updateAndReturnCurrentCard(newProp,newValue){return _objectSpread({},currentCard,_defineProperty({},newProp,newValue));};//event handlers for inputs\nvar handleInputChange=function handleInputChange(e){switch(e.target.name){case'image':if(e.target.files[0]){var tempImageURL=URL.createObjectURL(e.target.files[0]);var tempImageName=e.target.files[0].name;//get new details (width / height) of uploaded image and generate a new image object\nvar img=new Image();img.onload=function(){var tempCard=updateAndReturnCurrentCard(\"image\",getImageObject(tempImageURL,tempImageName,img.width,img.height));setCurrentCard(tempCard);};img.src=tempImageURL;}break;default:setCurrentCard(updateAndReturnCurrentCard(e.target.name,e.target.value));break;}};//handling image movement\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),startingCoords=_useState2[0],setStartingCoords=_useState2[1];//set starting coordinates on mouse down\nvar handleMouseDown=function handleMouseDown(e){var mouseXY=getMouseXY(e,props.viewerMagnifyValue);setStartingCoords({x:mouseXY.x,y:mouseXY.y});};var handleMouseUp=function handleMouseUp(e){setStartingCoords(false);};var handleMouseMove=function handleMouseMove(e){//if mouse down\nif(startingCoords){var mouseXY=getMouseXY(e,props.viewerMagnifyValue);var deltaX=startingCoords.x-mouseXY.x;var deltaY=startingCoords.y-mouseXY.y;setStartingCoords({x:mouseXY.x,y:mouseXY.y});//dont let the image move outside of the bounds of the viewer\nvar newX=currentCard.image.x-deltaX;var newY=currentCard.image.y-deltaY;var rightBound=-(currentCard.image.width-PDFDimensions.width);var botBound=-(currentCard.image.height-PDFDimensions.height);newX=newX>0?0:newX;//prevent dragging to the right past left bound\nnewX=newX<rightBound?rightBound:newX;//prevent dragging to the left past right bound\nnewY=newY>0?0:newY;//prevent dragging to the bottom past top bound\nnewY=newY<botBound?botBound:newY;//prevent dragging to the top past bottom bound\n//click to drag/move image\nvar tempCard=updateAndReturnCurrentCard(\"image\",_objectSpread({},currentCard.image,{x:Math.round(newX),y:Math.round(newY)}));setCurrentCard(tempCard);}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CardViewer,{currentCard:currentCard,textNoPointerEvent:startingCoords?\"nopointerevent\":\"\"//so we can move image while over text, but let text be clickable\n,handleMouseDown:handleMouseDown,handleMouseUp:handleMouseUp,handleMouseMove:handleMouseMove,handleInputChange:handleInputChange,viewerMagnifyValue:props.viewerMagnifyValue}),/*#__PURE__*/React.createElement(CardButtons,{handleInputChange:handleInputChange,removeCurrentCard:props.removeCurrentCard,duplicateCurrentCard:props.duplicateCurrentCard}),/*#__PURE__*/React.createElement(DebugPDFViewer,{viewerMagnifyValue:props.viewerMagnifyValue,startingCoords:startingCoords,cards:props.cards}));}export default CardEditor;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/Designer/CardEditor/CardEditor.js"],"names":["React","useState","getImageObject","PDFDimensions","CardViewer","CardButtons","DebugPDFViewer","getMouseXY","e","viewerMagnifyValue","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","CardEditor","props","currentCard","setCurrentCard","updateAndReturnCurrentCard","newProp","newValue","handleInputChange","target","name","files","tempImageURL","URL","createObjectURL","tempImageName","img","Image","onload","tempCard","width","height","src","value","startingCoords","setStartingCoords","handleMouseDown","mouseXY","handleMouseUp","handleMouseMove","deltaX","deltaY","newX","image","newY","rightBound","botBound","Math","round","removeCurrentCard","duplicateCurrentCard","cards"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n//custom files\nimport { getImageObject, PDFDimensions } from '../utils/CardConstants.js';\nimport CardViewer from './CardViewer.js';\nimport CardButtons from './CardButtons.js';\nimport { DebugPDFViewer } from '../utils/DebugTools.js';\nimport '../../../css/Designer/cardEditor.css';\n\n//get the X and Y coordinates of mouse inside the bounding rect divided by magnifyValue\nfunction getMouseXY(e, viewerMagnifyValue){\n  let rect = e.currentTarget.getBoundingClientRect();\n  return {\n    x: (e.clientX - rect.left) / viewerMagnifyValue, //x position within the element.\n    y: (e.clientY - rect.top) / viewerMagnifyValue,  //y position within the element.\n  }\n}\n\n//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditor(props){\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard;\n\n  //returns a new card details object with newValue for newProp\n  const updateAndReturnCurrentCard = (newProp, newValue) => {\n    return {\n      ...currentCard,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case 'image':\n        if (e.target.files[0]){\n          const tempImageURL = URL.createObjectURL(e.target.files[0]);\n          const tempImageName = e.target.files[0].name;\n\n          //get new details (width / height) of uploaded image and generate a new image object\n          let img = new Image();\n          img.onload = function () {\n            let tempCard = updateAndReturnCurrentCard(\"image\", getImageObject(\n              tempImageURL,\n              tempImageName,\n              img.width,\n              img.height,\n            ));\n            setCurrentCard(tempCard);\n          };\n          img.src = tempImageURL;\n        }\n        break;\n      default:\n        setCurrentCard(updateAndReturnCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }\n\n  //handling image movement\n  const [startingCoords, setStartingCoords] = useState(false);\n\n  //set starting coordinates on mouse down\n  const handleMouseDown = (e) => {\n    let mouseXY = getMouseXY(e, props.viewerMagnifyValue);\n    setStartingCoords({\n      x: mouseXY.x,\n      y: mouseXY.y\n    });\n  }\n  const handleMouseUp = (e) => {\n    setStartingCoords(false);\n  }\n  const handleMouseMove = (e) => {\n    //if mouse down\n    if (startingCoords){\n      let mouseXY = getMouseXY(e, props.viewerMagnifyValue);\n      let deltaX = startingCoords.x - mouseXY.x;\n      let deltaY = startingCoords.y - mouseXY.y;\n\n      setStartingCoords({\n        x: mouseXY.x,\n        y: mouseXY.y,\n      });\n\n      //dont let the image move outside of the bounds of the viewer\n      let newX = currentCard.image.x - deltaX;\n      let newY = currentCard.image.y - deltaY;\n      let rightBound = -(currentCard.image.width - PDFDimensions.width);\n      let botBound = -(currentCard.image.height - PDFDimensions.height);\n\n      newX = (newX > 0) ? 0 : newX;     //prevent dragging to the right past left bound\n      newX = (newX < rightBound) ? rightBound : newX; //prevent dragging to the left past right bound\n      newY = (newY > 0) ? 0 : newY;     //prevent dragging to the bottom past top bound\n      newY = (newY < botBound) ? botBound : newY; //prevent dragging to the top past bottom bound\n\n      //click to drag/move image\n      let tempCard = updateAndReturnCurrentCard(\"image\", {\n        ...currentCard.image,\n        x: Math.round(newX),\n        y: Math.round(newY),\n      });\n      setCurrentCard(tempCard);\n    }\n  }\n\n  return (\n    <div>\n      <CardViewer\n        currentCard={currentCard}\n        textNoPointerEvent={(startingCoords) ? \"nopointerevent\" : \"\"}   //so we can move image while over text, but let text be clickable\n        handleMouseDown={handleMouseDown}\n        handleMouseUp={handleMouseUp}\n        handleMouseMove={handleMouseMove}\n        handleInputChange={handleInputChange}\n        viewerMagnifyValue={props.viewerMagnifyValue}\n      />\n      <CardButtons\n        handleInputChange={handleInputChange}\n        removeCurrentCard={props.removeCurrentCard}\n        duplicateCurrentCard={props.duplicateCurrentCard}\n      />\n      <DebugPDFViewer\n        viewerMagnifyValue={props.viewerMagnifyValue}\n        startingCoords={startingCoords}\n        cards={props.cards}\n      />\n    </div>\n  );\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}