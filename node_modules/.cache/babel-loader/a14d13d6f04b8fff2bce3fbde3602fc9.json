{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js\";\nimport React, { useState, useReducer } from 'react';\nimport { PDFViewer } from '@react-pdf/renderer'; //custom files\n\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport downloadFile from './downloadFile.js';\nimport * as CardEditorConstants from './CardEditorConstants.js'; //reducer to change state in react\n//to add a new card use dispatch({ type: 'add', item: movie })\n//to remove an existing card use dispatch({ type: 'remove', index })\n//to update an existing card use dispatch({ type: 'remove', index, value, property })\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return [...state, action.item];\n\n    case 'remove':\n      return [...state.slice(0, action.index), ...state.slice(action.index + 1)];\n\n    case 'update':\n      let updatedItem = state[action.index];\n      updatedItem[action.property] = action.value;\n      return [...state.slice(0, action.index), updatedItem, ...state.slice(action.index + 1)];\n\n    default:\n      throw new Error();\n  }\n} //wrapper for card editor section (including input + PDF)\n\n\nfunction CardEditorWrapper() {\n  const [cards, dispatch] = useReducer(reducer, [{\n    name: CardEditorConstants.defaultName,\n    japaneseName: CardEditorConstants.defaultJapaneseName,\n    age: CardEditorConstants.defaultAge,\n    job: CardEditorConstants.defaultJob,\n    image: CardEditorConstants.defaultImage\n  }]);\n  const [currentCard, setCurrentCard] = useState(cards[0]); //PDF document\n\n  const cardDocument = /*#__PURE__*/React.createElement(PDFDocument, {\n    name: currentCard.name,\n    japaneseName: currentCard.japaneseName,\n    job: currentCard.job,\n    age: currentCard.age,\n    image: currentCard.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }); //returns a new card details object with newValue for newProp\n\n  const updateCurrentCard = (newProp, newValue) => {\n    console.log(newProp, newValue, {\n      [newProp]: newValue\n    });\n    return { ...currentCard,\n      [newProp]: newValue\n    };\n  }; //event handlers for inputs\n\n\n  const handleNameChange = e => {\n    setCurrentCard(updateCurrentCard(\"name\", e.target.value));\n    console.log(currentCard.name);\n  };\n\n  const handleJapaneseNameChange = e => {\n    setCurrentCard(updateCurrentCard(\"japaneseName\", e.target.value));\n  };\n\n  const handleJobChange = e => {\n    setCurrentCard(updateCurrentCard(\"job\", e.target.value));\n  };\n\n  const handleAgeChange = e => {\n    setCurrentCard(updateCurrentCard(\"age\", e.target.value));\n  };\n\n  const handleImageChange = e => {\n    const tempImage = e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : CardEditorConstants.defaultImage;\n    setCurrentCard(updateCurrentCard(\"image\", tempImage));\n  };\n\n  const handleDownload = e => {\n    downloadFile(cardDocument, currentCard.name + \".pdf\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PDFWrapper\",\n    style: {\n      height: CardEditorConstants.PDFDimensions.height * 2,\n      width: CardEditorConstants.PDFDimensions.width * 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    scrolling: \"no\",\n    className: \"PDFViewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, cardDocument)), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleNameChange: handleNameChange,\n    handleJapaneseNameChange: handleJapaneseNameChange,\n    handleAgeChange: handleAgeChange,\n    handleJobChange: handleJobChange,\n    handleImageChange: handleImageChange,\n    handleDownload: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditorWrapper;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditorWrapper.js"],"names":["React","useState","useReducer","PDFViewer","PDFDocument","InputWrapper","downloadFile","CardEditorConstants","reducer","state","action","type","item","slice","index","updatedItem","property","value","Error","CardEditorWrapper","cards","dispatch","name","defaultName","japaneseName","defaultJapaneseName","age","defaultAge","job","defaultJob","image","defaultImage","currentCard","setCurrentCard","cardDocument","updateCurrentCard","newProp","newValue","console","log","handleNameChange","e","target","handleJapaneseNameChange","handleJobChange","handleAgeChange","handleImageChange","tempImage","files","URL","createObjectURL","handleDownload","height","PDFDimensions","width"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport { PDFViewer } from '@react-pdf/renderer';\n\n//custom files\nimport PDFDocument from './PDFDocument';\nimport InputWrapper from './InputWrapper';\nimport downloadFile from './downloadFile.js';\nimport * as CardEditorConstants from './CardEditorConstants.js';\n\n//reducer to change state in react\n//to add a new card use dispatch({ type: 'add', item: movie })\n//to remove an existing card use dispatch({ type: 'remove', index })\n//to update an existing card use dispatch({ type: 'remove', index, value, property })\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return [...state, action.item];\n    case 'remove':\n      return [\n        ...state.slice(0, action.index),\n        ...state.slice(action.index + 1)\n      ];\n    case 'update':\n      let updatedItem = state[action.index];\n      updatedItem[action.property] = action.value;\n      return [\n        ...state.slice(0, action.index),\n        updatedItem,\n        ...state.slice(action.index + 1)\n      ]\n    default:\n      throw new Error();\n  }\n}\n\n//wrapper for card editor section (including input + PDF)\nfunction CardEditorWrapper(){\n  const [cards, dispatch] = useReducer(reducer, [\n    {\n      name : CardEditorConstants.defaultName,\n      japaneseName : CardEditorConstants.defaultJapaneseName,\n      age : CardEditorConstants.defaultAge,\n      job : CardEditorConstants.defaultJob,\n      image : CardEditorConstants.defaultImage,\n    }\n  ]);\n  const [currentCard, setCurrentCard] = useState(cards[0]);\n\n  //PDF document\n  const cardDocument = (\n    <PDFDocument\n      name={currentCard.name}\n      japaneseName={currentCard.japaneseName}\n      job={currentCard.job}\n      age={currentCard.age}\n      image={currentCard.image}\n    />\n  )\n\n  //returns a new card details object with newValue for newProp\n  const updateCurrentCard = (newProp, newValue) => {\n    console.log(newProp, newValue, {[newProp]: newValue})\n    return {\n      ...currentCard,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleNameChange = (e) => {\n    setCurrentCard(updateCurrentCard(\"name\", e.target.value));\n    console.log(currentCard.name);\n  }\n  const handleJapaneseNameChange = (e) => {\n    setCurrentCard(updateCurrentCard(\"japaneseName\", e.target.value));\n  }\n  const handleJobChange = (e) => {\n    setCurrentCard(updateCurrentCard(\"job\", e.target.value));\n  }\n  const handleAgeChange = (e) => {\n    setCurrentCard(updateCurrentCard(\"age\", e.target.value));\n  }\n  const handleImageChange = (e) => {\n    const tempImage = (e.target.files[0]) ? URL.createObjectURL(e.target.files[0]) : CardEditorConstants.defaultImage;\n    setCurrentCard(updateCurrentCard(\"image\", tempImage));\n  }\n  const handleDownload = (e) => {\n    downloadFile(cardDocument, currentCard.name + \".pdf\");\n  }\n\n  return (\n    <div>\n      <div className=\"PDFWrapper\" style={{\n        height: CardEditorConstants.PDFDimensions.height * 2,\n        width: CardEditorConstants.PDFDimensions.width * 2\n      }}>\n        <PDFViewer scrolling=\"no\" className=\"PDFViewer\">\n          {cardDocument}\n        </PDFViewer>\n      </div>\n      <InputWrapper\n        handleNameChange={handleNameChange}\n        handleJapaneseNameChange={handleJapaneseNameChange}\n        handleAgeChange={handleAgeChange}\n        handleJobChange={handleJobChange}\n        handleImageChange={handleImageChange}\n        handleDownload={handleDownload}\n      />\n    </div>\n  );\n}\n\nexport default CardEditorWrapper;\n"]},"metadata":{},"sourceType":"module"}