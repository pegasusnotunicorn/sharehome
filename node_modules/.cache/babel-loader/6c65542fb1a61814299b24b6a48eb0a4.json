{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js\";\nimport React, { useState } from 'react'; //custom files\n\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js'; //wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\n\nfunction CardEditor(props) {\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard; //returns a new card details object with newValue for newProp\n\n  const updateAndReturnCurrentCard = (newProp, newValue, object) => {\n    let tempObject = object ? object : currentCard;\n    return { ...tempObject,\n      [newProp]: newValue\n    };\n  }; //event handlers for inputs\n\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'image':\n        if (e.target.files[0]) {\n          let img = new Image();\n\n          img.onload = function () {\n            let tempCard = updateAndReturnCurrentCard(\"image\", {\n              url: URL.createObjectURL(e.target.files[0]),\n              name: e.target.files[0].name,\n              width: this.width,\n              height: this.height\n            });\n            setCurrentCard(tempCard);\n            URL.revokeObjectURL(tempImageURL);\n          };\n\n          img.src = tempImageURL;\n        }\n\n        break;\n\n      case 'download':\n        downloadPDFFile( /*#__PURE__*/React.createElement(PDFDocument, {\n          cards: props.cards,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        }), currentCard.name + \".pdf\");\n        break;\n\n      default:\n        setCurrentCard(updateAndReturnCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }; //handling image movement\n\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const [imageCoordinates, setimageCoordinates] = useState({\n    objectPosition: \"50% 50%\"\n  });\n\n  const handleMouseDown = e => {\n    setMouseDown(true);\n  };\n\n  const handleMouseUp = e => {\n    setMouseDown(false);\n  };\n\n  const handleMouseMove = e => {\n    if (mouseDown) {\n      console.log(currentCard.image.height, currentCard.image.width); //e.clientY where mouse is\n      //e.target.clientHeight total height of container\n      //currentCard.image.height height of image\n\n      setimageCoordinates({\n        objectPosition: \"50%\" + Math.round(e.clientY / e.target.clientHeight * 100) + \"%\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardViewer, {\n    currentCard: currentCard,\n    handleMouseDown: handleMouseDown,\n    handleMouseUp: handleMouseUp,\n    handleMouseMove: handleMouseMove,\n    imageCoordinates: imageCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleInputChange: handleInputChange,\n    currentCard: currentCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardEditor;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js"],"names":["React","useState","PDFDocument","downloadPDFFile","CardViewer","InputWrapper","CardEditor","props","currentCard","setCurrentCard","updateAndReturnCurrentCard","newProp","newValue","object","tempObject","handleInputChange","e","target","name","files","img","Image","onload","tempCard","url","URL","createObjectURL","width","height","revokeObjectURL","tempImageURL","src","cards","value","mouseDown","setMouseDown","imageCoordinates","setimageCoordinates","objectPosition","handleMouseDown","handleMouseUp","handleMouseMove","console","log","image","Math","round","clientY","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n//custom files\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js';\n\n//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditor(props){\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard;\n\n  //returns a new card details object with newValue for newProp\n  const updateAndReturnCurrentCard = (newProp, newValue, object) => {\n    let tempObject = (object) ? object : currentCard;\n    return {\n      ...tempObject,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case 'image':\n        if (e.target.files[0]){\n          let img = new Image();\n          img.onload = function () {\n            let tempCard = updateAndReturnCurrentCard(\"image\", {\n              url: URL.createObjectURL(e.target.files[0]),\n              name: e.target.files[0].name,\n              width: this.width,\n              height: this.height\n            });\n            setCurrentCard(tempCard);\n\n            URL.revokeObjectURL(tempImageURL);\n          };\n          img.src = tempImageURL;\n        }\n        break;\n      case 'download':\n        downloadPDFFile(<PDFDocument\n          cards={props.cards}\n        />, currentCard.name + \".pdf\");\n        break;\n      default:\n        setCurrentCard(updateAndReturnCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }\n\n  //handling image movement\n  const [mouseDown, setMouseDown] = useState(false);\n  const [imageCoordinates, setimageCoordinates] = useState({\n    objectPosition: \"50% 50%\"\n  });\n\n  const handleMouseDown = (e) => {\n    setMouseDown(true);\n  }\n  const handleMouseUp = (e) => {\n    setMouseDown(false);\n  }\n  const handleMouseMove = (e) => {\n    if (mouseDown){\n      console.log(currentCard.image.height, currentCard.image.width);\n      //e.clientY where mouse is\n      //e.target.clientHeight total height of container\n      //currentCard.image.height height of image\n      setimageCoordinates({\n        objectPosition: \"50%\" + Math.round((e.clientY / e.target.clientHeight)*100) + \"%\"\n      });\n    }\n  }\n\n  return (\n    <div>\n      <CardViewer\n        currentCard={currentCard}\n        handleMouseDown={handleMouseDown}\n        handleMouseUp={handleMouseUp}\n        handleMouseMove={handleMouseMove}\n        imageCoordinates={imageCoordinates}\n      />\n      <InputWrapper\n        handleInputChange={handleInputChange}\n        currentCard={currentCard}\n      />\n    </div>\n  );\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}