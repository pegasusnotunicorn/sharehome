{"ast":null,"code":"var _jsxFileName = \"/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js\";\nimport React, { useState } from 'react'; //custom files\n\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport { getImageObject } from './CardConstants.js';\nimport { viewerHeight, viewerWidth } from '../../css/PDFViewerDynamicStyles.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js'; //wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\n\nfunction CardEditor(props) {\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard; //returns a new card details object with newValue for newProp\n\n  const updateAndReturnCurrentCard = (newProp, newValue) => {\n    return { ...currentCard,\n      [newProp]: newValue\n    };\n  }; //event handlers for inputs\n\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'image':\n        if (e.target.files[0]) {\n          const tempImageURL = URL.createObjectURL(e.target.files[0]);\n          const tempImageName = e.target.files[0].name; //get new details (width / height) of uploaded image and generate a new image object\n\n          let img = new Image();\n\n          img.onload = function () {\n            let tempCard = updateAndReturnCurrentCard(\"image\", getImageObject(tempImageURL, tempImageName, img.width, img.height));\n            setCurrentCard(tempCard);\n            URL.revokeObjectURL(tempImageURL);\n          };\n\n          img.src = tempImageURL;\n        }\n\n        break;\n\n      case 'download':\n        downloadPDFFile( /*#__PURE__*/React.createElement(PDFDocument, {\n          cards: props.cards,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }), currentCard.name + \".pdf\");\n        break;\n\n      default:\n        setCurrentCard(updateAndReturnCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }; //handling image movement\n\n\n  const [startingCoords, setStartingCoords] = useState(false); //set starting coordinates on mouse down\n\n  const handleMouseDown = e => {\n    let mouseXY = getMouseXY(e);\n    setStartingCoords({\n      x: mouseXY.x,\n      y: mouseXY.y\n    });\n  };\n\n  const handleMouseUp = e => {\n    setStartingCoords(false);\n  };\n\n  const handleMouseMove = e => {\n    //if mouse down\n    if (startingCoords) {\n      let mouseXY = getMouseXY(e);\n      let deltaX = startingCoords.x - mouseXY.x;\n      let deltaY = startingCoords.y - mouseXY.y;\n      setStartingCoords({\n        x: mouseXY.x,\n        y: mouseXY.y\n      }); //dont let the image move outside of the bounds of the viewer\n\n      let newX = currentCard.image.viewerX - deltaX;\n      let newY = currentCard.image.viewerY - deltaY;\n      newY = newY > 0 ? 0 : newY; //click to drag/move image\n\n      let tempCard = updateAndReturnCurrentCard(\"image\", { ...currentCard.image,\n        viewerX: newX,\n        viewerY: newY\n      });\n      setCurrentCard(tempCard);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardViewer, {\n    currentCard: currentCard,\n    handleMouseDown: handleMouseDown,\n    handleMouseUp: handleMouseUp,\n    handleMouseMove: handleMouseMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    handleInputChange: handleInputChange,\n    currentCard: currentCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getMouseXY(e) {\n  let rect = e.currentTarget.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left,\n    //x position within the element.\n    y: e.clientY - rect.top //y position within the element.\n\n  };\n}\n\nexport default CardEditor;","map":{"version":3,"sources":["/Users/1min/Documents/sharehome/src/components/CardEditor/CardEditor.js"],"names":["React","useState","PDFDocument","downloadPDFFile","getImageObject","viewerHeight","viewerWidth","CardViewer","InputWrapper","CardEditor","props","currentCard","setCurrentCard","updateAndReturnCurrentCard","newProp","newValue","handleInputChange","e","target","name","files","tempImageURL","URL","createObjectURL","tempImageName","img","Image","onload","tempCard","width","height","revokeObjectURL","src","cards","value","startingCoords","setStartingCoords","handleMouseDown","mouseXY","getMouseXY","x","y","handleMouseUp","handleMouseMove","deltaX","deltaY","newX","image","viewerX","newY","viewerY","rect","currentTarget","getBoundingClientRect","clientX","left","clientY","top"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n//custom files\nimport PDFDocument from './PDFDocument.js';\nimport downloadPDFFile from '../utils/downloadPDFFile.js';\nimport { getImageObject } from './CardConstants.js';\nimport { viewerHeight, viewerWidth } from '../../css/PDFViewerDynamicStyles.js';\nimport CardViewer from './CardViewer.js';\nimport InputWrapper from './InputWrapper.js';\n\n//wrapper for card editor section (including input + PDF)\n//needs to get via props, the currentCard and setter for changing currentCard properties\nfunction CardEditor(props){\n  const currentCard = props.currentCard;\n  const setCurrentCard = props.setCurrentCard;\n\n  //returns a new card details object with newValue for newProp\n  const updateAndReturnCurrentCard = (newProp, newValue) => {\n    return {\n      ...currentCard,\n      [newProp]: newValue\n    }\n  }\n\n  //event handlers for inputs\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case 'image':\n        if (e.target.files[0]){\n          const tempImageURL = URL.createObjectURL(e.target.files[0]);\n          const tempImageName = e.target.files[0].name;\n\n          //get new details (width / height) of uploaded image and generate a new image object\n          let img = new Image();\n          img.onload = function () {\n            let tempCard = updateAndReturnCurrentCard(\"image\", getImageObject(\n              tempImageURL,\n              tempImageName,\n              img.width,\n              img.height,\n            ));\n            setCurrentCard(tempCard);\n            URL.revokeObjectURL(tempImageURL);\n          };\n          img.src = tempImageURL;\n        }\n        break;\n      case 'download':\n        downloadPDFFile(<PDFDocument\n          cards={props.cards}\n        />, currentCard.name + \".pdf\");\n        break;\n      default:\n        setCurrentCard(updateAndReturnCurrentCard(e.target.name, e.target.value));\n        break;\n    }\n  }\n\n  //handling image movement\n  const [startingCoords, setStartingCoords] = useState(false);\n\n  //set starting coordinates on mouse down\n  const handleMouseDown = (e) => {\n    let mouseXY = getMouseXY(e);\n    setStartingCoords({\n      x: mouseXY.x,\n      y: mouseXY.y\n    });\n  }\n  const handleMouseUp = (e) => {\n    setStartingCoords(false);\n  }\n  const handleMouseMove = (e) => {\n    //if mouse down\n    if (startingCoords){\n      let mouseXY = getMouseXY(e);\n      let deltaX = startingCoords.x - mouseXY.x;\n      let deltaY = startingCoords.y - mouseXY.y;\n\n      setStartingCoords({\n        x: mouseXY.x,\n        y: mouseXY.y,\n      });\n\n      //dont let the image move outside of the bounds of the viewer\n      let newX = currentCard.image.viewerX - deltaX;\n      let newY = currentCard.image.viewerY - deltaY;\n      newY = (newY > 0) ? 0 : newY;\n\n      //click to drag/move image\n      let tempCard = updateAndReturnCurrentCard(\"image\", {\n        ...currentCard.image,\n        viewerX: newX,\n        viewerY: newY,\n      });\n      setCurrentCard(tempCard);\n    }\n  }\n\n  return (\n    <div>\n      <CardViewer\n        currentCard={currentCard}\n        handleMouseDown={handleMouseDown}\n        handleMouseUp={handleMouseUp}\n        handleMouseMove={handleMouseMove}\n      />\n      <InputWrapper\n        handleInputChange={handleInputChange}\n        currentCard={currentCard}\n      />\n    </div>\n  );\n}\n\nfunction getMouseXY(e){\n  let rect = e.currentTarget.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left, //x position within the element.\n    y: e.clientY - rect.top,  //y position within the element.\n  }\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}